{"version":3,"sources":["components/Buttons.module.css","components/Group.module.css","components/Sidebar.module.css","components/User.module.css","components/Card.module.css","components/MainPage.module.css","components/TopBar.module.css","components/Server.module.css","components/Status.module.css","components/Flex.module.css","components/PageContainer.module.css","components/Header.module.css","JsonApi.js","api.js","components/PageContainer.js","testing/ABtesting.js","locales/config.js","components/Sidebar.js","components/Status.js","components/Buttons.js","components/Flex.js","components/Card.js","components/Header.js","components/User.js","components/Group.js","components/MainPage.js","components/Server.js","views/Account.js","views/Developer.js","views/Server.js","views/Group.js","views/index.js","views/Main.js","App.js","index.js"],"names":["module","exports","endPoints","dev","prod","OperationsApi","asyncUser","this","logoutAndChangeUser","user","a","fetchMethod","getUserInfo","sid","playername","reason","playerId","postJsonMethod","name","gid","map","time","toString","team","getJsonMethod","devGroups","Error","groupName","discordId","modRole","adminRole","remid","type","value","answer","error","message","uid","nickname","alias","server","game","data","isWorking","window","location","constructApiUrl","method","params","paramStr","s","fetch","credentials","options","body","JSON","stringify","headers","errorHandler","postMethod","response","then","result","json","length","spawnError","code","defaultUser","discord","discriminator","avatar","auth","inGuild","isAdmin","isDeveloper","isOwner","signedIn","hasOwnProperty","PageContainer","props","className","styles","children","PageColumn","keys","rollout","getChannel","storageKey","localStorage","storageItemTest","getItem","testValue","Math","floor","random","setItem","resources","translation","translationEN","translationCH","i18n","use","initReactI18next","LanguageDetector","init","fallbackLng","TopSidebar","t","useTranslation","to","title","src","Logo","PageLink","activeClassName","PageLinkActive","content","PageButton","target","rel","href","onClick","AddIcon","viewBox","sideIcon","fill","d","WrenchIcon","Sidebar","A","B","key","useQuery","userError","isLoading","devLink","accountLink","logoutLink","groupLinks","history","useHistory","queryClient","useQueryClient","logoutExecutor","useMutation","v","logout","onMutate","cancelQueries","prevUser","getQueryData","setQueryData","old","push","onSettled","variables","context","invalidateQueries","devOptionsContent","addGroupContent","i","switchingTest","mutate","permissions","isAdminOf","group","id","style","display","flexGrow","flexDirection","overflowY","marginBottom","GroupLinks","paddingLeft","fontSize","APP_VERSION","LoadingIcon","loadingIcon","ErrorIcon","errorIcon","Status","notEnabled","undefined","status","Button","background_color","width","button","disabled","callback","ButtonLink","ButtonRow","buttonRow","TextInput","defaultValue","placeholder","onReset","onChange","SmallButton","_","vars","Switch","useState","checkedSwitch","clickSwitch","switchTheSwitch","newVal","useEffect","checked","switchClassName","SwitchActive","SwitchRow","isChecked","onKeyPress","e","charCode","role","tabIndex","SwitchInner","SwitchOn","SwitchOff","SwitchHandle","ChoosePageButtons","active","setActive","ChoosePageButtonHolder","buttons","ChoosePageButtonActive","ChoosePageButton","IconSelected","iconSelect","IconNotSelected","SelectableRow","React","selected","setSelcted","selectableRowSelected","selectableRow","p","Column","Row","Card","card","CardRow","PageCard","Tag","ModalControll","isShown","show","close","ModalContext","createContext","useModal","useContext","Modal","controller","modal","modalDisabled","modalBackground","modalContent","ModalProvider","controllerState","setControllerState","Provider","Header","UserRow","alt","Avatar","DiscordName","DiscordNum","secure","xmlns","UserStRow","dateAdded","Date","parse","addedAt","dateString","getDate","getMonth","String","getHours","padStart","getMinutes","DiscordId","DateAdded","FakeUserStRow","UserRowSt","GroupRow","GroupName","ServerRow","serverBadgePending","serverStatus","serverBadgeErr","serverBadgeOk","GameStatsAd","gameStatsAd","VBanList","getAutoBanList","isError","banList","searchWord","setSearchWord","unbanVGlobalBan","globalUnbanPlayer","previousBanList","filter","player","playerName","onError","err","newTodo","number","BanListing","includes","GlobalBanRow","BanRow","BanDisplayName","banReason","banReasonDetailed","globalUnban","GroupLogs","getGroupLogs","logList","logs","sort","b","timeStamp","maxHeight","marginTop","log","LogRow","Array","from","EmptyLogRow","datetime","action","getUTCDate","getFullYear","logRow","logAdmin","adminName","logReason","logTime","ListItem","header","LoginButton","MainPageComponent","MainPage","MainPageCard","titleBlock","titleContent","listing","SmallText","PlayerStatsModal","r","stats","statsBlock","skill","rank","killsPerMinute","winPercent","Accuracy","headshots","killDeath","ServerRotation","info","server_status","liveUpdate","update_timestamp","timestamp","getSeconds","rotationId","setRotationId","ServerInfoColumn","ServerDescriptionRow","serverImage","url","GameInfo","ServerName","prefix","mode","serverInfo","inQue","rotate","SwitchGame","rotation","index","mapname","serverStatusArray","serverBadge","PlayerInfo","players","moveTeam","PlayerRow","PlayerIndex","PlayerLevel","PlayerName","platoon","PlayerNone","PlayerButtons","PlayerButton","onMove","kickModal","eaid","banModal","PlayerPing","ping","ServerInfoHolder","ServerInfoRow","BanList","getBanList","borderCollapse","position","top","displayName","toLowerCase","admin","banned_until","ban_timestamp","FireStarter","getStarterList","starterList","amount","StarterRow","LogList","getServerLogs","logIcon","logAction","logPlayer","toPlayer","logReasonDetailed","VipList","getVipList","vipList","VipHeader","alignItems","VipRow","VipName","VipRowImg","Account","userLine","Developer","getDevGroups","groups","g","Server","serverCard","playerNicknameTeam","match","getServer","getServerGame","gameError","runningGame","playerList","setPlayerName","addVipStatus","changeAddVipStatus","removeVipStatus","changeRemoveVipStatus","unbanStatus","changeUnbanStatus","tabsListing","setTabsListing","UnbanPlayer","unbanPlayer","RemoveVip","removeVip","AddVip","addVip","movePlayer","previousGroup","serverTabs","teamId","setTeamId","catTabs","changeRotation","banlist","viplist","firestarter","loglist","protection","ServerAutomation","settings","ServerSettings","isOpsMode","isMovableModal","f1","find","f2","ServerBanPlayer","ServerKickPlayer","giveVip","marginRight","margin","allowedTo","kickOnPingDisabled","setKickOnPingDisabled","serverState","setServerState","canApply","setCanApply","applyStatus","setApplyStatus","autoBanKick","autoBfbanKick","autoGlobalBanMessage","autoPingKick","originalServerState","autoPingKickMessage","minAutoPingKick","newCanApply","changeSrerverState","editServerSettings","editServer","onSuccess","setTimeout","getServerValue","marginLeft","console","parseInt","errorUpdating","setError","serverName","serverAlias","alignSelf","opacity","setReason","kickApplyStatus","setKickApplyStatus","KickPlayer","kickPlayer","banTime","setBanTime","globalVsClassicBan","setGlobalVsClassicBan","banApplyStatus","setBanApplyStatus","userGettingError","BanPlayer","banPlayer","GlobalBanPlayer","globalBanPlayer","servers","isDisabled","maxWidth","deleteIcon","Group","getGroup","staleTime","groupError","removeAdmin","removeGroupAdmin","now","toUTCString","admins","removeServer","removeOwner","removeGroupOwner","owners","setListing","settingsListing","setSettingsListing","catListing","GroupOwners","onDelete","GroupAdmins","GroupServers","vbanlist","grouplogs","catSettings","account","GroupServerAccount","GroupDiscordSettings","danger","GroupDangerZone","pageCycle","settingsCycle","hasRights","setSelected","adminList","isSelected","AddGroupAdmin","o","item","changeSelected","ownerList","AddGroupOwner","owner","setSid","setRemid","cookie","editCookies","editGroup","validCookie","border","padding","borderRadius","color","background","adminId","setAdminId","modId","setModId","serverId","setServerId","discordGroupId","discordModRoleId","discordAdminRoleId","editDiscordDetails","setGroupName","editGroupName","setNickname","setUid","AddGroupOwnerExecute","addGroupOwner","UTCNow","canAdd","addAdminState","changeState","AddGroupAdminExecute","addGroupAdmin","updateState","values","newState","AddGroup","roleDisplay","addGroupState","AddNewGroupExecute","addGroup","refetchQueries","checkInputVariables","newVariables","newGroupState","newVars","DeleteGroup","thisGid","DeleteGroupExecute","removeGroup","previousGroups","AddGroupServer","AddGroupServerExecute","addGroupServer","EditGroup","MakeOps","SetupOperations","setupOps","Views","exact","path","component","Main","createHashHistory","App","useLocation","TransitionGroup","CSSTransition","classNames","timeout","hash","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.8fe501ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRow\":\"Buttons_buttonRow__dKjZj\",\"button\":\"Buttons_button__1VKNK\",\"container\":\"Buttons_container__np2ep\",\"dropdown\":\"Buttons_dropdown__13J8f\",\"ul\":\"Buttons_ul__3tJo8\",\"li\":\"Buttons_li__1sX4Q\",\"TextInput\":\"Buttons_TextInput__35GbL\",\"SmallButton\":\"Buttons_SmallButton__3rzhd\",\"Switch\":\"Buttons_Switch__39fTc\",\"SwitchActive\":\"Buttons_SwitchActive__2ViHx\",\"SwitchInner\":\"Buttons_SwitchInner__3LnS9\",\"SwitchHandle\":\"Buttons_SwitchHandle__2b8wJ\",\"SwitchOff\":\"Buttons_SwitchOff__3Oaf-\",\"SwitchOn\":\"Buttons_SwitchOn__1_Jsb\",\"SwitchRow\":\"Buttons_SwitchRow__3WA6c\",\"ChoosePageButton\":\"Buttons_ChoosePageButton__1-OpM\",\"ChoosePageButtonActive\":\"Buttons_ChoosePageButtonActive__13GmV\",\"ChoosePageButtonHolder\":\"Buttons_ChoosePageButtonHolder__VfFyz\",\"selectableRow\":\"Buttons_selectableRow__V-YSj\",\"selectableRowSelected\":\"Buttons_selectableRowSelected__AlZEt\",\"iconSelect\":\"Buttons_iconSelect__EU1hH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupRow\":\"Group_GroupRow__1Ew1c\",\"GroupName\":\"Group_GroupName__3G6eX\",\"gameStatsAd\":\"Group_gameStatsAd__2Eob_\",\"logAdmin\":\"Group_logAdmin__1TOK4\",\"logPlayer\":\"Group_logPlayer__1Mapx\",\"logAction\":\"Group_logAction__2UECK\",\"logReason\":\"Group_logReason__8BHZZ\",\"logRow\":\"Group_logRow__YNVWa\",\"BanRow\":\"Group_BanRow__v5SxK\",\"banReasonDetailed\":\"Group_banReasonDetailed__3HFsw\",\"BanDisplayName\":\"Group_BanDisplayName__15HMw\",\"banReason\":\"Group_banReason__1ofIN\",\"globalUnban\":\"Group_globalUnban__v-kk5\",\"serverBadgeErr\":\"Group_serverBadgeErr__1dzxV\",\"serverBadgeOk\":\"Group_serverBadgeOk__2BwfX\",\"serverBadgePending\":\"Group_serverBadgePending__3AuNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLink\":\"Sidebar_PageLink__3fxKj\",\"PageButton\":\"Sidebar_PageButton__3ug-M\",\"PageLinkActive\":\"Sidebar_PageLinkActive___nnPr\",\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"Logo\":\"Sidebar_Logo__2HFo5\",\"TopSidebar\":\"Sidebar_TopSidebar__BQCyG\",\"sideIcon\":\"Sidebar_sideIcon__72aBF\",\"GroupLinks\":\"Sidebar_GroupLinks__8lkHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserRow\":\"User_UserRow__1fzJH\",\"Avatar\":\"User_Avatar__3XgeX\",\"DiscordName\":\"User_DiscordName__j-kJJ\",\"DiscordNum\":\"User_DiscordNum__odqe3\",\"secure\":\"User_secure__ADMpb\",\"UserRowSt\":\"User_UserRowSt__D7e-x\",\"DiscordId\":\"User_DiscordId__CJ0BY\",\"DateAdded\":\"User_DateAdded__1FZZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"CardRow\":\"Card_CardRow__1NbF3\",\"PageCard\":\"Card_PageCard__3UgmB\",\"Tag\":\"Card_Tag__gwAfh\",\"modalDisabled\":\"Card_modalDisabled__1amMq\",\"modal\":\"Card_modal__2zuep\",\"modalContent\":\"Card_modalContent__QUirv\",\"modalBackground\":\"Card_modalBackground__i6ZMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPageCard\":\"MainPage_MainPageCard__20zHQ\",\"MainPage\":\"MainPage_MainPage__2QR_f\",\"titleBlock\":\"MainPage_titleBlock__3Cu7O\",\"listing\":\"MainPage_listing__1JWXi\",\"ListItem\":\"MainPage_ListItem__1n0An\",\"titleContent\":\"MainPage_titleContent__QdrEG\",\"LoginButton\":\"MainPage_LoginButton__3Flzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"TopBar_bar__3bwJz\",\"barWrap\":\"TopBar_barWrap__13cVT\",\"mainPage\":\"TopBar_mainPage__28WNk\",\"logo\":\"TopBar_logo__3pe6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SmallText\":\"Server_SmallText__3uOYG\",\"ServerInfoColumn\":\"Server_ServerInfoColumn__35hJK\",\"ServerInfoRow\":\"Server_ServerInfoRow__2Aa7V\",\"serverImage\":\"Server_serverImage__3m2nE\",\"ServerName\":\"Server_ServerName__2irVE\",\"GameInfo\":\"Server_GameInfo__X3Hhq\",\"ServerDescriptionColumn\":\"Server_ServerDescriptionColumn__3pNJs\",\"ServerDescriptionRow\":\"Server_ServerDescriptionRow__12wsx\",\"SwitchGame\":\"Server_SwitchGame__3MjHo\",\"SettingsRow\":\"Server_SettingsRow__2yzpg\",\"SmallInput\":\"Server_SmallInput__1fZ_Z\",\"PlayerRow\":\"Server_PlayerRow__29Z8B\",\"PlayerName\":\"Server_PlayerName__3tLfO\",\"PlayerIndex\":\"Server_PlayerIndex__37b5y\",\"PlayerPing\":\"Server_PlayerPing__31qCm\",\"PlayerLevel\":\"Server_PlayerLevel__1Z7Ur\",\"PlayerNone\":\"Server_PlayerNone__2swFS\",\"playerBackgroundInfo\":\"Server_playerBackgroundInfo__27qMt\",\"PlayerButtons\":\"Server_PlayerButtons__3dQvb\",\"PlayerButton\":\"Server_PlayerButton__1b5UO\",\"serverStatus\":\"Server_serverStatus__2bq0e\",\"serverStatusOk\":\"Server_serverStatusOk__g8kKz\",\"serverStatusErr\":\"Server_serverStatusErr__3kLiy\",\"BanRow\":\"Server_BanRow__2CH-s\",\"VipRow\":\"Server_VipRow__11VYU\",\"BanDisplayName\":\"Server_BanDisplayName__1mYLa\",\"VipRowImg\":\"Server_VipRowImg__2uQKq\",\"VipName\":\"Server_VipName__1vh7h\",\"VipHeader\":\"Server_VipHeader__17wNH\",\"logAdmin\":\"Server_logAdmin__h3EXT\",\"logPlayer\":\"Server_logPlayer__3ubbb\",\"logAction\":\"Server_logAction__chE4g\",\"logReason\":\"Server_logReason__1SNMU\",\"logRow\":\"Server_logRow__3r-zZ\",\"logReasonDetailed\":\"Server_logReasonDetailed__uRKTP\",\"logIcon\":\"Server_logIcon__2eNHD\",\"serverBadgeErr\":\"Server_serverBadgeErr__3txr9\",\"serverBadgeOk\":\"Server_serverBadgeOk__1vnEH\",\"serverBadgePending\":\"Server_serverBadgePending__KFlxu\",\"serverBadge\":\"Server_serverBadge__2dEUL\",\"serverStatusArray\":\"Server_serverStatusArray__SklvZ\",\"liveUpdate\":\"Server_liveUpdate__2AkO3\",\"livePulse\":\"Server_livePulse__2PWwz\",\"liveUpdateText\":\"Server_liveUpdateText__3iOfu\",\"statsBlock\":\"Server_statsBlock__14xqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1LWe8\",\"loadingIcon\":\"Status_loadingIcon__3owGX\",\"Loading\":\"Status_Loading__v1uza\",\"errorIcon\":\"Status_errorIcon__2HXFb\",\"Shake\":\"Status_Shake__30h0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Flex_Column__3cQ9_\",\"Row\":\"Flex_Row__3SC-0\",\"Grow\":\"Flex_Grow__f7am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContainer\":\"PageContainer_PageContainer__1PlzU\",\"PageColumn\":\"PageContainer_PageColumn__3Qegy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3VoE2\"};","\nconst MODE = \"prod\";\n\nconst endPoints = {\n    dev: \"https://homedev.gametools.network/api/\",\n    prod: \"https://manager-api.gametools.network/api/\"\n}\n\nexport default class JsonClient {\n    constructor() {\n        this.isWorking = true;\n        this.user = this.getUserInfo();\n    }\n    openLoginPage() {\n        window.location = this.constructApiUrl(\"login\");\n    }\n    constructApiUrl(method, params) {\n        params = params || {};\n        let paramStr = \"\";\n        for (let s in params) {\n            paramStr += s + \"=\" + params[s] + \"&\";\n        }\n        if (paramStr !== \"\") paramStr = \"?\" + paramStr;\n        const apiEP = endPoints[MODE];\n        return apiEP + method + paramStr;\n    }\n    async fetchMethod(method, params) {\n        return fetch(this.constructApiUrl(method, params), {\n            credentials: \"include\"\n        });\n    }\n    async postMethod(method, params) {\n        return fetch(this.constructApiUrl(method, {}), params);\n    }\n    /// Returns Promise\n    postJsonMethod(method, params) {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(params),\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return this.errorHandler(this.postMethod(method, options));\n    }\n    /// Returns Promise\n    getJsonMethod(method, params) {\n        return this.errorHandler(this.fetchMethod(method, params));\n    }\n    async errorHandler(response) {\n        return response.then(\n            result => {\n                return result.json().then(\n                    json => {\n                        if (\"error\" in json) {\n                            throw json.error;\n                        }\n                        if (\"data\" in json) {\n                            if (json.data.length > 0) {\n                                if (\"error\" in json.data[0]) {\n                                    throw json.data[0].error;\n                                }\n                            }\n                        }\n                        return json;\n                    },\n                    error => this.spawnError(error, 600)\n                );\n            },\n            error => this.spawnError(error, response.code)\n        );\n    }\n    spawnError(error, code) {\n        throw {\n            \"error\": {\n                \"message\": error,\n                \"code\": code,\n            }\n        };\n    }\n    async getUserInfo() {\n        const defaultUser = {\n            discord: {\n            name: \"\",\n            discriminator: 0,\n            avatar: \"\"\n            },\n            auth: {\n                inGuild: false,\n                isAdmin: false,\n                isDeveloper: false,\n                isOwner: false,\n                signedIn: false\n            }\n        };\n        let response = await this.getJsonMethod(\"getinfo\");\n        if (!response.hasOwnProperty(\"error\")) {\n            return response;\n        }\n        return defaultUser;\n    }\n}","import JsonClient from \"./JsonApi\";\n\nexport class ApiProvider extends JsonClient {\n\n    logout() {\n        var asyncUser = this.logoutAndChangeUser();\n        this.user = asyncUser;\n    }\n\n    async logoutAndChangeUser() {\n        await this.fetchMethod(\"logout/\");\n        var user = await this.getUserInfo();\n        return user;\n    }\n\n    async kickPlayer({ sid, playername, reason, playerId }) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"changeplayer\", {\n                \"request\": \"kickPlayer\",\n                \"playername\": playername,\n                \"playerid\": playerId,\n                \"serverid\": sid,\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"changeplayer\", {\n            \"request\": \"kickPlayer\",\n            \"playername\": playername,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async globalBanPlayer({ name, reason, gid, playerId}) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"addautoban\", {\n                \"playername\": name,\n                \"playerid\": playerId,\n                \"groupid\": gid,\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"addautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": reason\n        });\n    }\n\n    async globalUnbanPlayer({ name, gid}) {\n        return await this.postJsonMethod(\"delautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": \"\"\n        });\n    }\n\n    async changeRotation({ sid, map }) {\n        return await this.postJsonMethod(\"changelevel\", {\n            \"mapnumber\": map,\n            \"serverid\": sid\n        });\n    }\n\n    async banPlayer({ name, reason, time, sid, playerId }) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"changeserver\", {\n                \"request\": \"addServerBan\",\n                \"playername\": name,\n                \"playerid\": playerId,\n                \"serverid\": sid,\n                \"bantime\": time.toString(),\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"bantime\": time.toString(),\n            \"reason\": reason\n        }); \n    }\n\n    async unbanPlayer({ name, reason, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async addVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async removeVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async movePlayer({ sid, team, name }) {\n        return await this.postJsonMethod(\"moveplayer\", {\n            \"teamid\": team,\n            \"playername\": name,\n            \"serverid\": sid\n        });\n    }\n\n    async getBanList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"bannedList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getStarterList({ sid }) {\n        return await this.getJsonMethod(\"firestarters\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getAutoBanList({ gid }) {\n        return await this.getJsonMethod(\"autoban\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getVipList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"vipList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getServerLogs({ sid }) {\n        return await this.getJsonMethod(\"tailserverlog\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getGroupLogs({ gid }) {\n        return await this.getJsonMethod(\"tailuserlog\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getDevGroups() {\n        var devGroups = await this.getJsonMethod(\"devgroups\");\n        if (\"error\" in devGroups) {\n            throw Error(\"Error on server.\");\n        }\n        return devGroups;\n    }\n\n    async addGroup({ groupName, discordId, modRole, adminRole, sid, remid }) {\n        return await this.postJsonMethod(\"addgroup\", {\n            \"groupname\": groupName,\n            \"adminroleid\": adminRole,\n            \"discordid\": discordId,\n            \"modroleid\": modRole,\n            \"remid\": remid,\n            \"sid\": sid,\n        });\n    }\n\n    async removeGroup({ gid }) {\n        return await this.postJsonMethod(\"delgroup\", {\n            \"groupId\": gid,\n        });\n    }\n\n    async editGroup({ gid, type, value }) {\n        var answer = await this.postJsonMethod(\"editgroup\", {\n            \"groupid\": gid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n    async getGroup(gid) {\n        return await this.getJsonMethod(\"groups\", { \"groupid\": gid });\n    }\n\n    async addGroupOwner({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addowner\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupServer({ gid, name, alias }) {\n        return await this.postJsonMethod(\"addserver\", {\n            \"servername\": name,\n            \"serveralias\": alias,\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupAdmin({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addadmin\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupAdmin({ gid, uid }) {\n        return await this.postJsonMethod(\"deladmin\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupOwner({ gid, uid }) {\n        return await this.postJsonMethod(\"delowner\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async setupOps({ server, sid, remid }) {\n        return await this.postJsonMethod(\"makeoperations\", {\n            \"servername\": server,\n            \"sid\": sid,\n            \"remid\": remid,\n        });\n    }\n\n\n    async getServer(sid) {\n        return await this.getJsonMethod(\"server\", { \"serverid\": sid });\n    }\n\n    async getServerGame(sid) {\n        var game = await this.getJsonMethod(\"servers\", { \"serverid\": sid });\n        if (\"error\" in game.data[0]) {\n            throw Error(game.data[0].error);\n        } else {\n            return game;\n        }\n    }\n\n    async removeServer({ gid, sid }) {\n        return await this.postJsonMethod(\"delserver\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n        });\n    }\n\n    async renameServer({ name, sid }) {\n        return await this.postJsonMethod(\"renameserver\", {\n            \"serverid\": sid,\n            \"servername\": name,\n        });\n    }\n\n    async changeServerAlias({ gid, alias, sid }) {\n        return await this.postJsonMethod(\"serveralias\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n            \"serveralias\": alias,\n        });\n    }\n\n    async editServer({ sid, value }) {\n        var answer = await this.postJsonMethod(\"editserver\", {\n            \"serverid\": sid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n\n}\n\nexport const OperationsApi = new ApiProvider();","import React from \"react\";\nimport styles from \"./PageContainer.module.css\";\n\n\nexport function PageContainer(props) {\n    return (\n        <div className={styles.PageContainer}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport function PageColumn(props) {\n    return (\n        <div className={styles.PageColumn}>\n            {props.children}\n        </div>\n    );\n}\n","import rollout from \"../rollout.json\";\n\nconst fixedTest = null;\nconst keys = rollout[\"AB\"];\n\n// Switch for AB testing. Shows user A or B option to test new features\nexport default function ABSwitch(A, B, key) {\n    if (!(key in keys)) {\n        return A;\n    }\n    return switchingTest(A, B, getChannel());\n}\n\n// A or B channel\nexport function getChannel() {\n    const storageKey = 'TestAB';\n    if (fixedTest) {\n        return fixedTest;\n    }\n    if (localStorage) {\n        let storageItemTest = localStorage.getItem(storageKey);\n        if (storageItemTest) {\n            return storageItemTest;\n        } else {\n            const testValue = Math.floor(Math.random() * 10) % 2;\n            localStorage.setItem(storageKey, testValue);\n            return testValue;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction switchingTest(A, B, v) {\n    return (v === 1) ? B : A;\n}","import i18n from 'i18next';\nimport translationEN from './languages/en-US.json';\n// import translationTR from './languages/tr-TR.json';\n// import translationRU from './languages/ru-RU.json';\nimport translationCH from './languages/zh-CN.json';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const resources = {\n  \"en-US\": {\n    translation: translationEN,\n  },\n  // \"tr-TR\": {\n  //   translation: translationTR,\n  // },\n//   \"ru-RU\": {\n//     translation: translationRU,\n//   },\n  \"zh-CN\": {\n    translation: translationCH,\n  }\n}\n\ni18n.use(initReactI18next).use(LanguageDetector).init({\n  resources,\n  fallbackLng: \"en-US\"\n});\n\nexport const apiLanguage = {\n  \"zh-cn\": \"zh-tw\",\n}\n\nexport const getLanguage = () => {\n  let language = window.localStorage.i18nextLng.toLowerCase()\n  if (language in apiLanguage) {\n      language = apiLanguage[language]\n  }\n  return language\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./Sidebar.module.css\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\n\nfunction TopSidebar() {\n    const { t } = useTranslation();\n    return (\n        <div className={styles.TopSidebar}>\n            <Link to=\"/\" title={t(\"sidebar.main\")}>\n                <img src=\"/release-logo.png\" className={styles.Logo} />\n            </Link>\n        </div>\n    );\n}\n\nfunction PageLink(props) {\n    return (\n        <div className={styles.PageLink}>\n            <NavLink to={props.to} activeClassName={styles.PageLinkActive} title={props.name}>{props.content || props.name}</NavLink>\n        </div>\n    );\n}\n\nfunction PageButton(props) {\n    return (\n        <a className={styles.PageButton} target=\"_blank\" rel=\"noopener noreferrer\" href={props.href} title={props.name}>\n            <span onClick={props.onClick}>{props.name}</span>\n        </a>\n    );\n}\n\nfunction AddIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>);\n}\n\nfunction WrenchIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M13.78 15.3L19.78 21.3L21.89 19.14L15.89 13.14L13.78 15.3M17.5 10.1C17.11 10.1 16.69 10.05 16.36 9.91L4.97 21.25L2.86 19.14L10.27 11.74L8.5 9.96L7.78 10.66L6.33 9.25V12.11L5.63 12.81L2.11 9.25L2.81 8.55H5.62L4.22 7.14L7.78 3.58C8.95 2.41 10.83 2.41 12 3.58L9.89 5.74L11.3 7.14L10.59 7.85L12.38 9.63L14.2 7.75C14.06 7.42 14 7 14 6.63C14 4.66 15.56 3.11 17.5 3.11C18.09 3.11 18.61 3.25 19.08 3.53L16.41 6.2L17.91 7.7L20.58 5.03C20.86 5.5 21 6 21 6.63C21 8.55 19.45 10.1 17.5 10.1Z\" />\n    </svg>);\n}\n\n\n\nexport function Sidebar(props) {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    var devLink = \"\", accountLink = \"\", logoutLink = \"\", groupLinks = \"\";\n    const { t } = useTranslation();\n\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                });\n                history.push('/');\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n\n\n    if (!userError && !isLoading && user) {\n        if (user.auth.signedIn) {\n\n            const devOptionsContent = (\n                <>\n                    <span>{t(\"sidebar.devOptions\")}</span>\n                    <WrenchIcon />\n                </>\n            );\n\n            const addGroupContent = (\n                <>\n                    <span>{t(\"sidebar.createGroup\")}</span>\n                    <AddIcon />\n                </>\n            );\n\n            if (user.auth.isDeveloper) {\n                devLink = <PageLink to=\"/dev/\" name={t(\"sidebar.devOptions\")} content={devOptionsContent} />;\n            }\n\n            accountLink = [\n                ABSwitch(\"\", <PageLink key={0} to=\"/home/\" name=\"Home page\" />, \"homePage\"),\n                <PageLink key={1} to=\"/account/\" name=\"Account\" />,\n                <PageLink key={2} to=\"/group/new/\" name=\"Create Group\" content={addGroupContent} />,\n                <PageLink key={3} to=\"/makeops/\" name=\"Make Operations\" />,\n            ];\n            logoutLink = <PageButton onClick={() => { logoutExecutor.mutate({}); }} name={t(\"sidebar.logout\")} />;\n            groupLinks = [];\n            for (let i in user.permissions.isAdminOf) {\n                let group = user.permissions.isAdminOf[i];\n                groupLinks.push(<PageLink to={ \"/group/\" + group.id } name={group.groupName} key={i} />);\n            }\n                \n        }\n    }\n\n    \n\n    return (\n        <div className={styles.Sidebar}>\n            <TopSidebar />\n            <div style={{ display: \"flex\", flexGrow: 2, flexDirection: \"column\", overflowY: \"auto\", marginBottom: \"50px\" }}>\n                {accountLink}\n                {devLink}\n                <div className={styles.GroupLinks}>\n                    {groupLinks}\n                </div>\n                <PageButton href=\"https://discord.gametools.network/\" name={t(\"sidebar.help\")} />\n                {logoutLink}\n                \n            </div>\n            <p style={{ paddingLeft: \"48px\", fontSize: \"12px\" }}>v{APP_VERSION} channel {(getChannel() === 0) ? \"A\" : \"B\"}</p>\n        </div>\n    );\n\n}","import React from \"react\";\nimport styles from \"./Status.module.css\";\n\n\nfunction LoadingIcon() {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.loadingIcon}>\n            <path fill=\"currentColor\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    );\n}\n\nfunction ErrorIcon(props) {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.errorIcon}>\n            <path fill=\"currentColor\" d=\"M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z\" />\n        </svg>\n    );\n}\n\nexport function Status(props) {\n    const notEnabled = (props.status === undefined || props.status === null) ;\n    return (\n        <div className={notEnabled ? \"\" : styles.status}>\n            {(notEnabled) ?  \"\" : (props.status) ? <LoadingIcon /> : <ErrorIcon />}\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Buttons.module.css\";\nimport { Status } from \"./Status\";\n\n\nexport function Button(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}<Status status={props.status} /></button>\n    );\n}\n\nexport function ButtonLink(props) {\n    if (props.disabled) {\n        return <Button name={props.name} disabled={true} />\n    }\n    return (\n        <NavLink style={props.style} className={styles.button} to={props.to} title={props.name}>{props.name}</NavLink>\n    );\n}\n\nexport function ButtonRow(props) {\n    return (\n        <div className={styles.buttonRow}>{props.children}</div>\n    );\n}\n\n\nexport function TextInput(props) {\n    if (props.value === undefined) {\n        return <input defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />;\n    }\n    return <input value={props.value} defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />;\n}\n\nexport function SmallButton(props) {\n    if (props.disabled) {\n        return (\n            \"\"\n        );\n    }\n    return (\n        <div className={styles.SmallButton} onClick={_ => props.callback(props.vars)} title={props.name}>{props.content || props.name}</div>\n    );\n}\n\nexport function Switch(props) {\n\n    const [checkedSwitch, clickSwitch] = useState(false);\n\n    const switchTheSwitch = () => {\n        var newVal = !checkedSwitch;\n        clickSwitch(newVal);\n        if (props.callback) props.callback(newVal);\n    };\n\n    useEffect(() => {\n        if (props.checked !== null) {\n            clickSwitch(props.checked);\n        }\n    }, [props.checked])\n\n    /*  If user uses tabs, make it clickable on Enter key */\n    const SwitchOnenter = (e) => {\n        if (e.charCode === 13) switchTheSwitch();\n    };\n\n    const switchClassName = checkedSwitch ? styles.SwitchActive : styles.Switch;\n\n    return (\n        <div className={styles.SwitchRow}>\n            <div className={switchClassName} onClick={switchTheSwitch} isChecked={checkedSwitch} onKeyPress={SwitchOnenter} role=\"switch\" tabIndex=\"1\">\n                <span className={styles.SwitchInner}>\n                    <span className={styles.SwitchOn}></span>\n                    <span className={styles.SwitchOff}></span>\n                </span>\n                <span className={styles.SwitchHandle}></span>\n            </div>\n            <span>{props.name}</span>\n        </div>\n    );\n}\n\nexport function DropdownButton(props) {\n    const [open, setOpen] = useState(false);\n\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.container} ref={container}>\n            <button type=\"button\" className={styles.button} onClick={() => setOpen(!open)}>{props.name}</button>\n            {open && (<div className={styles.dropdown}>\n                <ul className={styles.ul}>\n                    {\n                        props.options.map(option => <li className={styles.li} onClick={option.callback}>{option.name}</li>)\n                    }\n                </ul>\n            </div>)}\n        </div>\n    );\n}\n\n\nexport function ChoosePageButtons(props) {\n\n    const [active, setActive] = useState(0);\n\n    return (\n        <div className={styles.ChoosePageButtonHolder} >\n            {\n                props.buttons.map((button, i) => (\n                    <div\n                        key={i}\n                        isChecked={i === active}\n                        role=\"switch\"\n                        className={(i === active) ? styles.ChoosePageButtonActive : styles.ChoosePageButton}\n                        onClick={_ => { setActive(i); button.callback() }}\n                        title={button.name}\n                        tabIndex=\"1\" \n                    >\n                        {button.content || button.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n    \n}\n\nfunction IconSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n        </svg>\n    );\n} \n\nfunction IconNotSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\" />\n        </svg>\n    );\n} \n\nexport function SelectableRow(props) {\n    const [selected, setSelcted] = React.useState(false);\n    const select = (p) => {\n        setSelcted(p);\n        props.callback(p);\n    }\n    return (\n        <div className={(selected) ? styles.selectableRowSelected : styles.selectableRow} onClick={() => select(!selected)}>\n            {\n                (selected) ? <IconSelected /> : <IconNotSelected />\n            }\n            {props.children}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport styles from \"./Flex.module.css\";\n\n\nexport function Column(props) {\n    return (\n        <div className={styles.Column}>{props.children}</div>\n    );\n}\n\nexport function Row(props) {\n    return (\n        <div className={styles.Row}>{props.children}</div>\n    );\n}\n\nexport function Grow(props) {\n    return (\n        <div className={styles.Grow}>{props.children}</div>\n    );\n}","import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nimport { ChoosePageButtons } from \"./Buttons.js\";\n\nexport function Card(props) {\n    return (\n        <div className={styles.card} style={props.style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function CardRow(props) {\n    return <span className={styles.CardRow}>{props.children}</span>;\n}\n\nexport function PageCard(props) {\n    return (\n        <>\n            <ChoosePageButtons buttons={props.buttons} />\n            <div className={styles.PageCard} style={props.style}>\n                {props.children}\n             </div>\n        </>\n    );\n}\n\nexport function Tag(props) {\n    return (\n        <span className={styles.Tag}>\n            {props.children}\n        </span>\n    );\n}\n\n\n\nconst ModalControll = {\n    isShown: false,\n    children: \"\",\n    show: (e) => {},\n    close: (e) => {},\n}\n\nconst ModalContext = React.createContext(ModalControll);\n\nexport const useModal = () => React.useContext(ModalContext);\n\nfunction Modal(props) {\n\n    const controller = useModal();\n\n    return (\n        <div className={props.show ? styles.modal : styles.modalDisabled}>\n            <div className={styles.modalBackground} onClick={() => controller.close()}></div>\n            <div className={styles.modalContent}>{props.content}</div>\n        </div>\n    );\n}\n\nexport function ModalProvider(props) {\n\n    const [controllerState, setControllerState] = React.useState({\n        isShown: false,\n        children: \"\",\n    });\n\n    const showModal = (e) => {\n        setControllerState(s => ({\n            ...s,\n            isShown: true,\n            children: e,\n        }));\n    }\n\n    const closeModal = () => {\n        setControllerState(s => ({\n            ...s,\n            isShown: false,\n        }));\n    }\n\n    return (\n        <ModalContext.Provider value={{...controllerState, show: showModal, close: closeModal}}>\n            <Modal show={controllerState.isShown} content={controllerState.children} />\n            {props.children}\n        </ModalContext.Provider>\n    );\n}","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\n\nexport function Header(props) {\n    return (\n        <div className={styles.Header}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport styles from \"./User.module.css\";\nimport { SelectableRow } from \"./Buttons\";\n\nexport function UserRow(props) {\n    var user = props.discord;\n    return (\n        <div className={styles.UserRow}>\n            <img alt=\"\" src={user.avatar} className={styles.Avatar} />\n            <div className={styles.DiscordName}>\n                {user.name}\n                <span className={styles.DiscordNum}>\n                    {user.discriminator}\n                </span>\n            </div>\n            <div className={styles.secure}>\n                <svg viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 12C6.39782 12 6.77935 11.842 7.06066 11.5607C7.34196 11.2794 7.5 10.8978 7.5 10.5C7.5 9.6675 6.825 9 6 9C5.60217 9 5.22064 9.15804 4.93934 9.43934C4.65804 9.72065 4.5 10.1022 4.5 10.5C4.5 10.8978 4.65804 11.2794 4.93934 11.5607C5.22064 11.842 5.60217 12 6 12ZM10.5 5.25C10.8978 5.25 11.2794 5.40804 11.5607 5.68934C11.842 5.97065 12 6.35218 12 6.75V14.25C12 14.6478 11.842 15.0294 11.5607 15.3107C11.2794 15.592 10.8978 15.75 10.5 15.75H1.5C1.10218 15.75 0.720644 15.592 0.43934 15.3107C0.158035 15.0294 0 14.6478 0 14.25V6.75C0 5.9175 0.675 5.25 1.5 5.25H2.25V3.75C2.25 2.75544 2.64509 1.80161 3.34835 1.09835C4.05161 0.395088 5.00544 0 6 0C6.49246 0 6.98009 0.0969967 7.43506 0.285452C7.89003 0.473907 8.30343 0.75013 8.65165 1.09835C8.99987 1.44657 9.27609 1.85997 9.46455 2.31494C9.653 2.76991 9.75 3.25754 9.75 3.75V5.25H10.5ZM6 1.5C5.40326 1.5 4.83097 1.73705 4.40901 2.15901C3.98705 2.58097 3.75 3.15326 3.75 3.75V5.25H8.25V3.75C8.25 3.15326 8.01295 2.58097 7.59099 2.15901C7.16903 1.73705 6.59674 1.5 6 1.5Z\" fill=\"#55F165\" />\n                </svg>\n                Logged in\n            </div>\n        </div>\n    );\n}\n\nexport function UserStRow(props) {\n    var user = props.user;\n    var dateAdded = new Date(Date.parse(user.addedAt));\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var dateString = `${dateAdded.getDate()} ${months[dateAdded.getMonth()]} ${String(dateAdded.getHours()).padStart(2, '0')}:${String(dateAdded.getMinutes()).padStart(2, '0')}`;\n    return (\n        <SelectableRow callback={props.callback}>\n            <div className={styles.DiscordName}>\n                {user.name}\n            </div>\n            <div className={styles.DiscordId}>\n                {user.id}\n            </div>\n            <div className={styles.DateAdded}>\n                {dateString}\n            </div>\n        </SelectableRow>\n    );\n}\n\nexport function FakeUserStRow(props) {\n    return (\n        <div className={styles.UserRowSt} />\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Group.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { OperationsApi } from \"../api\";\nimport { TextInput } from \"./Buttons\";\nimport { Tag } from \"./Card\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function GroupRow(props) {\n    const { t } = useTranslation();\n    var group = props.group;\n    return (\n        <Link className={styles.GroupRow} to={\"/group/\" + group.id}>\n            <span className={styles.GroupName}>{group.groupName}</span>\n            {t(\"dev.manage\")}\n        </Link>\n    );\n}\n\nexport function ServerRow(props) {\n    var server = props.server;\n    const { t } = useTranslation();\n\n    // If not yet setteled\n    if (server.id === null) {\n        return (\n            <div className={styles.GroupRow}>\n                <span className={styles.GroupName}>\n                    {server.name}\n                    <span className={styles.serverBadgePending}>\n                        {t(\"serverStatus.pending\")}\n                    </span>\n                </span>\n                {props.button}\n            </div>\n        );\n    }\n\n    const serverStatus = (() => {\n        switch (server.status) {\n            case \"noServer\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"serverStatus.noServer\")}\n                    </span>\n                )\n            case \"noAdmin\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"serverStatus.noAdmin\")}\n                    </span>\n                )\n            case \"pending\":\n                return (\n                    <span className={styles.serverBadgePending}>\n                        {t(\"serverStatus.pending\")}\n                    </span>\n                )\n            default:\n                return (\n                    <span className={styles.serverBadgeOk}>\n                        {t(\"serverStatus.running\")}\n                    </span>\n                )    \n        }\n    })();\n\n    return (\n        <div className={styles.GroupRow}>\n            <Link className={styles.GroupName} to={\"/server/\" + server.id}>\n                {server.name}\n                {serverStatus}\n            </Link>\n            {props.button}\n        </div>\n    );\n}\n\nexport function GroupAdminAccount(props) {\n\n    var { remid, sid } = props.cookie;\n\n    return (\n        <div className={styles.AdminAccount}>\n        </div>\n    );\n\n}\n\nexport function GameStatsAd(props) {\n    const { t } = useTranslation();\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className={styles.gameStatsAd} href=\"https://discord.com/oauth2/authorize?client_id=714524944783900794&scope=bot&permissions=83968\">\n            <img src=\"./game-stats.png\" />\n            <span>{t(\"group.discord.gamestats\")}</span>\n        </a>\n    );\n}\n\n\nexport function VBanList(props) {\n    const gid = props.gid;\n    const { isError, data: banList, error } = useQuery('globalBanList' + gid, () => OperationsApi.getAutoBanList({ gid }));\n\n    const queryClient = useQueryClient();\n\n    const [searchWord, setSearchWord] = useState(\"\");\n    const { t } = useTranslation();\n\n    const unbanVGlobalBan = useMutation(\n        variables => OperationsApi.globalUnbanPlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('globalBanList' + gid)\n                // Snapshot the previous value\n                const previousBanList = queryClient.getQueryData('globalBanList' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('globalBanList' + gid, old => {\n                    old.data= old.data.filter(player => player.playerName !== name);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousBanList, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('globalBanList' + context.gid, context.previousBanList)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('globalBanList' + context.gid)\n            },\n        }\n    );\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"group.vban.description0\")} <b>{t(\"group.vban.description1\", {number: banList.data.length})}</b>. <Tag>{t(\"eBeta\")}</Tag>\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div className={styles.BanListing}>\n                {\n                    banList.data.filter(p => p.playerName.includes(searchWord)).map(\n                        (player, i) => (<GlobalBanRow player={player} key={i} callback={() => unbanVGlobalBan.mutate({gid, name: player.playerName})}/>)\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\n\nfunction GlobalBanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <div className={styles.BanRow}>\n            <span className={styles.BanDisplayName}>{player.playerName}</span>\n            <span className={styles.banReason}>{\n                ((player.reason === \"\") ? t(\"group.vban.noReason\") : t(\"group.vban.reason\"))\n            }</span>\n            <span className={styles.banReasonDetailed}>{player.reason}</span>\n            <span className={styles.globalUnban} onClick={props.callback}>{t(\"group.vban.unban\")}</span>\n        </div>\n    );\n}\n\nexport function GroupLogs(props) {\n    const gid = props.gid;\n    const { isError, data: logList, error } = useQuery('groupogList' + gid, () => OperationsApi.getGroupLogs({ gid }));\n    const { t } = useTranslation();\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>{t(\"group.logs.description\")}</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const log = props.log;\n\n    const actionIcon = (() => {\n        switch (log.action) {\n            case \"editGroup\":\n                return \"\";\n            case \"addUser\":\n                return \"\";\n            case \"addOwner\":\n                return \"\"\n            case \"addGroup\":\n                return \"\";\n            case \"removeOwner\":\n                return \"\";\n            case \"removeUser\":\n                return \"\"\n            default:\n                return \"\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${datetime.getHours()}:${datetime.getMinutes()}`;\n\n    return (\n        <div className={styles.logRow}>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logReason}>{\n                log.reason\n            }</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}","import React from \"react\";\nimport styles from \"./MainPage.module.css\";\nimport { OperationsApi } from \"../api\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nfunction ListItem(props) {\n    return (\n        <div className={styles.ListItem}>\n            <h2>{props.header}</h2>\n            <p>{props.children}</p>\n        </div>\n    );\n}\n\nfunction LoginButton() {\n    const { t } = useTranslation();\n    return (\n        <a className={styles.LoginButton} href={OperationsApi.constructApiUrl(\"login\")}>{t(\"mainPage.login\")}</a>\n    );\n}\n\nexport function MainPageComponent(props) {\n    const { t } = useTranslation();\n    return (\n        <div className={styles.MainPage}>\n            <div className={styles.MainPageCard}>\n                <div className={styles.titleBlock}>\n                    <div className={styles.titleContent}>\n                        <h1>{t(\"mainPage.main\")}</h1>\n                        <p>{t(\"mainPage.description\")}</p>\n                        <LoginButton />\n                    </div>\n                </div>\n                <div className={styles.listing}>\n                    <h2>{t(\"mainPage.featureList.main\")}</h2>\n                    <ListItem header={t(\"mainPage.featureList.0.heading\")}>{t(\"mainPage.featureList.0.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.1.heading\")}>{t(\"mainPage.featureList.1.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.2.heading\")}>{t(\"mainPage.featureList.2.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.3.heading\")}>{t(\"mainPage.featureList.3.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.4.heading\")}>{t(\"mainPage.featureList.4.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.5.heading\")}>{t(\"mainPage.featureList.5.body\")}</ListItem>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Server.module.css\";\nimport { useQuery } from 'react-query';\nimport { Button, ButtonRow, DropdownButton, ButtonLink, TextInput } from \"./Buttons\";\nimport { useModal } from \"./Card\";\nimport { OperationsApi } from \"../api\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function SmallText(props) {\n    return (<span className={styles.SmallText}>{props.children}</span>);\n}\n\nfunction PlayerStatsModal(props) {\n    const player = props.player;\n    const { isError, data: stats, isLoading } = useQuery('playerStatsByEAID' + player, () => fetch(\"https://api.gametools.network/bf1/stats/?name=\"+player+\"&lang=en-us&platform=pc&=\").then(r=>r.json()));\n    const { t } = useTranslation();\n    \n    const statsBlock = (!isLoading && !isError) ? (\n        <div className={styles.statsBlock}>\n            <h5>{t(\"server.playerStats.skill\")}{stats.skill}</h5>\n            <h5>{t(\"server.playerStats.rank\")}{stats.rank}</h5>\n            <h5>{t(\"server.playerStats.killsPerMinute\")}{stats.killsPerMinute}</h5>\n            <h5>{t(\"server.playerStats.winPercent\")}{stats.winPercent}</h5>\n            <h5>{t(\"server.playerStats.accuracy\")}{stats.Accuracy}</h5>\n            <h5>{t(\"server.playerStats.headshots\")}{stats.headshots}</h5>\n            <h5>{t(\"server.playerStats.killDeath\")}{stats.killDeath}</h5>\n            <h5>{t(\"server.playerStats.id\")}{stats.id}</h5>\n            <a href={\"https://gametools.network/stats/pc/playerid/\"+stats.id+\"?name=\"+player} target=\"_blank\">{t(\"server.playerStats.toStatsPage\")}</a>\n        </div>\n    ) : t(\"server.playerStats.loading\");\n\n    return (   \n        <>\n            <h2>{t(\"server.playerStats.main\", {player: player})}</h2>\n            {statsBlock}\n        </>\n    );\n}\n\nexport function EditableText(props) {\n    return (<p>{props.children}</p>);\n}\n\nexport function SettingsRow(props) {\n    return <div className={styles.SettingsRow}>{props.children}</div>;\n}\n\nexport function SmallIntInput(props) {\n    return <input type=\"text\" className={styles.SmallInput} defaultValue={props.value} />;\n}\n\nexport function ServerInfo(props) {\n    var server = props.server;\n    return (\n        <>\n        </>\n    );\n}\n\nexport function ServerRotation(props) {\n    const { t } = useTranslation();\n    var server = null, game = null;\n    if (props.game && props.game.data && props.game.data.length > 0) {\n        server = props.game.data[0];\n        game = server.info;\n    }\n\n    var server_status = (\n        <span className={styles.serverBadgePending}>\n            {t(\"serverStatus.pending\")}\n        </span>\n    );\n    \n    if (server) {\n        if (server.isAdmin) {\n            server_status = (\n                <span className={styles.serverBadgeOk}>\n                    <span className={styles.liveUpdate}></span>\n                    {t(\"serverStatus.running\")}\n                </span>\n            )  \n        } else {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    {t(\"serverStatus.noAdmin\")}\n                </span>\n            )\n        }\n        if (server.serverStatus === \"noServer\") {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    {t(\"serverStatus.noServer\")}\n                </span>\n            )\n        }\n    }\n    var update_timestamp = \"\";\n    if (server) {\n        const timestamp = new Date(server.update_timestamp);\n        update_timestamp =  `${timestamp.getHours()}:${timestamp.getMinutes()}:${timestamp.getSeconds()}`;\n    }\n    var [rotationId, setRotationId] = useState(\"\"); \n    return (\n        <div className={styles.ServerInfoColumn}>\n            <div className={styles.ServerDescriptionRow}>\n                <img className={styles.serverImage} src={(game) ? game.url : \"/no-server-image.png\"} />\n                <div className={styles.GameInfo}>\n                    <span className={styles.ServerName}>{(game) ? game.prefix : t(\"loading\") }</span>\n                    <SmallText>{(game) ? `${game.map} - ${game.mode} - ${game.serverInfo} ${t(\"server.game.info\", {inQue: game.inQue})}` : \"-\"}</SmallText>\n                </div>\n            </div>\n            <ButtonRow>\n                <Button name={t(\"server.game.restart\")} disabled={!game} callback={_ => props.rotate((game) ? game.rotationId : null)} />\n                <select className={styles.SwitchGame} value={rotationId} onChange={e => setRotationId(e.target.value)}>\n                    <option value=\"\">{t(\"server.game.mapSwitch\")}</option>\n                    {(game) ? game.rotation.map((value, i) =>\n                        <option value={value.index} key={i}>{value.mapname} - {value.mode}</option>\n                    ) : \"\"}\n                </select>\n                {(rotationId !== \"\") ? <Button name={t(\"apply\")} disabled={!game} callback={_ => { props.rotate((game) ? rotationId : null); setRotationId(\"\"); }} /> : \"\"}\n            </ButtonRow>\n            <div className={styles.serverStatusArray}>\n                <span>{server_status}</span>\n                <span className={styles.serverBadge}>{t(\"server.game.playerlistUpdate\")} - {update_timestamp}</span>\n            </div>\n            \n        </div>\n    );\n}\n\nexport function PlayerInfo(props) {\n    const modal = useModal();\n    var info = props.game.data[0].players[props.team].players;\n\n    var moveTeam = (props.team === \"0\") ? \"1\" : \"2\";\n\n    let getDropdownOptions = (player) => {\n        return [\n            { name: \"Give VIP\", callback: () => props.giveVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n            { name: \"Remove VIP\", callback: () => props.removeVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n        ]\n    };\n\n    if (info.length > 0 && info[0] === undefined) return \"\";\n\n    return (\n        info.map((player, i) => \n            <div className={styles.PlayerRow} key={i}>\n\n                <span className={styles.PlayerIndex}>\n                    {i + 1}\n                </span>\n                <span className={styles.PlayerLevel}>\n                    {\n                        (player.rank === null) ? \"??\" : player.rank\n                    }\n                </span>\n                <span className={styles.PlayerName} onClick={_=>modal.show(<PlayerStatsModal player={player.name} />)}>\n                    {\n                        (player.platoon === \"\") ? \"\" : `[${player.platoon}] ` \n                    }\n                    {\n                        player.name\n                    }\n                </span>\n                <span className={styles.PlayerNone} />\n\n\n                \n                <div className={styles.PlayerButtons}>\n                    <div className={styles.PlayerButton} onClick={_ => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam, playerId: player.playerId})}>\n                        Move\n                    </div>\n                    <div className={styles.PlayerButton} onClick={_ => modal.show(<props.kickModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>)}>\n                        Kick\n                    </div>\n                    <div className={styles.PlayerButton} onClick={_ => modal.show(<props.banModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>)}>\n                        Ban\n                    </div>\n                    {/*<ButtonLink name=\"Kick\" to={`/server/${props.sid}/kick/${player.name}/`} />\n                    <ButtonLink name=\"Ban\" to={`/server/${props.sid}/ban/${player.name}/`} />*/}\n                    {/*<DropdownButton options={getDropdownOptions(player)} name=\"☰\"></DropdownButton>*/}\n                    \n                </div>\n\n                <span className={styles.PlayerPing}>\n                    {player.ping}\n                    <svg viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M4,6V4H4.1C12.9,4 20,11.1 20,19.9V20H18V19.9C18,12.2 11.8,6 4,6M4,10V8A12,12 0 0,1 16,20H14A10,10 0 0,0 4,10M4,14V12A8,8 0 0,1 12,20H10A6,6 0 0,0 4,14M4,16A4,4 0 0,1 8,20H4V16Z\" />\n                    </svg>\n                </span>\n                \n            </div>\n        )\n    );\n}\n\nexport function ServerInfoHolder(props) {\n    return (\n        <div className={styles.ServerInfoRow}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function BanList(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: banList, error } = useQuery('serverBanList' + sid, () => OperationsApi.getBanList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"server.banList.description0\")}<br />\n                {t(\"server.banList.description1\")} <b>{t(\"server.banList.description2\", {number: banList.data.length})}</b>.\n                {t(\"server.banList.description3\")}<br />{t(\"server.banList.description4\")}\n            </h5>\n            <TextInput name={t(\"search\")} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>{t(\"server.banList.table.playerName\")}</th>\n                        <th>{t(\"server.banList.table.playerId\")}</th>\n                        <th>{t(\"server.banList.table.reason\")}</th>\n                        <th>{t(\"server.banList.table.admin\")}</th>\n                        <th>{t(\"server.banList.table.until\")}</th>\n                        <th>{t(\"server.banList.table.timestamp\")}</th>\n                    </thead>\n                    <tbody>\n                        {\n                            banList.data.filter(p => p.displayName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<BanRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction BanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.displayName}</td>\n            <td title={t(\"server.banList.table.playerId\")}>{player.id}</td>\n            <td>{player.reason}</td>\n            <td>{player.admin}</td>\n            <td>{player.banned_until}</td>\n            <td>{player.ban_timestamp}</td>\n        </tr>\n    );\n}\n\nexport function FireStarter(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: starterList, error } = useQuery('serverStarterList' + sid, () => OperationsApi.getStarterList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!starterList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    starterList.data.sort((a, b) => b.amount - a.amount);\n\n    return (\n        <div>\n            <h5>\n                {t(\"server.firestarterList.description0\")}<br />{t(\"server.firestarterList.description1\")}\n            </h5>\n            <TextInput name={t(\"search\")} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>{t(\"server.firestarterList.table.playerName\")}</th>\n                        <th>{t(\"server.firestarterList.table.playerId\")}</th>\n                        <th>{t(\"server.firestarterList.table.amount\")}</th>\n                    </thead>\n                    <tbody>\n                        {\n                            starterList.data.filter(p => p.playerName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<StarterRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction StarterRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.platoon !== \"\"? `[${player.platoon}] `: null}{player.playerName}</td>\n            <td title={t(\"server.firestarterList.table.playerId\")}>{player.playerId}</td>\n            <td>{player.amount}</td>\n        </tr>\n    );\n}\n\nexport function LogList(props) {\n    \n    const sid = props.sid;\n    const { isError, data: logList, error } = useQuery('serverLogList' + sid, () => OperationsApi.getServerLogs({ sid }));\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>Log list</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const { t } = useTranslation();\n    const modal = useModal();\n    const log = props.log;\n    const action = (() => {\n        switch (log.action) {\n            case \"addServerBan\":\n                return t(\"server.logs.reasons.addServerBan\");\n            case \"kickPlayer\":\n                return t(\"server.logs.reasons.kickPlayer\");\n            case \"removeServerBan\":\n                return t(\"server.logs.reasons.removeServerBan\");\n            case \"addServerVip\":\n                return t(\"server.logs.reasons.addServerVip\");\n            case \"movePlayer\":\n                return t(\"server.logs.reasons.movePlayer\");\n            case \"removeServerVip\":\n                return t(\"server.logs.reasons.removeServerVip\");\n            default:\n                return t(\"server.logs.reasons.magic\");\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${String(datetime.getHours()).padStart(2, '0')}:${String(datetime.getMinutes()).padStart(2, '0')}`;\n\n    if (log.action === \"autokick-ping\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M19.5,5.5V18.5H17.5V5.5H19.5M12.5,10.5V18.5H10.5V10.5H12.5M21,4H16V20H21V4M14,9H9V20H14V9M7,14H2V20H7V14Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.pingChecker\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-globalBans\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.vBan\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-bfban\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.bfban\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>{t(\"server.logs.reason\")}</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (action === \"moved\" && log.toPlayer === \"server\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z\" />                </svg>\n                <span className={styles.logAdmin}>{log.adminName}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n    return (\n        <div className={styles.logRow}>\n            <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n            </svg>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logAction}>{action}</span>\n            <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n            <span className={styles.logReason}>{\n                ((log.reason === \"\") ? t(\"server.logs.noReason\") : t(\"server.logs.reason\"))\n            }</span>\n            <span className={styles.logReasonDetailed}>{log.reason}</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}\n\nexport function VipList(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: vipList, error } = useQuery('serverVipList' + sid, () => OperationsApi.getVipList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n\n    if (!vipList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n    \n\n    return (\n        <div>\n            <div className={styles.VipHeader}>\n                <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <h5 style={{ marginBottom: 0 }}>\n                        {t(\"server.vipList.description0\")}<br />\n                        {t(\"server.vipList.description1\")}<b>{t(\"server.vipList.description2\", {number: vipList.data.length})}</b>.\n                    </h5>\n                </div>\n            </div>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <tr>\n                            <th>{t(\"server.vipList.table.playerName\")}</th>\n                            <th>{t(\"server.vipList.table.playerId\")}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            vipList.data.filter(p => p.displayName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<VipRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction VipRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <tr className={styles.VipRow}>\n            <td title={player.displayName} className={styles.VipName}>\n                <div className={styles.VipRowImg}><img src={player.avatar} alt=\"\" /></div>\n                <span>{player.displayName}</span>\n            </td>\n            <td title={t(\"server.vipList.table.playerId\")}>{player.id}</td>\n        </tr>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, CardRow, UserRow, Row } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Account() {\n    const { t } = useTranslation();\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var userLine = \"\";\n\n    if (!userError && !isLoading && user) {\n        if (!user.auth.signedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            userLine = <UserRow discord={user.discord} />;\n        }\n    } else if (userError && !isLoading) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"account.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"account.discordProfile\")}</h2>\n                    {userLine}\n                </Card>\n            </Column>\n            <Column>\n                <Header />\n                <Card>\n                    <h2>{t(\"account.permissions.main\")}</h2>\n                    <CardRow>{t(\"account.permissions.admin\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.server\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.system\")}</CardRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, GroupRow, Row } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function Developer() {\n    const { t } = useTranslation();\n    const { isLoading, isError, data } = useQuery('devGroups', () => OperationsApi.getDevGroups())\n    \n    var groups = [];\n\n    if (!isLoading && !isError && data) {\n        data.data.map((g, i) => {\n            groups.push(<GroupRow key={i} group={g} />);\n        });\n    } else if (isError) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"dev.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"dev.listGroups\")}</h2>\n                    {groups}\n                    <ButtonRow>\n                        <ButtonLink name={t(\"dev.addGroup\")} to=\"/group/new/\" />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, Switch, BanList, Column, Card, Header, ServerRotation, ServerInfoHolder, ButtonLink, ButtonRow, Button, PageCard, Row, VipList, LogList, TextInput, PlayerInfo, FireStarter } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function Server(props) {\n    var sid = props.match.params.sid;\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n    const modal = useModal();\n\n    const { isError: serverError, data: server } = useQuery('server' + sid, () => OperationsApi.getServer(sid));\n    const { isError: gameError, data: runningGame } = useQuery('serverGame' + sid, () => OperationsApi.getServerGame(sid));\n\n    var serverCard = \"\";\n    var playerList = \"\";\n    var playerInGame = false;\n    var playerNicknameTeam;\n\n    var [playerName, setPlayerName] = useState(\"\");\n\n    var [addVipStatus, changeAddVipStatus] = useState({ name: \"Add Vip\", status: false });\n    var [removeVipStatus, changeRemoveVipStatus] = useState({ name: \"Remove Vip\", status: false });\n    var [unbanStatus, changeUnbanStatus] = useState({ name: \"Unban\", status: false });\n    \n    var [tabsListing, setTabsListing] = useState(\"info\");\n\n    const UnbanPlayer = useMutation(\n        v => OperationsApi.unbanPlayer(v), {\n        onMutate: async () => {\n            changeUnbanStatus({ name: \"Pending..\", status: true });\n            return { status: unbanStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeUnbanStatus(context.status);\n        },\n    }\n    );\n\n    const RemoveVip = useMutation(\n        v => OperationsApi.removeVip(v), {\n        onMutate: async () => {\n            changeRemoveVipStatus({ name: \"Pending..\", status: true });\n            return { status: removeVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeRemoveVipStatus(context.status);\n        },\n    }\n    );\n\n    const AddVip = useMutation(\n        v => OperationsApi.addVip(v), {\n        onMutate: async () => {\n            changeAddVipStatus({ name: \"Pending..\", status: true });\n            return { status: addVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeAddVipStatus(context.status);\n        },\n    }\n    );\n\n    const movePlayer = useMutation(\n        variables => OperationsApi.movePlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, team, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                //await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                // queryClient.setQueryData('serverGame' + sid, old => {\n                //     if (team === \"1\") {\n                //         old.data[0].players[1].players.push(old.data[0].players[0].players.find(e => (!e) ? false : e.name === name));\n                //         old.data[0].players[0].players = old.data[0].players[0].players.filter(p => (!p) ? false : p.name !== name);\n                //     } else {\n                //         old.data[0].players[0].players.push(old.data[0].players[1].players.find(e => (!e) ? false : e.name === name));\n                //         old.data[0].players[1].players = old.data[0].players[1].players.filter(p => (!p) ? false : p.name !== name);\n                //     }\n                //     return old;\n                // })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                //queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const serverTabs = [\n        {\n            name: t(\"server.game.main\"),\n            callback: () => setTabsListing(\"info\"),\n        },\n        {\n            name: t(\"server.banList.main\"),\n            callback: () => setTabsListing(\"banlist\"),\n        },\n        {\n            name: t(\"server.vipList.main\"),\n            callback: () => setTabsListing(\"viplist\"),\n        },\n        {\n            name: t(\"server.firestarterList.main\"),\n            callback: () => setTabsListing(\"firestarter\"),\n        },\n        {\n            name: t(\"server.logs.main\"),\n            callback: () => setTabsListing(\"loglist\"),\n        },\n        {\n            name: t(\"server.protection.main\"),\n            callback: () => setTabsListing(\"protection\"),\n        },\n        {\n            name: t(\"server.settings.main\"),\n            callback: () => setTabsListing(\"settings\"),\n        }\n    ];\n\n    const [teamId, setTeamId] = useState(false);\n\n    const catTabs = {\n        info: (\n            <ServerInfoHolder>\n                <ServerRotation game={runningGame} rotate={id => OperationsApi.changeRotation({ sid, map: id })} />\n            </ServerInfoHolder>\n        ),\n        banlist: <BanList sid={sid} />,\n        viplist: <VipList sid={sid} />,\n        firestarter: <FireStarter sid={sid} />,\n        loglist: <LogList sid={sid} />,\n        protection: (\n            <>\n                <ServerAutomation server={server} sid={sid} />\n            </>\n        ),\n        settings: ( \n            <>\n                <ServerSettings server={server} sid={sid} />\n            </>\n        )\n    }\n\n    //if (!serverError && server && !gameError && runningGame) {\n    serverCard = (\n        <Row>\n            <Column>\n                <PageCard buttons={serverTabs} >\n                    {catTabs[tabsListing]}\n                </PageCard>\n            </Column>\n        </Row>\n    );\n    //}\n\n    var isOpsMode = false;\n    var isMovableModal = !gameError && runningGame && !(\"error\" in runningGame.data[0].players[0]) && (runningGame.data[0].players[0].players.length > 0 || runningGame.data[0].players[1].players.length > 0) && (runningGame.data[0].players[0].players !== undefined || runningGame.data[0].players[1].players.players !== undefined );\n    //console.log(runningGame.data[0].players[0].players.length)\n    if (!gameError && runningGame && isMovableModal) {\n\n        isOpsMode = runningGame.data[0].info.mode === \"Operations\";\n\n        var f1 = runningGame.data[0].players[0].players.find(e => (!e) ? false : e.name === playerName);\n        var f2 = runningGame.data[0].players[1].players.find(e => (!e) ? false : e.name === playerName);\n\n        if (f1 !== undefined) {\n            playerNicknameTeam = \"1\";\n        } else if(f2 !== undefined) {\n            playerNicknameTeam = \"2\";\n        } else {\n            isMovableModal = false;\n        }\n\n        var playerInGame = (playerName !== \"\") &&\n            (\n                (f1 !== undefined) || (f2 !== undefined)\n            );\n\n        playerList = (\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamOne\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"0\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamTwo\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"1\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer}  giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n            </Row>\n        )\n    }\n\n    const movePlayerPopup = (vars) => {\n        if (isMovableModal) {\n            movePlayer.mutate(vars);\n        } else {\n            modal.show(\n                <>\n                    <h2>Player is not found on the server!</h2>\n                    <p>Choose a side to move player to, if you think it is an error.</p>\n                    <ButtonRow>\n                        <h5 style={{margin: \"0 6px 0 12px\"}}>Team 1</h5>\n                        <Switch checked={teamId} callback={(v) => setTeamId(v)}/>\n                        <h5 style={{margin: \"0\"}}>Team 2</h5>\n                    </ButtonRow>\n                    <Button disabled={playerName === \"\"} name=\"Move\" callback={_ => {movePlayer.mutate({ sid, team: teamId ? \"1\" : \"2\", name: playerName }); modal.close()}} />\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"server.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            {serverCard}\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.console.main\")}</h2>\n                        <Row>\n                            <TextInput name=\"Player name\" callback={e => setPlayerName(e.target.value)} style={{\n                                marginRight: 12,\n                            }}/>\n                            <ButtonRow>\n                                <Button disabled={playerName === \"\"} name=\"Kick\" callback={_ => modal.show(<ServerKickPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\"} name=\"Move\" callback={_ => movePlayerPopup({ sid, team: playerNicknameTeam, name: playerName })} />\n                                <Button disabled={playerName === \"\"} name=\"Ban\" callback={_ => modal.show(<ServerBanPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\" || unbanStatus.status} name={unbanStatus.name} callback={_ => UnbanPlayer.mutate({ sid, name: playerName, reason: \"\" })} />\n                                <Button disabled={playerName === \"\" || addVipStatus.status || isOpsMode} name={addVipStatus.name} callback={_ => AddVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                                <Button disabled={playerName === \"\" || removeVipStatus.status || isOpsMode} name={removeVipStatus.name} callback={_ => RemoveVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                            </ButtonRow>\n                        </Row>\n                    </Card>\n                </Column>\n            </Row>\n            {playerList}\n        </>\n    );\n\n}\n\nfunction ServerAutomation(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n    const [kickOnPingDisabled, setKickOnPingDisabled] = useState(false);\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n\n        if (props.server) {\n            const { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage, minAutoPingKick } = props.server;\n            const originalServerState = { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage, minAutoPingKick };\n            if (serverState === null) {\n                setServerState(originalServerState);\n                setKickOnPingDisabled(autoPingKick !== 0);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                if (serverState.autoPingKick === 0) setKickOnPingDisabled(false);\n                setCanApply(newCanApply);\n            }\n           \n        }\n        \n\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.protection.title\")}</h2>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"server.protection.vBanDescription0\")}<br />\n                {t(\"server.protection.vBanDescription1\")}\n                <b>{t(\"server.protection.vBanDescription2\")}</b>\n                {t(\"server.protection.vBanDescription3\")}<br />\n                {t(\"server.protection.vBanDescription4\")}\n            </h5>\n            <Switch checked={getServerValue(\"autoBanKick\")} name={t(\"server.protection.vBanEnable\")} callback={(v) => changeSrerverState({ autoBanKick: v })}/>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"server.protection.vbanReasonDesc0\")}<br />\n                {t(\"server.protection.vbanReasonDesc1\")}\n            </h5>\n            \n            <TextInput\n                disabled={!allowedTo || (serverState && !serverState.autoBanKick)}\n                callback={(e) => changeSrerverState({ autoGlobalBanMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoGlobalBanMessage\")}\n                name={t(\"server.protection.vBanMsg\")}\n            />\n            <h5 style={{ marginTop: \"30px\" }}>{t(\"server.protection.bfbanDescription\")}<i>bfban.com</i></h5>\n            <Switch checked={getServerValue(\"autoBfbanKick\")} name={t(\"server.protection.bfbanEnable\")} callback={(v) => changeSrerverState({ autoBfbanKick: v })} />\n            <h5 style={{ marginTop: \"30px\" }}>{t(\"server.protection.pingKickDescription\")}</h5>\n            <Switch checked={kickOnPingDisabled} name={t(\"server.protection.pingKickEnable\")} callback={(v) => { setKickOnPingDisabled(v); (!v) ?changeSrerverState({ autoPingKick: 0 }) : changeSrerverState({ autoPingKick: 200 })  }} />\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") changeSrerverState({ autoPingKick: parseInt(e.target.value) })\n                        }\n                    }\n                }\n                value={(serverState) ? serverState.autoPingKick : \"\" }\n                name={t(\"server.protection.pingKickAmount\")}\n            />\n            <TextInput\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={(e) => changeSrerverState({ autoPingKickMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoPingKickMessage\")}\n                name={t(\"server.protection.pingKickMsg\")}\n            />\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.protection.pingKickMinDesc\")}</h5>\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value < 0);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") {\n                                changeSrerverState({ minAutoPingKick: parseInt(e.target.value) })\n                            }\n                        }\n                    }\n                }\n                defaultValue={getServerValue(\"minAutoPingKick\")}\n                value={(serverState) ? serverState.minAutoPingKick : \"\" }\n                name={t(\"server.protection.minAutoPingKick\")}\n            />\n            {   \n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\nfunction ServerSettings(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    useEffect(() => {\n        if (props.server) {\n            const { serverName, serverAlias } = props.server;\n            const originalServerState = { serverName, serverAlias };\n            if (serverState === null) {\n                setServerState(originalServerState);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                setCanApply(newCanApply);\n            }\n\n        }\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.settings.title\")}</h2>\n\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.settings.nameDescription\")}</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverName: e.target.value })}\n                defaultValue={getServerValue(\"serverName\")}\n                name={t(\"server.settings.name\")}\n            />\n\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.settings.aliasDescription\")}</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverAlias: e.target.value })}\n                defaultValue={getServerValue(\"serverAlias\")}\n                name={t(\"server.settings.alias\")}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction ServerKickPlayer(props) {\n\n    var { sid, eaid } = props;\n    const modal = useModal();\n    const { t } = useTranslation();\n    var [reason, setReason] = useState(\"\");\n    var [kickApplyStatus, setKickApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n\n    const KickPlayer = useMutation(\n        v => OperationsApi.kickPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid, reason }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                setKickApplyStatus(true);\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            onSuccess: () => {\n                setKickApplyStatus(null);\n                modal.close();\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (error, newTodo, context) => {\n                setKickApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setKickApplyStatus(null), 3000);\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>{t(\"server.kickMenu.main\", {name: props.eaid})}</h2>\n            <TextInput name={t(\"server.kickMenu.reason\")} callback={(e) => setReason(e.target.value)} />\n            <ButtonRow>\n                <Button status={kickApplyStatus} name={t(\"server.kickMenu.confirm\")} disabled={reason === \"\"} callback={() => { KickPlayer.mutate({ sid, eaid, reason, playername: props.eaid, playerId: props.playerId }); history.push(`/server/${props.sid}/`); }} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (kickApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}\n\nfunction ServerBanPlayer(props) {\n    const modal = useModal();\n    var { sid, eaid } = props;\n    const { t } = useTranslation();\n\n    const history = useHistory();\n    const [reason, setReason] = useState(\"\");\n    const [banTime, setBanTime] = useState(0);\n    const [globalVsClassicBan, setGlobalVsClassicBan] = useState(false);\n\n    var [banApplyStatus, setBanApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    const { isError: userGettingError, data: user } = useQuery('user', () => OperationsApi.user);\n\n    const BanPlayer = useMutation(\n        v => OperationsApi.banPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n                modal.close();\n            },\n        }\n    );\n\n    const GlobalBanPlayer = useMutation(\n        v => OperationsApi.globalBanPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n\n            },\n        }\n    );\n\n    var gid = null;\n\n    if (user) {\n        user.permissions.isAdminOf.map(\n            group => {\n                for (let someSid of group.servers) {\n                    if (someSid === sid) {\n                        gid = group.id;\n                    }\n                }\n            }\n        )\n    }\n\n    const isDisabled =\n        reason === \"\" ||\n        banTime < 0 ||\n        banApplyStatus !== null ||\n        userGettingError || !user || gid == null;\n\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.banMenu.main\", {name: props.eaid})} </h2>\n            <h5>{t(\"server.banMenu.reasonDescription\")}</h5>\n            <TextInput name={t(\"server.banMenu.reason\")} callback={(e) => setReason(e.target.value)} />\n            <Switch value={globalVsClassicBan} name={t(\"server.banMenu.vBanOption\")} callback={ (v) => setGlobalVsClassicBan(v) } />\n            <h5>{t(\"server.banMenu.tempbanDesc0\")}<br />{t(\"server.banMenu.tempbanDesc1\")}<br />{t(\"server.banMenu.tempbanDesc2\")}</h5>\n            <TextInput type={t(\"server.banMenu.tempbanAmount\")} name=\"Ban time\" defaultValue={0} callback={(e) => setBanTime(e.target.value)} disabled={globalVsClassicBan} />\n            <ButtonRow>\n                <Button\n                    name={t(\"server.banMenu.confirm\")}\n                    style={{ maxWidth: \"144px\" }}\n                    disabled={isDisabled}\n                    callback={() => {\n                        if (globalVsClassicBan) {\n                            GlobalBanPlayer.mutate({ gid, reason, name: props.eaid, playerId: props.playerId });\n                        } else {\n                            BanPlayer.mutate({ sid, eaid, reason, name: props.eaid, time: banTime, playerId: props.playerId });\n                        }\n                    }}\n                    status={banApplyStatus} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (banApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, GroupLogs, VBanList, GameStatsAd, Column, Card, Header, ButtonLink, ButtonRow, Button, UserStRow, Row, ServerRow, FakeUserStRow, TextInput, SmallButton, PageCard } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nconst deleteIcon = (\n    <svg viewBox=\"0 0 24 24\" style={{ width: '16px' }}>\n        <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n    </svg>\n);\n\n\nexport function Group(props) {\n\n    var gid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n\n    const { error: groupError, data: groups } = useQuery('groupId' + gid, () => OperationsApi.getGroup(gid), { staleTime: 30000 });\n    const { error: userError, data: user } = useQuery('user', () => OperationsApi.user);\n\n\n    const removeAdmin = useMutation(\n        variables => OperationsApi.removeGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins = old.data[0].admins.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const removeServer = useMutation(\n        variables => OperationsApi.removeServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, sid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers = old.data[0].servers.filter(server => server.id !== sid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n\n    const removeOwner = useMutation(\n        variables => OperationsApi.removeGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners = old.data[0].owners.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n    var group = (groups && groups.data && groups.data.length > 0) ? groups.data[0] : null;\n    const [listing, setListing] = useState(\"servers\");\n    const [settingsListing, setSettingsListing] = useState(\"account\");\n    const { t } = useTranslation();\n\n    const catListing = {\n        owners: <GroupOwners group={group} user={user} gid={gid} onDelete={removeOwner} />,\n        admins: <GroupAdmins group={group} user={user} gid={gid} onDelete={removeAdmin} />,\n        servers: <GroupServers group={group} user={user} gid={gid} onDelete={removeServer} />,\n        vbanlist: <VBanList user={user} gid={gid} />,\n        grouplogs: <GroupLogs gid={gid} />,\n    }\n\n\n    const catSettings = {\n        account: <GroupServerAccount gid={gid} user={user} group={group} />,\n        discord: <GroupDiscordSettings gid={gid} user={user} group={group} />,\n        danger: <GroupDangerZone gid={gid} user={user} group={group} />,\n    }\n\n    const pageCycle = [\n        {\n            name: t(\"group.servers.main\"),\n            callback: () => setListing(\"servers\"),\n        },\n        {\n            name: t(\"group.admins.main\"),\n            callback: () => setListing(\"admins\"),\n        },\n        {\n            name: t(\"group.owners.main\"),\n            callback: () => setListing(\"owners\"),\n        },\n        {\n            name: t(\"group.vban.main\"),\n            callback: () => setListing(\"vbanlist\"),\n        },\n        {\n            name: t(\"group.logs.main\"),\n            callback: () => setListing(\"grouplogs\"),\n        }\n    ]\n\n    const settingsCycle = [\n        {\n            name: t(\"group.account.main\"),\n            callback: () => setSettingsListing(\"account\"),\n        },\n        {\n            name: t(\"group.discord.main\"),\n            callback: () => setSettingsListing(\"discord\"),\n        },\n        {\n            name: t(\"group.danger.main\"),\n            callback: () => setSettingsListing(\"danger\"),\n        },\n    ];\n\n    if (groupError || userError || (groups && groups.data && groups.data.length === 0)) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"group.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"group.name\")} - {(group) ? group.groupName : t(\"pending\")}</h2>\n                        <p style={{ marginBottom: 0 }}>{t(\"group.id\")} {gid}</p>\n                    </Card>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={settingsCycle} >\n                        {catSettings[settingsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={pageCycle} >\n                        {catListing[listing]}\n                    </PageCard>\n                 </Column>\n            </Row>\n        </>\n    );\n\n\n}\n\nfunction GroupAdmins(props) {\n\n    const modal = useModal();\n\n    var hasRights = false;\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let adminList;\n    if (props.group) {\n        adminList = [...props.group.admins];\n        adminList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeAdmins = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.admins.description0\")}<br />{t(\"group.admins.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.admins.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.admins.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.admins.add\")} callback={() => modal.show(<AddGroupAdmin gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.admins.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.admins.removeSelected\")} callback={removeAdmins} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.admins.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (props.group) ? (\n                adminList.map((admin, i) => (\n                    <UserStRow user={admin} callback={(v) => changeSelected(v, admin.id)} key={admin.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n    </>;\n}\n\n\nfunction GroupServers(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n    const { t } = useTranslation();\n\n    return <>\n        <h5>{t(\"group.servers.description0\")}<br />{t(\"group.servers.description1\")}</h5>\n        {\n            (props.group) ? (\n                props.group.servers.map((server, i) => (\n                    <ServerRow server={server} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, sid: server.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name={t(\"group.servers.add\")} to={\"/group/\" + props.gid + \"/add/server\"} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.servers.add\")} />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\nfunction GroupOwners(props) {\n\n    const modal = useModal();\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    var hasRights = false;\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let ownerList;\n    if (props.group) {\n        ownerList = [...props.group.owners];\n        ownerList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeOwners = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.owners.description0\")}<br />{t(\"group.owners.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.owners.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.owners.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.owners.add\")} callback={() => modal.show(<AddGroupOwner gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.owners.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.owners.removeSelected\")} callback={removeOwners} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.owners.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (ownerList) ? (\n                ownerList.map((owner, i) => (\n                    <UserStRow user={owner} callback={(v) => changeSelected(v, owner.id)} key={owner.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        \n    </>;\n}\n\n\nfunction GroupServerAccount(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [sid, setSid] = useState(\"\");\n    const [remid, setRemid] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n            if (remid !== props.group.cookie.remid)\n                setRemid(props.group.cookie.remid);\n            if (sid !== props.group.cookie.sid)\n                setSid(props.group.cookie.sid);\n        } \n    }, [props.group]);\n\n    const editCookies = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>\n                {t(\"group.account.description0\")}<br />{t(\"group.account.description1\")}<i>accounts.ea.com</i>\n            </h5>\n            {(props.group && !props.group.validCookie) ? (\n                <p style={{ marginTop: \"0px\", border: \"1px solid var(--color-second)\", padding: \"10px 22px\", borderRadius: \"8px\", color: \"#FF7575\", background: \"var(--color-container-v2)\" }}>\n                    {t(\"cookie.invalid\")}\n                </p>\n            ) : \"\"}\n            \n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setRemid(e.target.value)} defaultValue={remid} name={\"Remid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.remid\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setSid(e.target.value)} defaultValue={sid} name={\"Sid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.sid\")}\n                </p>\n            </Row>\n            {\n                (props.group && (sid !== props.group.cookie.sid || remid !== props.group.cookie.remid)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editCookies.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        cookie: { sid, remid }\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ): \"\"\n            }\n        </>\n    );\n}\n\nfunction GroupDiscordSettings(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [adminId, setAdminId] = useState(\"\");\n    const [modId, setModId] = useState(\"\");\n    const [serverId, setServerId] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n\n            if (serverId !== props.group.discordGroupId)\n                setServerId(props.group.discordGroupId);\n\n            if (modId !== props.group.discordModRoleId)\n                setModId(props.group.discordModRoleId);\n\n            if (adminId !== props.group.discordAdminRoleId)\n                setAdminId(props.group.discordAdminRoleId);\n\n        }\n    }, [props.group]);\n\n    const editDiscordDetails = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <> \n            <GameStatsAd />\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.description0\")}<br />{t(\"group.discord.description1\")}\n            </h5>\n            <h5>\n                {t(\"group.discord.commandList\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setServerId(e.target.value)} defaultValue={serverId} name={t(\"discord.id\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.idDescription\")}\n                </p>\n            </Row>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.permDescription0\")}<br />{t(\"group.discord.permDescription1\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setAdminId(e.target.value)} defaultValue={adminId} name={t(\"discord.adminId\")}  />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.adminIdDescription\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setModId(e.target.value)} defaultValue={modId} name={t(\"discord.modId\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.modIdDescription\")}\n                </p>\n            </Row>\n            {\n                (props.group && (serverId !== props.group.discordGroupId || modId !== props.group.discordModRoleId || adminId !== props.group.discordAdminRoleId)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editDiscordDetails.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        discordGroupId: serverId,\n                                        discordModRoleId: modId,\n                                        discordAdminRoleId: adminId\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction GroupDangerZone(props) {\n\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [groupName, setGroupName] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n\n        if (props.group && groupName !== props.group.groupName) {\n            setGroupName(props.group.groupName);    \n        }\n\n    }, [props.group]);\n\n    const editGroupName = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>{t(\"group.danger.nameChange\")}</h5>\n            <TextInput disabled={!allowedTo} callback={(e) => setGroupName(e.target.value)} defaultValue={groupName} name={t(\"group.name\")} />\n            {\n                (props.group && (groupName !== props.group.groupName)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editGroupName.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        groupName,\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"group.danger.deleteInfo0\")}<br />{t(\"group.danger.deleteInfo1\")}</h5>\n            <ButtonRow>\n                <ButtonLink style={{ color: \"#FF7575\"}} name={t(\"group.danger.delete\")} to={`/group/${props.gid}/delete/`} disabled={!allowedTo} />\n            </ButtonRow>\n        </>\n    );\n}\n\nexport function AddGroupOwner(props) {\n    var gid = props.gid;\n\n    const [nickname, setNickname] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupOwnerExecute = useMutation(\n        variables => OperationsApi.addGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n                \n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n\n            <h2>{t(\"group.owners.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e)=>setNickname(e.target.value)}/>\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => setUid(e.target.value) }/>\n            <ButtonRow>\n                <Button name={t(\"group.owners.add\")} callback={() => { AddGroupOwnerExecute.mutate({ gid, uid, nickname }); props.callback();  }} />\n            </ButtonRow>\n\n        </>\n    );\n\n}\n\nexport function AddGroupAdmin(props) {\n    var gid = props.gid;\n\n    const [addAdminState, changeState] = useState({ uid: \"\", nickname: \"\", canAdd: false });\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupAdminExecute = useMutation(\n        variables => OperationsApi.addGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const updateState = (values) => {\n        var newState = {\n            ...addAdminState,\n            ...values\n        };\n        newState.canAdd = newState.uid !== \"\";\n        changeState(newState);\n    }\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>{t(\"group.admins.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e) => updateState({nickname: e.target.value}) } />\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => updateState({uid: e.target.value}) } />\n            <ButtonRow>\n                <Button name={t(\"group.admins.add\")} disabled={!addAdminState.canAdd} callback={() => { AddGroupAdminExecute.mutate({ gid, uid: addAdminState.uid, nickname: addAdminState.nickname }); props.callback(); }} />\n            </ButtonRow>\n        </>\n    );\n\n}\n\n\nexport function AddGroup(props) {\n\n    const [addGroupState, changeState] = useState({\n        variables: {\n            groupName: \"\",\n            discordId: \"\",\n            adminRole: \"\",\n            modRole: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        roleDisplay: false,\n        canAdd: false\n    });\n    const { t } = useTranslation();\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const AddNewGroupExecute = useMutation(\n        variables => OperationsApi.addGroup(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                await queryClient.cancelQueries('devGroups');\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n                history.push(\"/\");\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.refetchQueries('devGroups');\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.roleDisplay = (newVars.discordId !== \"\");\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.groupName.length > 2);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"createGroup.main\")}</h2>\n                    \n                </Header>\n                <Card>\n                    <h5>{t(\"createGroup.description\")}</h5>\n                    <TextInput name=\"Name\" callback={(e) => { checkInputVariables({ groupName: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.discordDescription\")}\n                    </h5>\n                    <TextInput name={t(\"discord.id\")} callback={(e) => { checkInputVariables({ discordId: e.target.value }) }} />\n                    <TextInput name={t(\"discord.modId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ modRole: e.target.value }) }} />\n                    <TextInput name={t(\"discord.adminId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ adminRole: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.cookieDescription0\")}<br />\n                        {t(\"createGroup.cookieDescription1\")}<br />\n                        {t(\"createGroup.cookieDescription2\")}<br />\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                    {t(\"createGroup.acceptDescription0\")}<br />{t(\"createGroup.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"createGroup.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => AddNewGroupExecute.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function DeleteGroup(props) {\n\n    var thisGid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const DeleteGroupExecute = useMutation(\n        variables => OperationsApi.removeGroup(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('devGroups')\n                // Snapshot the previous value\n                const previousGroups = queryClient.getQueryData('devGroups')\n                // Optimistically update to the new value\n                queryClient.setQueryData('devGroups', old => {\n                    if (old) {\n                        old.data = old.data.filter(group => group.id !== gid);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroups, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('devGroups', context.previousGroups)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('devGroups')\n            },\n        }\n    );\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.danger.delete\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.danger.main\")}</h2>\n                    <p>{t(\"group.danger.check\")}</p>\n                    <ButtonRow>\n                        <ButtonLink name={t(\"group.danger.back\")} to={\"/group/\" + thisGid} />\n                        <Button name={t(\"group.danger.confirm\")} callback={() => { DeleteGroupExecute.mutate({ gid: thisGid }); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function AddGroupServer(props) {\n    var gid = props.match.params.gid;\n\n    var name = \"\", alias = \"\";\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n\n    const AddGroupServerExecute = useMutation(\n        variables => OperationsApi.addGroupServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async({ gid, name, alias }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers.push({\n                        \"addedAt\": UTCNow,\n                        \"id\": null,\n                        \"name\": name\n                    });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.serverAddMenu.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.serverAddMenu.description\")}</h2>\n                    <TextInput name={t(\"group.serverAddMenu.name\")} callback={(e) => { name = e.target.value }} />\n                    <TextInput name={t(\"group.serverAddMenu.alias\")} callback={(e) => { alias = e.target.value; }} />\n                    <ButtonRow>\n                        <Button name={t(\"group.servers.add\")} callback={() => { AddGroupServerExecute.mutate({ gid, alias, name }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function EditGroup(props) {\n    return (<></>);\n}\n\nexport function MakeOps(props) {\n   \n    const [addGroupState, changeState] = useState({\n        variables: {\n            server: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        canAdd: false\n    });\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const SetupOperations = useMutation(\n        variables => OperationsApi.setupOps(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.server.length > 1);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"operations.main\")}</h2>\n                </Header>\n                <Card>\n                    <h5>\n                        {t(\"operations.description0\")}<br />\n                        {t(\"operations.description1\")}<br /> \n                        {t(\"operations.description2\")}\n                    </h5>\n                    <TextInput name=\"Server name\" callback={(e) => { checkInputVariables({ server: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.server\")}<b>{t(\"operations.owner\")}</b>{t(\"operations.cookies\")}\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.acceptDescription0\")}<br />{t(\"operations.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"operations.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => SetupOperations.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport Account from \"./Account\";\nimport { Developer } from \"./Developer\";\nimport { Server } from \"./Server\";\nimport { Group, AddGroupOwner, EditGroup, AddGroupAdmin, AddGroup, DeleteGroup, AddGroupServer, MakeOps } from \"./Group\";\n\n//import ABSwitch from \"../testing/ABtesting\";\n\nexport default function Views(props) {\n    return (\n        <Switch>\n\n            <Route exact path=\"/account/\" component={Account} />\n\n            <Route exact path=\"/server/:sid/\" component={Server} />\n\n            <Route exact path=\"/group/new/\" component={AddGroup} />\n            <Route exact path=\"/group/:gid/\" component={Group} />\n\n            <Route exact path=\"/group/:gid/add/server\" component={AddGroupServer} />\n            <Route exact path=\"/group/:gid/add/admin/\" component={AddGroupAdmin} />\n            <Route exact path=\"/group/:gid/add/owner/\" component={AddGroupOwner} />\n\n            <Route exact path=\"/group/:gid/edit/\" component={EditGroup} />\n            <Route exact path=\"/group/:gid/delete\" component={DeleteGroup} />\n\n            <Route exact path=\"/dev/\" component={Developer} />\n\n            <Route exact path=\"/makeops/\" component={MakeOps} />\n\n        </Switch>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\n\nimport { MainPageComponent } from \"../components\";\n\nexport default function Main() {\n\n    const { isError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    if (!isLoading && !isError && user && user.auth.signedIn) {\n        return <Redirect to=\"/account/\" />\n    }\n\n    return (\n        <MainPageComponent />\n    );\n}","\nimport React from \"react\";\nimport { HashRouter, useLocation, Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './App.css';\nimport './fade.css';\n\nimport Views from \"./views\";\nimport Main from \"./views/Main\";\nimport { createHashHistory } from 'history';\nimport { Sidebar, PageContainer, PageColumn, ModalProvider } from \"./components\";\n\n\nexport const history = createHashHistory();\n\nexport const APP_VERSION = \"1.0.3\";\n\nfunction App() {\n\n    let location = useLocation();\n\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <ModalProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Main} />\n                        <Route>\n                            \n                            {/*<TopBar />*/}\n                            <Sidebar />\n                            <TransitionGroup component={PageContainer}>\n                                <CSSTransition key={location.hash} classNames=\"fade\" timeout={200}>\n                                    <PageColumn>\n                                        <Views />\n                                    </PageColumn>\n                                </CSSTransition>\n                            </TransitionGroup>\n                            \n                        </Route>\n                    </Switch>\n                </ModalProvider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\n// Browser rendering\n\nReactDOM.render(\n\n    <React.StrictMode> \n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}