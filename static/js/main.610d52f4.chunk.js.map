{"version":3,"sources":["components/Buttons.module.css","components/Server.module.css","components/User.module.css","components/Group.module.css","components/Sidebar.module.css","components/Flex.module.css","components/Card.module.css","components/PageContainer.module.css","components/Header.module.css","JsonApi.js","api.js","components/PageContainer.js","components/Sidebar.js","components/Buttons.js","components/Flex.js","components/Card.js","components/Header.js","components/User.js","components/Group.js","components/Server.js","views/Home.js","views/Account.js","views/Developer.js","views/Server.js","views/Group.js","views/index.js","App.js","index.js"],"names":["module","exports","endPoints","dev","prod","OperationsApi","asyncUser","this","logoutAndChangeUser","user","fetchMethod","getUserInfo","sid","playername","reason","postJsonMethod","map","name","time","toString","team","getJsonMethod","devGroups","Error","groupName","discordId","modRole","adminRole","remid","gid","uid","nickname","alias","game","data","error","isWorking","window","location","constructApiUrl","method","params","paramStr","s","fetch","credentials","result","options","body","JSON","stringify","headers","postMethod","then","json","defaultUser","discord","discriminator","avatar","auth","inGuild","isAdmin","isDeveloper","isOwner","signedIn","response","hasOwnProperty","PageContainer","props","className","styles","children","PageColumn","TopSidebar","to","title","src","Logo","PageLink","activeClassName","PageLinkActive","PageButton","onClick","Sidebar","useQuery","userError","isLoading","devLink","accountLink","logoutLink","groupLinks","history","useHistory","queryClient","useQueryClient","logoutExecutor","useMutation","v","logout","onMutate","a","cancelQueries","prevUser","getQueryData","setQueryData","old","onSettled","variables","context","invalidateQueries","i","mutate","push","permissions","isAdminOf","group","id","style","display","flexDirection","height","flexGrow","marginBottom","Button","background_color","width","value","button","disabled","callback","ButtonLink","ButtonRow","buttonRow","TextInput","defaultValue","type","placeholder","onChange","SmallButton","_","vars","content","Switch","useState","checked","checkedSwitch","clickSwitch","switchClassName","SwitchActive","switchTheSwitch","newVal","onKeyPress","e","charCode","role","tabindex","SwitchInner","SwitchOn","SwitchOff","SwitchHandle","DropdownButton","open","setOpen","container","React","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","dropdown","ul","option","li","ChoosePageButtons","active","setActive","ChoosePageButtonHolder","buttons","ChoosePageButtonActive","ChoosePageButton","Column","Row","Card","card","CardRow","PageCard","Header","UserRow","alt","Avatar","DiscordName","DiscordNum","secure","viewBox","fill","xmlns","d","UserStRow","dateAdded","Date","parse","addedAt","dateString","getUTCDate","getUTCMonth","getUTCHours","getUTCMinutes","UserRowSt","DateAdded","DiscordId","FakeUserStRow","GroupRow","GroupName","ServerRow","server","SmallText","SettingsRow","SmallIntInput","SmallInput","ServerInfo","ServerInfoColumn","ServerDescriptionColumn","autoBanKick","autoPingKick","discordBotChannel","discordBotLang","discordBotMinPlayerAmount","discordBotPrevReqCount","discordBotStartedAmount","ServerRotation","info","rotationId","setRotationId","ServerDescriptionRow","serverImage","url","GameInfo","ServerName","prefix","serverInfo","rotate","SwitchGame","rotation","index","mapname","PlayerInfo","players","moveTeam","getDropdownOptions","player","giveVip","removeVip","PlayerRow","PlayerName","platoon","PlayerButtons","onMove","ServerInfoHolder","ServerInfoRow","Home","loginButton","openLoginPage","maxWidth","Account","userLine","Developer","getDevGroups","isError","groups","g","Server","playerNicknameTeam","match","getServer","staleTime","serverError","getServerGame","gameError","runningGame","serverCard","playerList","playerInGame","playerName","setPlayerName","status","addVipStatus","changeAddVipStatus","removeVipStatus","changeRemoveVipStatus","unbanStatus","changeUnbanStatus","tabsListing","setTabsListing","UnbanPlayer","unbanPlayer","onError","err","newTodo","RemoveVip","AddVip","addVip","movePlayer","previousGroup","find","filter","p","serverTabs","catTabs","changeRotation","settings","isOpsMode","mode","f1","f2","undefined","marginRight","ServerKickPlayer","eaid","setReason","KickPlayer","kickPlayer","ServerBanPlayer","banTime","setBanTime","BanPlayer","banPlayer","ServerAction","action","deleteIcon","Group","getGroup","groupError","removeAdmin","removeGroupAdmin","now","toUTCString","admins","admin","removeServer","servers","removeOwner","removeGroupOwner","owners","length","listing","setListing","settingsListing","setSettingsListing","catListing","GroupOwners","onDelete","GroupAdmins","GroupServers","catSettings","account","GroupServerAccount","danger","GroupDangerZone","pageCycle","settingsCycle","hasRights","owner","allowedTo","setSid","setRemid","cookie","marginTop","margin","alignSelf","AddGroupOwner","AddGroupOwnerExecute","addGroupOwner","UTCNow","AddGroupAdmin","canAdd","addAdminState","changeState","AddGroupAdminExecute","addGroupAdmin","updateState","values","newState","AddGroup","roleDisplay","addGroupState","AddNewGroupExecute","addGroup","refetchQueries","checkInputVariables","newVariables","newGroupState","newVars","DeleteGroup","thisGid","DeleteGroupExecute","removeGroup","previousGroups","AddGroupServer","AddGroupServerExecute","addGroupServer","EditGroup","Views","exact","path","component","createHashHistory","App","useLocation","TransitionGroup","CSSTransition","classNames","timeout","key","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.610d52f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRow\":\"Buttons_buttonRow__dKjZj\",\"button\":\"Buttons_button__1VKNK\",\"container\":\"Buttons_container__np2ep\",\"dropdown\":\"Buttons_dropdown__13J8f\",\"ul\":\"Buttons_ul__3tJo8\",\"li\":\"Buttons_li__1sX4Q\",\"TextInput\":\"Buttons_TextInput__35GbL\",\"SmallButton\":\"Buttons_SmallButton__3rzhd\",\"Switch\":\"Buttons_Switch__39fTc\",\"SwitchActive\":\"Buttons_SwitchActive__2ViHx\",\"SwitchInner\":\"Buttons_SwitchInner__3LnS9\",\"SwitchHandle\":\"Buttons_SwitchHandle__2b8wJ\",\"SwitchOff\":\"Buttons_SwitchOff__3Oaf-\",\"SwitchOn\":\"Buttons_SwitchOn__1_Jsb\",\"ChoosePageButton\":\"Buttons_ChoosePageButton__1-OpM\",\"ChoosePageButtonActive\":\"Buttons_ChoosePageButtonActive__13GmV\",\"ChoosePageButtonHolder\":\"Buttons_ChoosePageButtonHolder__VfFyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SmallText\":\"Server_SmallText__3uOYG\",\"ServerInfoColumn\":\"Server_ServerInfoColumn__35hJK\",\"ServerInfoRow\":\"Server_ServerInfoRow__2Aa7V\",\"serverImage\":\"Server_serverImage__3m2nE\",\"ServerName\":\"Server_ServerName__2irVE\",\"GameInfo\":\"Server_GameInfo__X3Hhq\",\"ServerDescriptionColumn\":\"Server_ServerDescriptionColumn__3pNJs\",\"ServerDescriptionRow\":\"Server_ServerDescriptionRow__12wsx\",\"SwitchGame\":\"Server_SwitchGame__3MjHo\",\"SettingsRow\":\"Server_SettingsRow__2yzpg\",\"SmallInput\":\"Server_SmallInput__1fZ_Z\",\"PlayerRow\":\"Server_PlayerRow__29Z8B\",\"PlayerName\":\"Server_PlayerName__3tLfO\",\"playerBackgroundInfo\":\"Server_playerBackgroundInfo__27qMt\",\"PlayerButtons\":\"Server_PlayerButtons__3dQvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserRow\":\"User_UserRow__1fzJH\",\"Avatar\":\"User_Avatar__3XgeX\",\"DiscordName\":\"User_DiscordName__j-kJJ\",\"DiscordNum\":\"User_DiscordNum__odqe3\",\"secure\":\"User_secure__ADMpb\",\"UserRowSt\":\"User_UserRowSt__D7e-x\",\"DiscordId\":\"User_DiscordId__CJ0BY\",\"DateAdded\":\"User_DateAdded__1FZZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupRow\":\"Group_GroupRow__1Ew1c\",\"GroupName\":\"Group_GroupName__3G6eX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLink\":\"Sidebar_PageLink__3fxKj\",\"PageButton\":\"Sidebar_PageButton__3ug-M\",\"PageLinkActive\":\"Sidebar_PageLinkActive___nnPr\",\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"Logo\":\"Sidebar_Logo__2HFo5\",\"TopSidebar\":\"Sidebar_TopSidebar__BQCyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Flex_Column__3cQ9_\",\"Row\":\"Flex_Row__3SC-0\",\"Grow\":\"Flex_Grow__f7am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"CardRow\":\"Card_CardRow__1NbF3\",\"PageCard\":\"Card_PageCard__3UgmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContainer\":\"PageContainer_PageContainer__1PlzU\",\"PageColumn\":\"PageContainer_PageColumn__3Qegy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3VoE2\"};","\nconst MODE = \"prod\";\n\nconst endPoints = {\n    dev: \"https://homedev.gametools.network/api/\",\n    prod: \"https://manager-api.gametools.network/api/\"\n}\n\nexport default class JsonClient {\n  constructor() {\n    this.isWorking = true;\n    this.user = this.getUserInfo();\n  }\n  openLoginPage() {\n    window.location = this.constructApiUrl(\"login\");\n  }\n    constructApiUrl(method, params) {\n        params = params || {};\n        let paramStr = \"\";\n        for (let s in params) {\n            paramStr += s + \"=\" + params[s] + \"&\";\n        }\n        if (paramStr !== \"\") paramStr = \"?\" + paramStr;\n        const apiEP = endPoints[MODE];\n        return apiEP + method + paramStr;\n    }\n    async fetchMethod(method, params) {\n        let result = await fetch(this.constructApiUrl(method, params), {\n            credentials: \"include\"\n        });\n        return result;\n    }\n    async postMethod(method, params) {\n        let result = await fetch(this.constructApiUrl(method, {}), params);\n        return result;\n    }\n  async postJsonMethod(method, params) {\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(params),\n      credentials: \"include\",\n      headers: {\n          'Content-Type': 'application/json'\n      }\n    };\n    return await this.postMethod(method, options).then(result => {\n      return result.json().then(json => json, error => ({ \"error\": error }));\n    }, error => ({ \"error\": error }));\n  }\n  getJsonMethod(method, params) {\n    return this.fetchMethod(method, params).then(result => {\n      return result.json().then(json => json, error => ({ \"error\": error }));\n    }, error => ({ \"error\": error }));\n  }\n  async getUserInfo() {\n    const defaultUser = {\n      discord: {\n        name: \"\",\n        discriminator: 0,\n        avatar: \"\"\n      },\n      auth: {\n          inGuild: false,\n          isAdmin: false,\n          isDeveloper: false,\n          isOwner: false,\n          signedIn: false\n      }\n    };\n    let response = await this.getJsonMethod(\"getinfo\");\n    if (!response.hasOwnProperty(\"error\")) {\n      return response;\n    }\n    return defaultUser;\n  }\n}","import JsonClient from \"./JsonApi\";\n\nexport class ApiProvider extends JsonClient {\n\n    constructor() {\n        super();\n    }\n\n    logout() {\n        var asyncUser = this.logoutAndChangeUser();\n        this.user = asyncUser;\n    }\n\n    async logoutAndChangeUser() {\n        await this.fetchMethod(\"logout/\");\n        var user = await this.getUserInfo();\n        return user;\n    }\n\n    async kickPlayer({ sid, playername, reason }) {\n        return await this.postJsonMethod(\"changeplayer\", {\n            \"request\": \"kickPlayer\",\n            \"playername\": playername,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async changeRotation({ sid, map }) {\n        return await this.postJsonMethod(\"changelevel\", {\n            \"mapnumber\": map,\n            \"serverid\": sid\n        });\n    }\n\n    async banPlayer({ name, reason, time, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"bantime\": time.toString(),\n            \"reason\": reason\n        }); \n    }\n\n    async unbanPlayer({ name, reason, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async addVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async removeVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async movePlayer({ sid, team, name }) {\n        return await this.postJsonMethod(\"moveplayer\", {\n            \"teamid\": team,\n            \"playername\": name,\n            \"serverid\": sid\n        });\n    }\n\n    async getBanList( sid ) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"bannedList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getLogs() {\n        return await this.getJsonMethod(\"taillog\");\n    }\n\n    async getDevGroups() {\n        var devGroups = await this.getJsonMethod(\"devgroups\");\n        if (\"error\" in devGroups) {\n            throw Error(\"Error on server.\");\n        }\n        return devGroups;\n    }\n\n    async addGroup({ groupName, discordId, modRole, adminRole, sid, remid }) {\n        return await this.postJsonMethod(\"addgroup\", {\n            \"groupname\": groupName,\n            \"adminroleid\": adminRole,\n            \"discordid\": discordId,\n            \"modroleid\": modRole,\n            \"remid\": remid,\n            \"sid\": sid,\n        });\n    }\n\n    async removeGroup({ gid }) {\n        return await this.postJsonMethod(\"delgroup\", {\n            \"groupId\": gid,\n        });\n    }\n\n    async getGroup(gid) {\n        return await this.getJsonMethod(\"groups\", { \"groupid\": gid });\n    }\n\n    async addGroupOwner({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addowner\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupServer({ gid, name, alias }) {\n        return await this.postJsonMethod(\"addserver\", {\n            \"servername\": name,\n            \"serveralias\": alias,\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupAdmin({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addadmin\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupAdmin({ gid, uid }) {\n        return await this.postJsonMethod(\"deladmin\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupOwner({ gid, uid }) {\n        return await this.postJsonMethod(\"delowner\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async getServer(sid) {\n        return await this.getJsonMethod(\"server\", { \"serverid\": sid });\n    }\n\n    async getServerGame(sid) {\n        var game = await this.getJsonMethod(\"servers\", { \"serverid\": sid });\n        if (\"error\" in game.data[0]) {\n            throw Error(game.data[0].error);\n        } else {\n            return game;\n        }\n    }\n\n    async removeServer({ gid, sid }) {\n        return await this.postJsonMethod(\"delserver\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n        });\n    }\n\n    async renameServer({ name, sid }) {\n        return await this.postJsonMethod(\"renameserver\", {\n            \"serverid\": sid,\n            \"servername\": name,\n        });\n    }\n\n    async changeServerAlias({ gid, alias, sid }) {\n        return await this.postJsonMethod(\"serveralias\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n            \"serveralias\": alias,\n        });\n    }\n\n\n}\n\nexport const OperationsApi = new ApiProvider();","import React, { useState } from \"react\";\nimport styles from \"./PageContainer.module.css\";\n\n\nexport function PageContainer(props) {\n    return (\n        <div className={styles.PageContainer}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport function PageColumn(props) {\n    return (\n        <div className={styles.PageColumn}>\n            {props.children}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory } from 'react-router-dom';\n\nimport styles from \"./Sidebar.module.css\";\n\nimport { OperationsApi } from \"../api\";\n\nfunction TopSidebar() {\n    return (\n        <div className={styles.TopSidebar}>\n            <Link to=\"/\" title=\"Main page\">\n                <img src=\"/Comnet-logo.png\" className={styles.Logo} />\n            </Link>\n        </div>\n    );\n}\n\nfunction PageLink(props) {\n    return (\n        <div className={styles.PageLink}>\n            <NavLink to={props.to} activeClassName={styles.PageLinkActive} title={props.name}>{props.name}</NavLink>\n        </div>\n    );\n}\n\nfunction PageButton(props) {\n    return (\n        <div className={styles.PageButton}>\n            <span onClick={props.onClick}>{props.name}</span>\n        </div>\n    );\n}\n\nexport function Sidebar(props) {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    var devLink = \"\", accountLink = \"\", logoutLink = \"\", groupLinks = \"\";\n\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                })\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n\n\n    if (!userError && !isLoading && user) {\n        if (user.auth.signedIn) {\n            if (user.auth.isDeveloper) {\n                devLink = <PageLink to=\"/dev/\" name=\"Developer Options\" />;\n            }\n            accountLink = [\n                <PageLink key={0} to=\"/account/\" name=\"Account\" />,\n                <PageLink key={1} to=\"/group/new/\" name=\"Create Group\" />\n            ];\n            logoutLink = <PageButton onClick={() => { logoutExecutor.mutate({}); history.push('/'); }} name=\"Logout\" />;\n            groupLinks = [];\n            for (let i in user.permissions.isAdminOf) {\n                let group = user.permissions.isAdminOf[i];\n                groupLinks.push(<PageLink to={ \"/group/\" + group.id } name={group.groupName} key={i} />);\n            }\n\n        }\n    }\n\n    \n\n    return (\n        <div className={styles.Sidebar}>\n            <TopSidebar />\n            <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n                <div style={{ display: \"flex\", flexGrow: 2, flexDirection: \"column\" }}>\n                    {accountLink}\n                    {devLink}\n                    {groupLinks}\n                </div>\n                <div style={{ display: \"flex\", flexDirection: \"column\", marginBottom: \"30px\"}}>\n                    <PageButton onClick={() => { window.location = \"https://discord.gametools.network/\" }} name=\"Need help?\" />\n                    {logoutLink}\n                </div>\n            </div>\n        </div>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Buttons.module.css\";\n\n\nexport function Button(props) {\n    var style = {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}</button>\n    );\n}\n\nexport function ButtonLink(props) {\n    if (props.disabled) {\n        return <Button name={props.name} disabled={true} />\n    }\n    return (\n        <NavLink className={styles.button} to={props.to} title={props.name}>{props.name}</NavLink>\n    );\n}\n\nexport function ButtonRow(props) {\n    return (\n        <div className={styles.buttonRow}>{props.children}</div>\n    );\n}\n\n\nexport function TextInput(props) {\n/*    var callback = props.callback, elementClassName = styles.TextInput;\n    if (props.disabled) {\n        callback = null;\n        elementClassName = styles.TextInputDis;\n    }*/\n    return (\n        <input defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onChange={props.callback} />\n    );\n}\n\nexport function SmallButton(props) {\n    if (props.disabled) {\n        return (\n            \"\"\n        );\n    }\n    return (\n        <div className={styles.SmallButton} onClick={_ => props.callback(props.vars)} title={props.name}>{props.content || props.name}</div>\n    );\n}\n\nexport function Switch(props) {\n\n    const [checkedSwitch, clickSwitch] = useState(props.checked || false);\n    const switchClassName = checkedSwitch ? styles.Switch : styles.SwitchActive;\n\n    const switchTheSwitch = () => {\n        var newVal = !checkedSwitch;\n        clickSwitch(newVal);\n        if (props.callback) props.callback(newVal);\n    };\n\n    /*  If user uses tabs, make it clickable on Enter key */\n    const SwitchOnenter = (e) => {\n        if (e.charCode === 13) switchTheSwitch();\n    };\n\n    return (\n        <div className={switchClassName} onClick={switchTheSwitch} onKeyPress={SwitchOnenter} role=\"switch\" tabindex=\"1\">\n            <span className={styles.SwitchInner}>\n                <span className={styles.SwitchOn}></span>\n                <span className={styles.SwitchOff}></span>\n            </span>\n            <span className={styles.SwitchHandle}></span>\n        </div>\n    );\n}\n\nexport function DropdownButton(props) {\n    const [open, setOpen] = useState(false);\n\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.container} ref={container}>\n            <button type=\"button\" className={styles.button} onClick={() => setOpen(!open)}>{props.name}</button>\n            {open && (<div className={styles.dropdown}>\n                <ul className={styles.ul}>\n                    {\n                        props.options.map(option => <li className={styles.li} onClick={option.callback}>{option.name}</li>)\n                    }\n                </ul>\n            </div>)}\n        </div>\n    );\n}\n\n\nexport function ChoosePageButtons(props) {\n\n    const [active, setActive] = useState(0);\n\n    return (\n        <div className={styles.ChoosePageButtonHolder} >\n            {\n                props.buttons.map((button, i) => (\n                    <div\n                        key={i}\n                        className={(i === active) ? styles.ChoosePageButtonActive : styles.ChoosePageButton}\n                        onClick={_ => { setActive(i); button.callback() }}\n                        title={button.name}\n                    >\n                        {button.content || button.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n    \n}","import React from \"react\";\n\nimport styles from \"./Flex.module.css\";\n\n\nexport function Column(props) {\n    return (\n        <div className={styles.Column}>{props.children}</div>\n    );\n}\n\nexport function Row(props) {\n    return (\n        <div className={styles.Row}>{props.children}</div>\n    );\n}\n\nexport function Grow(props) {\n    return (\n        <div className={styles.Grow}>{props.children}</div>\n    );\n}","import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nimport { ChoosePageButtons } from \"./Buttons.js\";\n\nexport function Card(props) {\n    return (\n        <div className={styles.card} style={props.style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function CardRow(props) {\n    return <span className={styles.CardRow}>{props.children}</span>;\n}\n\nexport function PageCard(props) {\n    return (\n        <>\n            <ChoosePageButtons buttons={props.buttons} />\n            <div className={styles.PageCard} style={props.style}>\n                {props.children}\n             </div>\n        </>\n    );\n}","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\n\nexport function Header(props) {\n    return (\n        <div className={styles.Header}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport styles from \"./User.module.css\";\n\nexport function UserRow(props) {\n    var user = props.discord;\n    return (\n        <div className={styles.UserRow}>\n            <img alt=\"\" src={user.avatar} className={styles.Avatar} />\n            <div className={styles.DiscordName}>\n                {user.name}\n                <span className={styles.DiscordNum}>\n                    {user.discriminator}\n                </span>\n            </div>\n            <div className={styles.secure}>\n                <svg viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 12C6.39782 12 6.77935 11.842 7.06066 11.5607C7.34196 11.2794 7.5 10.8978 7.5 10.5C7.5 9.6675 6.825 9 6 9C5.60217 9 5.22064 9.15804 4.93934 9.43934C4.65804 9.72065 4.5 10.1022 4.5 10.5C4.5 10.8978 4.65804 11.2794 4.93934 11.5607C5.22064 11.842 5.60217 12 6 12ZM10.5 5.25C10.8978 5.25 11.2794 5.40804 11.5607 5.68934C11.842 5.97065 12 6.35218 12 6.75V14.25C12 14.6478 11.842 15.0294 11.5607 15.3107C11.2794 15.592 10.8978 15.75 10.5 15.75H1.5C1.10218 15.75 0.720644 15.592 0.43934 15.3107C0.158035 15.0294 0 14.6478 0 14.25V6.75C0 5.9175 0.675 5.25 1.5 5.25H2.25V3.75C2.25 2.75544 2.64509 1.80161 3.34835 1.09835C4.05161 0.395088 5.00544 0 6 0C6.49246 0 6.98009 0.0969967 7.43506 0.285452C7.89003 0.473907 8.30343 0.75013 8.65165 1.09835C8.99987 1.44657 9.27609 1.85997 9.46455 2.31494C9.653 2.76991 9.75 3.25754 9.75 3.75V5.25H10.5ZM6 1.5C5.40326 1.5 4.83097 1.73705 4.40901 2.15901C3.98705 2.58097 3.75 3.15326 3.75 3.75V5.25H8.25V3.75C8.25 3.15326 8.01295 2.58097 7.59099 2.15901C7.16903 1.73705 6.59674 1.5 6 1.5Z\" fill=\"#55F165\" />\n                </svg>\n                Logged in\n            </div>\n        </div>\n    );\n}\n\nexport function UserStRow(props) {\n    var user = props.user;\n    var dateAdded = new Date(Date.parse(user.addedAt));\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var dateString = `${dateAdded.getUTCDate()} ${months[dateAdded.getUTCMonth()]} ${dateAdded.getUTCHours()}:${dateAdded.getUTCMinutes()}`;\n    return (\n        <div className={styles.UserRowSt}>\n            <div className={styles.DiscordName}>\n                {user.name}\n            </div>\n            <div className={styles.DateAdded}>\n                {dateString}\n            </div>\n            <div className={styles.DiscordId}>\n                {user.id}\n            </div>\n            {props.button}\n        </div>\n    );\n}\n\nexport function FakeUserStRow(props) {\n    return (\n        <div className={styles.UserRowSt} />\n    );\n}\n","import React from \"react\";\nimport styles from \"./Group.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport function GroupRow(props) {\n    var group = props.group;\n    return (\n        <Link className={styles.GroupRow} to={\"/group/\" + group.id}>\n            <span className={styles.GroupName}>{group.groupName}</span>\n            Manage group\n        </Link>\n    );\n}\n\nexport function ServerRow(props) {\n    var server = props.server;\n\n    // If not yet setteled\n    if (server.id === null) {\n        return (\n            <div className={styles.GroupRow}>\n                <span className={styles.GroupName}>{server.name}</span>\n                {props.button}\n            </div>\n        );\n    }\n\n    return (\n        <div className={styles.GroupRow}>\n            <Link className={styles.GroupName} to={\"/server/\" + server.id}>\n                {server.name}\n            </Link>\n            {props.button}\n        </div>\n    );\n}\n\nexport function GroupAdminAccount(props) {\n\n    var { remid, sid } = props.cookie;\n\n    return (\n        <div className={styles.AdminAccount}>\n        </div>\n    );\n\n}","import React, { useState } from \"react\";\nimport styles from \"./Server.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { Button, ButtonRow, Switch, DropdownButton, ButtonLink } from \"./Buttons\";\n\n\nexport function SmallText(props) {\n    return (<span className={styles.SmallText}>{props.children}</span>);\n}\n\nexport function EditableText(props) {\n    return (<p>{props.children}</p>);\n}\n\nexport function SettingsRow(props) {\n    return <div className={styles.SettingsRow}>{props.children}</div>;\n}\n\nexport function SmallIntInput(props) {\n    return <input type=\"text\" className={styles.SmallInput} defaultValue={props.value} />;\n}\n\nexport function ServerInfo(props) {\n    var server = props.server;\n    return (\n        <>\n            <div className={styles.ServerInfoColumn}>\n                <SettingsRow>\n                    <SmallText>Auto kick/ban</SmallText>\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallText>Kick on ping</SmallText>\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallText>Discord bot channel</SmallText>\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallText>Bot lang</SmallText> \n                </SettingsRow>\n            </div>\n            <div className={styles.ServerDescriptionColumn}>\n                <SettingsRow>\n                    <Switch checked={server.autoBanKick} callback={() => { }} />\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallIntInput value={server.autoPingKick} />\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallIntInput value={server.discordBotChannel} />\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallIntInput value={server.discordBotLang} />\n                </SettingsRow>\n            </div>\n            <div className={styles.ServerDescriptionColumn}>\n                <SettingsRow>\n                    <SmallText>Bot Min players</SmallText>\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallText>Bot Prev Req Count</SmallText>\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallText>Bot Started Amount</SmallText>\n                </SettingsRow>\n            </div>\n            <div className={styles.ServerDescriptionColumn}>\n                <SettingsRow>\n                    <SmallIntInput value={server.discordBotMinPlayerAmount} />\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallIntInput value={server.discordBotPrevReqCount} />\n                </SettingsRow>\n                <SettingsRow>\n                    <SmallIntInput value={server.discordBotStartedAmount} />\n                </SettingsRow>\n            </div>\n        </>\n    );\n}\n\nexport function ServerRotation(props) {\n    var game = props.game.data[0].info;\n    var [rotationId, setRotationId] = useState(\"\");\n    return (\n        <div className={styles.ServerInfoColumn}>\n            <div className={styles.ServerDescriptionRow}>\n                <img className={styles.serverImage} src={game.url} />\n                <div className={styles.GameInfo}>\n                    <span className={styles.ServerName}>{game.prefix}</span>\n                    <SmallText>{`${game.serverInfo} players`}</SmallText>\n                    <SmallText>{\"Running now\"}</SmallText>\n                </div>\n            </div>\n            <ButtonRow>\n                <Button name=\"Restart\" callback={_ => props.rotate(game.rotationId)} />\n                <select className={styles.SwitchGame} value={rotationId} onChange={e => setRotationId(e.target.value)}>\n                    <option value=\"\">Switch game..</option>\n                    {game.rotation.map(value => \n                        <option value={value.index}>{value.mapname}</option>\n                    )}\n                </select>\n                {(rotationId !== \"\") ? <Button name=\"Apply\" callback={_ => { props.rotate(rotationId); setRotationId(\"\"); }} /> : \"\"}\n            </ButtonRow>\n        </div>\n    );\n}\n\nexport function PlayerInfo(props) {\n\n    var info = props.game.data[0].players[props.team].players;\n\n    var moveTeam = (props.team == \"0\") ? \"1\" : \"2\";\n\n    let getDropdownOptions = (player) => {\n        return [\n            { name: \"Give VIP\", callback: () => props.giveVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n            { name: \"Remove VIP\", callback: () => props.removeVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n        ]\n    };\n    return (\n        info.map(player => \n            <div className={styles.PlayerRow}>\n                <span className={styles.PlayerName}>\n                    {player.platoon !== \"\" ? `[${player.platoon}] ` : \"\"}\n                    {player.name}\n                </span>\n                <div className={styles.PlayerButtons}>\n                    {/*<Button name=\"Stats\"></Button>*/}\n                    <Button name=\"Move\" callback={_ => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam})} />\n                    <ButtonLink name=\"Kick\" to={`/server/${props.sid}/kick/${player.name}/`} />\n                    <ButtonLink name=\"Ban\" to={`/server/${props.sid}/ban/${player.name}/`} />\n                    <DropdownButton options={getDropdownOptions(player)} name=\"☰\"></DropdownButton>\n                </div>\n            </div>\n        )\n    );\n}\n\nexport function ServerInfoHolder(props) {\n    return (\n        <div className={styles.ServerInfoRow}>\n            {props.children}\n        </div>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, Button, ButtonRow, Row } from \"../components\";\n\n\nexport default function Home() {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var loginButton = <Button name=\"Loading..\" />;\n\n    if ((!isLoading && !userError && user && !user.auth.signedIn) || (userError && !isLoading)) {\n        loginButton = <Button name=\"Login with Discord\" callback={() => { OperationsApi.openLoginPage() }} />;\n    } else if (!isLoading && !userError && user && user.auth.signedIn) {\n        return <Redirect to=\"/account/\" />\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Server Panel</h2>\n                </Header>\n                <Card style={{ maxWidth: '800px' }}>\n                    <h2>Introducing new tools</h2>\n                    <p>Community Network developed server panel to controll Battlefield 1 servers with our internal APIs. With server panel you can manage your servers and setup Discord integration. Instantly add and remove server admins, via the server panel or discord roles. Your admins can ban, kick, move players, add VIPs, revoke bans, watch ban list with more details, download ban and vip lists. As an owner you can access logs and see every action that was made via server panel. We integrating our tools tightly, providing Discord commands to administrate your servers.</p>\n                    <p>Contact us to get unlimited free access!</p>\n                    <ButtonRow>{loginButton}</ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState } from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, Button, CardRow, UserRow, Row } from \"../components\";\n\n\nexport default function Account() {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var userLine = \"\";\n\n    if (!userError && !isLoading && user) {\n        if (!user.auth.signedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            userLine = <UserRow discord={user.discord} />;\n        }\n    } else if (userError && !isLoading) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Account</h2>\n                </Header>\n                <Card>\n                    <h2>Discord Profile</h2>\n                    {userLine}\n                </Card>\n            </Column>\n            <Column>\n                <Header />\n                <Card>\n                    <h2>Permissions</h2>\n                    <CardRow>Administrator</CardRow>\n                    <CardRow>Server owner</CardRow>\n                    <CardRow>System administrator</CardRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState } from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, GroupRow, Row } from \"../components\";\n\n\nexport function Developer() {\n\n    const { isLoading, isError, data } = useQuery('devGroups', () => OperationsApi.getDevGroups())\n    \n    var groups = [];\n\n    if (!isLoading && !isError && data) {\n        data.data.map((g, i) => {\n            groups.push(<GroupRow key={i} group={g} />);\n        });\n    } else if (isError) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Developer Options</h2>\n                </Header>\n                <Card>\n                    <h2>List of Groups</h2>\n                    {groups}\n                    <ButtonRow>\n                        <ButtonLink name=\"Add new Group\" to=\"/group/new/\" />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useRef } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ServerRotation, ServerInfoHolder, ButtonLink, ButtonRow, Button, PageCard, Row, ServerRow, Grow, TextInput, SmallButton, ServerInfo, PlayerInfo } from \"../components\";\n\n\nexport function Server(props) {\n    var sid = props.match.params.sid;\n\n    const queryClient = useQueryClient();\n\n    const { isError: serverError, data: server } = useQuery('server' + sid, () => OperationsApi.getServer(sid), { staleTime: 60000 });\n    const { isError: gameError, data: runningGame } = useQuery('serverGame' + sid, () => OperationsApi.getServerGame(sid), { staleTime: 60000 });\n\n    var serverCard = \"\";\n    var playerList = \"\";\n    var playerInGame = false;\n    var playerNicknameTeam;\n\n    var [playerName, setPlayerName] = useState(\"\");\n\n    var [addVipStatus, changeAddVipStatus] = useState({ name: \"Add Vip\", status: false });\n    var [removeVipStatus, changeRemoveVipStatus] = useState({ name: \"Remove Vip\", status: false });\n    var [unbanStatus, changeUnbanStatus] = useState({ name: \"Unban\", status: false });\n\n    var [tabsListing, setTabsListing] = useState(\"info\");\n\n    const UnbanPlayer = useMutation(\n        v => OperationsApi.unbanPlayer(v), {\n        onMutate: async () => {\n            changeUnbanStatus({ name: \"Pending..\", status: true });\n            return { status: unbanStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeUnbanStatus(context.status);\n        },\n    }\n    );\n\n    const RemoveVip = useMutation(\n        v => OperationsApi.removeVip(v), {\n        onMutate: async () => {\n            changeRemoveVipStatus({ name: \"Pending..\", status: true });\n            return { status: removeVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeRemoveVipStatus(context.status);\n        },\n    }\n    );\n\n    const AddVip = useMutation(\n        v => OperationsApi.addVip(v), {\n        onMutate: async () => {\n            changeAddVipStatus({ name: \"Pending..\", status: true });\n            return { status: addVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeAddVipStatus(context.status);\n        },\n    }\n    );\n\n    const movePlayer = useMutation(\n        variables => OperationsApi.movePlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, team, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    if (team == \"1\") {\n                        old.data[0].players[1].players.push(old.data[0].players[0].players.find(e => e.name === name));\n                        old.data[0].players[0].players = old.data[0].players[0].players.filter(p => p.name !== name);\n                    } else {\n                        old.data[0].players[0].players.push(old.data[0].players[1].players.find(e => e.name === name));\n                        old.data[0].players[1].players = old.data[0].players[1].players.filter(p => p.name !== name);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const serverTabs = [\n        {\n            name: \"Server info\",\n            callback: () => setTabsListing(\"info\"),\n        },\n        {\n            name: \"Settings\",\n            callback: () => setTabsListing(\"settings\"),\n        }\n    ];\n\n    const catTabs = {\n        info: (\n            <ServerInfoHolder>\n                <ServerRotation game={runningGame} rotate={id => OperationsApi.changeRotation({ sid, map: id })} />\n            </ServerInfoHolder>\n        ),\n        settings: (\n            <>\n                <p>Servers can be attached to Discord bots. <br /> Main bot settings for current server.</p>\n                <ServerInfoHolder>\n                    <ServerInfo server={server} />\n                </ServerInfoHolder>\n            </>\n        )\n    }\n\n    if (!serverError && server && !gameError && runningGame) {\n        serverCard = (\n            <Row>\n                <Column>\n                    <PageCard buttons={serverTabs} >\n                        {catTabs[tabsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n        );\n    }\n\n    var isOpsMode = false;\n\n    if (!gameError && runningGame) {\n\n        isOpsMode = runningGame.data[0].info.mode === \"Operations\";\n\n        var f1 = runningGame.data[0].players[0].players.find(e => e.name == playerName);\n        var f2 = runningGame.data[0].players[1].players.find(e => e.name == playerName);\n\n        if (f1 !== undefined) {\n            playerNicknameTeam = \"1\";\n        } else if(f2 !== undefined) {\n            playerNicknameTeam = \"2\";\n        }\n\n        var playerInGame = (playerName !== \"\") &&\n            (\n                (f1 !== undefined) || (f2 !== undefined)\n            );\n\n        playerList = (\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>Team 1</h2>\n                        <PlayerInfo game={runningGame} team=\"0\" sid={sid} onMove={movePlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n                <Column>\n                    <Card>\n                        <h2>Team 2</h2>\n                        <PlayerInfo game={runningGame} team=\"1\" sid={sid} onMove={movePlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n            </Row>\n        )\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>Dashboard</h2>\n                    </Header>\n                </Column>\n            </Row>\n            {serverCard}\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>Console</h2>\n                        <Row>\n                            <TextInput name=\"Player name\" callback={e => setPlayerName(e.target.value)} style={{\n                                marginRight: 12,\n                            }}/>\n                            <ButtonRow>\n                                <ButtonLink disabled={playerName === \"\"} name=\"Kick\" to={`/server/${sid}/kick/${playerName}/`} />\n                                <Button disabled={!playerInGame} name=\"Move\" callback={_ => movePlayer.mutate({ sid, team: playerNicknameTeam, name: playerName })} />\n                                <ButtonLink disabled={playerName === \"\"} name=\"Ban\" to={`/server/${sid}/ban/${playerName}/`} />\n                                <Button disabled={playerName === \"\" || unbanStatus.status} name={unbanStatus.name} callback={_ => UnbanPlayer.mutate({ sid, name: playerName, reason: \"\" })} />\n                                <Button disabled={playerName === \"\" || addVipStatus.status || isOpsMode} name={addVipStatus.name} callback={_ => AddVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                                <Button disabled={playerName === \"\" || removeVipStatus.status || isOpsMode} name={removeVipStatus.name} callback={_ => RemoveVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                            </ButtonRow>\n                        </Row>\n                    </Card>\n                </Column>\n            </Row>\n            {playerList}\n        </>\n    );\n\n}\n\n\nfunction ServerKickPlayer(props) {\n\n    var { sid, eaid } = props;\n\n    var [reason, setReason] = useState(\"\");\n    const queryClient = useQueryClient();\n\n    const KickPlayer = useMutation(\n        v => OperationsApi.kickPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid, reason }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Kick player</h2>\n                </Header>\n                <Card>\n                    <h2>You are going to kick player {props.eaid}</h2>\n                    <TextInput name=\"Reason\" callback={(e) => setReason(e.target.value)} />\n                    <ButtonRow>\n                        <ButtonLink name=\"Chancel\" to={`/server/${props.sid}/`} />\n                        <Button name=\"Kick him!\" disabled={reason === \"\"} callback={() => { KickPlayer.mutate({ sid, eaid, reason, playername: props.eaid }); history.push(`/server/${props.sid}/`); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nfunction ServerBanPlayer(props) {\n\n    var { sid, eaid } = props;\n\n    var [reason, setReason] = useState(\"\");\n    var [banTime, setBanTime] = useState(0);\n    const queryClient = useQueryClient();\n\n    const BanPlayer = useMutation(\n        v => OperationsApi.banPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Ban player</h2>\n                </Header>\n                <Card>\n                    <h2>You are going to ban player {props.eaid}</h2>\n                    <TextInput name=\"Reason\" callback={(e) => setReason(e.target.value)} />\n                    <TextInput type=\"number\" name=\"Ban time\" defaultValue={0} callback={(e) => setBanTime(e.target.value)} />\n                    <ButtonRow>\n                        <ButtonLink name=\"Chancel\" to={`/server/${props.sid}/`} />\n                        <Button name=\"Ban hammer!\" disabled={reason === \"\" || banTime < 0} callback={() => { BanPlayer.mutate({ sid, eaid, reason, name: props.eaid, time: banTime }); history.push(`/server/${props.sid}/`); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function ServerAction(props) {\n\n    var { eaid, action, sid } = props.match.params;\n\n    if (action === \"kick\") {\n        return <ServerKickPlayer eaid={eaid} sid={sid} />;\n    } else if (action === \"ban\") {\n        return <ServerBanPlayer eaid={eaid} sid={sid} />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Uh? Method {action} is not allowed..</h2>\n                </Header>\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, Button, UserStRow, Row, ServerRow, FakeUserStRow, TextInput, SmallButton, PageCard } from \"../components\";\n\n\nconst deleteIcon = (\n    <svg viewBox=\"0 0 24 24\" style={{ width: '16px' }}>\n        <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n    </svg>\n);\n\n\nexport function Group(props) {\n\n    var gid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n\n    const { error: groupError, data: groups } = useQuery('groupId' + gid, () => OperationsApi.getGroup(gid), { staleTime: 30000 });\n    const { error: userError, data: user } = useQuery('user', () => OperationsApi.user);\n\n\n    const removeAdmin = useMutation(\n        variables => OperationsApi.removeGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins = old.data[0].admins.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const removeServer = useMutation(\n        variables => OperationsApi.removeServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, sid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers = old.data[0].servers.filter(server => server.id !== sid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n\n    const removeOwner = useMutation(\n        variables => OperationsApi.removeGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners = old.data[0].owners.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n    var group = (groups && groups.data && groups.data.length > 0) ? groups.data[0] : null;\n    const [listing, setListing] = useState(\"servers\");\n    const [settingsListing, setSettingsListing] = useState(\"account\");\n\n    const catListing = {\n        owners: <GroupOwners group={group} user={user} gid={gid} onDelete={removeOwner} />,\n        admins: <GroupAdmins group={group} user={user} gid={gid} onDelete={removeAdmin} />,\n        servers: <GroupServers group={group} user={user} gid={gid} onDelete={removeServer} />,\n    }\n\n    const catSettings = {\n        account: <GroupServerAccount gid={gid} user={user} group={group} />,\n        discord: \"\",\n        danger: <GroupDangerZone gid={gid} user={user} group={group} />,\n    }\n\n    const pageCycle = [\n        {\n            name: \"Servers\",\n            callback: () => setListing(\"servers\"),\n        },\n        {\n            name: \"Admins\",\n            callback: () => setListing(\"admins\"),\n        },\n        {\n            name: \"Owners\",\n            callback: () => setListing(\"owners\"),\n        },\n    ]\n\n    const settingsCycle = [\n        {\n            name: \"Server account\",\n            callback: () => setSettingsListing(\"account\"),\n        },\n        {\n            name: \"Discord integration\",\n            callback: () => setSettingsListing(\"discord\"),\n        },\n        {\n            name: \"Danger zone\",\n            callback: () => setSettingsListing(\"danger\"),\n        },\n    ];\n\n    if (groupError || userError || (groups && groups.data && groups.data.length === 0)) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>Group</h2>\n                    </Header>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>Group name - {(group) ? group.groupName : \"pending..\"}</h2>\n                        <p style={{ marginBottom: 0 }}>Identity {gid}</p>\n                    </Card>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={settingsCycle} >\n                        {catSettings[settingsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={pageCycle} >\n                        {catListing[listing]}\n                    </PageCard>\n                 </Column>\n            </Row>\n        </>\n    );\n\n\n}\n\nfunction GroupAdmins(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    return <>\n        <h5>Admin role can manage servers. You need to have at least <br />Owner role to add new admins.</h5>\n        {\n            (props.group) ? (\n                props.group.admins.map((admin, i) => (\n                    <UserStRow user={admin} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            disabled={!hasRights}\n                            content={deleteIcon}\n                            vars={{ gid: props.gid, uid: admin.id }}\n                            callback={props.onDelete.mutate} />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name=\"Add Admin\" to={\"/group/\" + props.gid + \"/add/admin\"} />\n                ) : (\n                    <Button disabled={true} name=\"Not allowed\" content=\"Add Admin\" />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\n\nfunction GroupServers(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    return <>\n        <h5>Servers instances added to current group. You need to have <br />Owner role in order to add new servers.</h5>\n        {\n            (props.group) ? (\n                props.group.servers.map((server, i) => (\n                    <ServerRow server={server} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, sid: server.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name=\"Add Server\" to={\"/group/\" + props.gid + \"/add/server\"} />\n                ) : (\n                    <Button disabled={true} name=\"Not allowed\" content=\"Add Server\" />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\nfunction GroupOwners(props) {\n\n    var hasRights = false;\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    return <>\n        <h5>List of current group Owners. This role can add new Servers, <br />Admins and other owners. Be carefull with it!</h5>\n        {\n            (props.group) ? (\n                props.group.owners.map((owner, i) => (\n                    <UserStRow user={owner} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, uid: owner.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name=\"Add Owner\" to={\"/group/\" + props.gid + \"/add/owner\"} />\n                ) : (\n                    <Button disabled={true} name=\"Not allowed\" content=\"Add Owner\" />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\n\nfunction GroupServerAccount(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const [sid, setSid] = useState(\"\");\n    const [remid, setRemid] = useState(\"\");\n\n    useEffect(() => {\n        if (props.group) {\n            if (remid !== props.group.cookie.remid)\n                setRemid(props.group.cookie.remid);\n            if (sid !== props.group.cookie.sid)\n                setSid(props.group.cookie.sid);\n        } \n    }, [props.group]);\n\n    return (\n        <>\n            <p style={{ marginTop: \"8px\" }}>\n                Account manager, that will administrate your servers.\n            </p>\n\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setRemid(e.target.value)} defaultValue={remid} name={\"Remid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Session cookies\n                </p>\n            </Row>\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setSid(e.target.value)} defaultValue={sid} name={\"Sid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Reminder session cookies\n                </p>\n            </Row>\n            {\n                (props.group && (sid !== props.group.cookie.sid || remid !== props.group.cookie.remid)) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply\" disabled={!allowedTo} />\n                    </ButtonRow>\n                ): \"\"\n            }\n        </>\n    );\n}\n\nfunction GroupDangerZone(props) {\n\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    return (\n        <>\n            <p>Once you delete a group, it will remove all the servers,<br /> server account and users used in it.</p>\n            <ButtonRow>\n                <ButtonLink name=\"Delete Group\" to={`/group/${props.gid}/delete/`} disabled={!allowedTo} />\n            </ButtonRow>\n        </>\n    );\n}\n\nexport function AddGroupOwner(props) {\n    var gid = props.match.params.gid;\n\n    var nickname = \"\", uid = \"\";\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupOwnerExecute = useMutation(\n        variables => OperationsApi.addGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n                \n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Add new Owner</h2>\n                </Header>\n                <Card>\n                    <h2>Group Owner</h2>\n                    <TextInput name=\"Nickname (any, will be auto-updated)\" callback={(e)=>{nickname=e.target.value}}/>\n                    <TextInput name=\"Discord UID\" callback={(e) => { uid = e.target.value; }}/>\n                    <ButtonRow>\n                        <Button name=\"Add Owner\" callback={() => { AddGroupOwnerExecute.mutate({ gid, uid, nickname }); history.push(\"/group/\" + gid);  }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\nexport function AddGroupAdmin(props) {\n    var gid = props.match.params.gid;\n\n    const [addAdminState, changeState] = useState({ uid: \"\", nickname: \"\", canAdd: false });\n\n    var nickname = \"\", uid = \"\";\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupAdminExecute = useMutation(\n        variables => OperationsApi.addGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const updateState = (values) => {\n        var newState = {\n            ...addAdminState,\n            ...values\n        };\n        newState.canAdd = newState.uid !== \"\";\n        changeState(newState);\n    }\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Add new Admin</h2>\n                </Header>\n                <Card>\n                    <h2>Group Admin</h2>\n                    <TextInput name=\"Nickname (any, will be auto-updated)\" callback={(e) => updateState({nickname: e.target.value}) } />\n                    <TextInput name=\"Discord UID\" callback={(e) => updateState({uid: e.target.value}) } />\n                    <ButtonRow>\n                        <Button name=\"Add Admin\" disabled={!addAdminState.canAdd} callback={() => { AddGroupAdminExecute.mutate({ gid, uid: addAdminState.uid, nickname: addAdminState.nickname }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function AddGroup(props) {\n\n    var groupName = \"\", discordId = \"\", staffRole = \"\";\n\n    const [addGroupState, changeState] = useState({\n        variables: {\n            groupName: \"\",\n            discordId: \"\",\n            adminRole: \"\",\n            modRole: \"\"\n        },\n        roleDisplay: false,\n        canAdd: false\n    });\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const AddNewGroupExecute = useMutation(\n        variables => OperationsApi.addGroup(variables),\n        {\n            onMutate: async (variables) => {\n                await queryClient.cancelQueries('devGroups');\n                return {}\n            },\n            onSettled: (data, error, variables, context) => {\n                queryClient.refetchQueries('devGroups');\n            },\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.roleDisplay = (newVars.discordId !== \"\");\n        newGroupState.canAdd =\n            (newVars.groupName !== \"\") && (newVars.remid !== \"\") && (newVars.sid !== \"\");\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Create new Group</h2>\n                </Header>\n                <Card>\n                    <h2>Group info</h2>\n                    <p style={{ marginBottom: \"8px\" }}>\n                        Create a new group to manage your community servers.<br />\n                        <i>NOTE: This tools are in opened Beta test</i>\n                    </p>\n                    <TextInput name=\"Name\" callback={(e) => { checkInputVariables({ groupName: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Optionaly, you can add your discord server, to integrate server tools\n                    </h5>\n                    <TextInput name=\"Discord Server ID\" callback={(e) => { checkInputVariables({ discordId: e.target.value }) }} />\n                    <TextInput name=\"Mod role ID\" disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ modRole: e.target.value }) }} />\n                    <TextInput name=\"Admin role ID\" disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ adminRole: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Every group need to be assigned special account with certain requirments: <br />\n                        It should be a BF1 server moderator (owner access not required)<br />\n                        This account shouldn't be used anywhere else, otherwise it will lead in errors<br />\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Session cookies can be found at <i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name=\"SID cookie\" type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Reminder session cookies can be found at <i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name=\"REMID cookie\" type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        By pressing this button, you agree to give <br />server manager tool access to the account.\n                    </h5>\n                    <ButtonRow>\n                        <Button name=\"Create group\" disabled={!addGroupState.canAdd} callback={() => { AddNewGroupExecute.mutate(addGroupState.variables); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function DeleteGroup(props) {\n\n    var thisGid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const DeleteGroupExecute = useMutation(\n        variables => OperationsApi.removeGroup(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('devGroups')\n                // Snapshot the previous value\n                const previousGroups = queryClient.getQueryData('devGroups')\n                // Optimistically update to the new value\n                queryClient.setQueryData('devGroups', old => {\n                    if (old) {\n                        old.data = old.data.filter(group => group.id !== gid);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroups, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('devGroups', context.previousGroups)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('devGroups')\n            },\n        }\n    );\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Delete Group</h2>\n                </Header>\n                <Card>\n                    <h2>Danger zone</h2>\n                    <p>Are you sure you want to delete this group?</p>\n                    <ButtonRow>\n                        <ButtonLink name=\"Oh, no!\" to={\"/group/\" + thisGid} />\n                        <Button name=\"Yes, delete\" callback={() => { DeleteGroupExecute.mutate({ gid: thisGid }); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function AddGroupServer(props) {\n    var gid = props.match.params.gid;\n\n    var name = \"\", alias = \"\";\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupServerExecute = useMutation(\n        variables => OperationsApi.addGroupServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async({ gid, name, alias }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers.push({\n                        \"addedAt\": UTCNow,\n                        \"id\": null,\n                        \"name\": name\n                    });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Add new Server</h2>\n                </Header>\n                <Card>\n                    <h2>Group Server</h2>\n                    <TextInput name=\"Server name\" callback={(e) => { name = e.target.value }} />\n                    <TextInput name=\"Alias (optional)\" callback={(e) => { alias = e.target.value; }} />\n                    <ButtonRow>\n                        <Button name=\"Add Server\" callback={() => { AddGroupServerExecute.mutate({ gid, alias, name }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function EditGroup(props) {\n    return (<></>);\n}","import React from \"react\";\nimport { Route, Switch, HashRouter } from 'react-router-dom';\n\nimport Home from \"./Home\";\nimport Account from \"./Account\";\nimport { Developer } from \"./Developer\";\nimport { Server, ServerAction } from \"./Server\";\nimport { Group, AddGroupOwner, EditGroup, AddGroupAdmin, AddGroup, DeleteGroup, AddGroupServer } from \"./Group\";\n\n\n\nexport default function Views(props) {\n    return (\n        <Switch>\n\n            <Route exact path=\"/\" component={Home} />\n\n            <Route exact path=\"/account/\" component={Account} />\n\n            <Route exact path=\"/server/:sid/\" component={Server} />\n            {/* exact path=\"/server/:sid/manage/\" />*/}\n            <Route exact path=\"/server/:sid/:action/:eaid/\" component={ServerAction} />\n\n            <Route exact path=\"/group/new/\" component={AddGroup} />\n            <Route exact path=\"/group/:gid/\" component={Group} />\n\n            <Route exact path=\"/group/:gid/add/server\" component={AddGroupServer} />\n            <Route exact path=\"/group/:gid/add/admin/\" component={AddGroupAdmin} />\n            <Route exact path=\"/group/:gid/add/owner/\" component={AddGroupOwner} />\n\n            <Route exact path=\"/group/:gid/edit/\" component={EditGroup} />\n            <Route exact path=\"/group/:gid/logs/\" />\n            <Route exact path=\"/group/:gid/delete\" component={DeleteGroup} />\n\n            <Route exact path=\"/dev/\" component={Developer} />\n\n        </Switch>\n    );\n}","\nimport React from \"react\";\nimport { HashRouter, useLocation } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './App.css';\nimport './fade.css';\n\nimport Views from \"./views\";\nimport { createHashHistory } from 'history';\n\nimport { Sidebar, PageContainer, PageColumn } from \"./components\";\n\nexport const history = createHashHistory();\n\nfunction ViewportHolder(props) {\n    return (\n        <div className=\"App\">{props.children}</div>\n    );\n}   \n\nfunction App() {\n\n    let location = useLocation();\n\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Sidebar />\n                <TransitionGroup component={PageContainer}>\n                    <CSSTransition key={location.key} classNames=\"fade\" timeout={200}>\n                        <PageColumn>\n                            <Views />\n                        </PageColumn>\n                    </CSSTransition>\n                </TransitionGroup>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\n// Browser rendering\n\nReactDOM.render(\n\n    <React.StrictMode> \n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}