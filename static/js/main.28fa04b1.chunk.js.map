{"version":3,"sources":["components/Buttons.module.css","components/Group.module.css","components/Sidebar.module.css","components/User.module.css","components/Card.module.css","components/MainPage.module.css","components/TopBar.module.css","components/Status.module.css","components/Server.module.css","components/Flex.module.css","components/PageContainer.module.css","components/Header.module.css","JsonApi.js","api.js","components/PageContainer.js","testing/ABtesting.js","components/Sidebar.js","components/Status.js","components/Buttons.js","components/Flex.js","components/Card.js","components/Header.js","components/User.js","components/Group.js","components/MainPage.js","components/Server.js","views/Account.js","views/Developer.js","views/Server.js","views/Group.js","views/index.js","views/Main.js","App.js","index.js"],"names":["module","exports","endPoints","dev","prod","OperationsApi","asyncUser","this","logoutAndChangeUser","user","a","fetchMethod","getUserInfo","sid","playername","reason","postJsonMethod","name","gid","map","time","toString","team","getJsonMethod","devGroups","Error","groupName","discordId","modRole","adminRole","remid","type","value","answer","error","message","uid","nickname","alias","server","game","data","isWorking","window","location","constructApiUrl","method","params","paramStr","s","fetch","credentials","options","body","JSON","stringify","headers","errorHandler","postMethod","response","then","result","json","length","spawnError","code","defaultUser","discord","discriminator","avatar","auth","inGuild","isAdmin","isDeveloper","isOwner","signedIn","hasOwnProperty","PageContainer","props","className","styles","children","PageColumn","keys","rollout","getChannel","storageKey","localStorage","storageItemTest","getItem","testValue","Math","floor","random","setItem","TopSidebar","to","title","src","Logo","PageLink","activeClassName","PageLinkActive","content","PageButton","target","rel","href","onClick","AddIcon","viewBox","sideIcon","fill","d","WrenchIcon","Sidebar","A","B","key","useQuery","userError","isLoading","devLink","accountLink","logoutLink","groupLinks","history","useHistory","queryClient","useQueryClient","logoutExecutor","useMutation","v","logout","onMutate","cancelQueries","prevUser","getQueryData","setQueryData","old","push","onSettled","variables","context","invalidateQueries","devOptionsContent","addGroupContent","i","switchingTest","mutate","permissions","isAdminOf","group","id","style","display","flexGrow","flexDirection","overflowY","marginBottom","GroupLinks","paddingLeft","fontSize","APP_VERSION","LoadingIcon","loadingIcon","ErrorIcon","errorIcon","Status","notEnabled","undefined","status","Button","background_color","width","button","disabled","callback","ButtonLink","ButtonRow","buttonRow","TextInput","defaultValue","placeholder","onReset","onChange","SmallButton","_","vars","Switch","useState","checkedSwitch","clickSwitch","switchTheSwitch","newVal","useEffect","checked","switchClassName","SwitchActive","SwitchRow","isChecked","onKeyPress","e","charCode","role","tabIndex","SwitchInner","SwitchOn","SwitchOff","SwitchHandle","ChoosePageButtons","active","setActive","ChoosePageButtonHolder","buttons","ChoosePageButtonActive","ChoosePageButton","IconSelected","iconSelect","IconNotSelected","SelectableRow","React","selected","setSelcted","selectableRowSelected","selectableRow","p","Column","Row","Card","card","CardRow","PageCard","Tag","ModalControll","isShown","show","close","ModalContext","createContext","useModal","useContext","Modal","controller","modal","modalDisabled","modalBackground","modalContent","ModalProvider","controllerState","setControllerState","Provider","Header","UserRow","alt","Avatar","DiscordName","DiscordNum","secure","xmlns","UserStRow","dateAdded","Date","parse","addedAt","dateString","getDate","getMonth","String","getHours","padStart","getMinutes","DiscordId","DateAdded","FakeUserStRow","UserRowSt","GroupRow","GroupName","ServerRow","serverBadgePending","serverStatus","serverBadgeErr","serverBadgeOk","GameStatsAd","gameStatsAd","VBanList","getAutoBanList","isError","banList","searchWord","setSearchWord","unbanVGlobalBan","globalUnbanPlayer","previousBanList","filter","player","playerName","onError","err","newTodo","BanListing","includes","GlobalBanRow","BanRow","BanDisplayName","banReason","banReasonDetailed","globalUnban","GroupLogs","getGroupLogs","logList","logs","sort","b","timeStamp","maxHeight","marginTop","log","LogRow","Array","from","EmptyLogRow","datetime","action","getUTCDate","getFullYear","logRow","logAdmin","adminName","logReason","logTime","ListItem","header","LoginButton","MainPageComponent","MainPage","MainPageCard","titleBlock","titleContent","listing","SmallText","PlayerStatsModal","r","stats","statsBlock","skill","rank","killsPerMinute","winPercent","Accuracy","headshots","killDeath","ServerRotation","info","server_status","liveUpdate","update_timestamp","timestamp","getSeconds","rotationId","setRotationId","ServerInfoColumn","ServerDescriptionRow","serverImage","url","GameInfo","ServerName","prefix","mode","serverInfo","inQue","rotate","SwitchGame","rotation","index","mapname","serverStatusArray","serverBadge","PlayerInfo","players","moveTeam","PlayerRow","PlayerIndex","PlayerLevel","PlayerName","platoon","PlayerNone","PlayerButtons","PlayerButton","onMove","kickModal","eaid","banModal","PlayerPing","ping","ServerInfoHolder","ServerInfoRow","BanList","getBanList","borderCollapse","position","top","displayName","admin","banned_until","ban_timestamp","FireStarter","getStarterList","starterList","amount","StarterRow","playerId","LogList","getServerLogs","logIcon","logAction","logPlayer","toPlayer","logReasonDetailed","VipList","getVipList","vipList","VipHeader","alignItems","VipRow","VipName","VipRowImg","Account","userLine","Developer","getDevGroups","groups","g","Server","serverCard","playerNicknameTeam","match","getServer","getServerGame","gameError","runningGame","playerList","playerInGame","setPlayerName","addVipStatus","changeAddVipStatus","removeVipStatus","changeRemoveVipStatus","unbanStatus","changeUnbanStatus","tabsListing","setTabsListing","UnbanPlayer","unbanPlayer","RemoveVip","removeVip","AddVip","addVip","movePlayer","previousGroup","find","serverTabs","catTabs","changeRotation","banlist","viplist","firestarter","loglist","protection","ServerAutomation","settings","ServerSettings","isOpsMode","f1","f2","ServerBanPlayer","ServerKickPlayer","giveVip","marginRight","allowedTo","kickOnPingDisabled","setKickOnPingDisabled","serverState","setServerState","canApply","setCanApply","applyStatus","setApplyStatus","autoBanKick","autoBfbanKick","autoGlobalBanMessage","autoPingKick","originalServerState","autoPingKickMessage","newCanApply","changeSrerverState","editServerSettings","editServer","onSuccess","setTimeout","getServerValue","marginLeft","console","parseInt","minAutoPingKick","errorUpdating","setError","serverName","serverAlias","alignSelf","opacity","setReason","kickApplyStatus","setKickApplyStatus","KickPlayer","kickPlayer","banTime","setBanTime","globalVsClassicBan","setGlobalVsClassicBan","banApplyStatus","setBanApplyStatus","userGettingError","BanPlayer","banPlayer","GlobalBanPlayer","globalBanPlayer","servers","isDisabled","maxWidth","deleteIcon","Group","getGroup","staleTime","groupError","removeAdmin","removeGroupAdmin","now","toUTCString","admins","removeServer","removeOwner","removeGroupOwner","owners","setListing","settingsListing","setSettingsListing","catListing","GroupOwners","onDelete","GroupAdmins","GroupServers","vbanlist","grouplogs","catSettings","account","GroupServerAccount","GroupDiscordSettings","danger","GroupDangerZone","pageCycle","settingsCycle","hasRights","setSelected","adminList","isSelected","AddGroupAdmin","o","item","changeSelected","ownerList","AddGroupOwner","owner","setSid","setRemid","cookie","editCookies","editGroup","validCookie","border","padding","borderRadius","color","background","margin","adminId","setAdminId","modId","setModId","serverId","setServerId","discordGroupId","discordModRoleId","discordAdminRoleId","editDiscordDetails","setGroupName","editGroupName","setNickname","setUid","AddGroupOwnerExecute","addGroupOwner","UTCNow","canAdd","addAdminState","changeState","AddGroupAdminExecute","addGroupAdmin","updateState","values","newState","AddGroup","roleDisplay","addGroupState","AddNewGroupExecute","addGroup","refetchQueries","checkInputVariables","newVariables","newGroupState","newVars","DeleteGroup","thisGid","DeleteGroupExecute","removeGroup","previousGroups","AddGroupServer","AddGroupServerExecute","addGroupServer","EditGroup","MakeOps","SetupOperations","setupOps","Views","exact","path","component","Main","createHashHistory","App","useLocation","TransitionGroup","CSSTransition","classNames","timeout","hash","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":";0GACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,OAAS,wBAAwB,UAAY,2BAA2B,SAAW,0BAA0B,GAAK,oBAAoB,GAAK,oBAAoB,UAAY,2BAA2B,YAAc,6BAA6B,OAAS,wBAAwB,aAAe,8BAA8B,YAAc,6BAA6B,aAAe,8BAA8B,UAAY,2BAA2B,SAAW,0BAA0B,UAAY,2BAA2B,iBAAmB,kCAAkC,uBAAyB,wCAAwC,uBAAyB,wCAAwC,cAAgB,+BAA+B,sBAAwB,uCAAuC,WAAa,8B,mBCAr3BD,EAAOC,QAAU,CAAC,SAAW,wBAAwB,UAAY,yBAAyB,YAAc,2BAA2B,SAAW,wBAAwB,UAAY,yBAAyB,UAAY,yBAAyB,UAAY,yBAAyB,OAAS,sBAAsB,OAAS,sBAAsB,kBAAoB,iCAAiC,eAAiB,8BAA8B,UAAY,yBAAyB,YAAc,2BAA2B,eAAiB,8BAA8B,cAAgB,6BAA6B,mBAAqB,oC,mBCAtnBD,EAAOC,QAAU,CAAC,SAAW,0BAA0B,WAAa,4BAA4B,eAAiB,gCAAgC,QAAU,yBAAyB,KAAO,sBAAsB,WAAa,4BAA4B,SAAW,0BAA0B,WAAa,8B,mBCA5SD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,OAAS,qBAAqB,YAAc,0BAA0B,WAAa,yBAAyB,OAAS,qBAAqB,UAAY,wBAAwB,UAAY,wBAAwB,UAAY,0B,mBCAhRD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,QAAU,sBAAsB,SAAW,uBAAuB,IAAM,kBAAkB,cAAgB,4BAA4B,MAAQ,oBAAoB,aAAe,2BAA2B,gBAAkB,gC,mBCA1QD,EAAOC,QAAU,CAAC,aAAe,+BAA+B,SAAW,2BAA2B,WAAa,6BAA6B,QAAU,0BAA0B,SAAW,2BAA2B,aAAe,+BAA+B,YAAc,gC,mBCAtRD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,QAAU,wBAAwB,SAAW,yBAAyB,KAAO,uB,mBCAzHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,QAAU,wBAAwB,UAAY,0BAA0B,MAAQ,wB,kBCA5KD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,iBAAmB,iCAAiC,cAAgB,8BAA8B,YAAc,4BAA4B,WAAa,2BAA2B,SAAW,yBAAyB,wBAA0B,wCAAwC,qBAAuB,qCAAqC,WAAa,2BAA2B,YAAc,4BAA4B,WAAa,2BAA2B,UAAY,0BAA0B,WAAa,2BAA2B,YAAc,4BAA4B,WAAa,2BAA2B,YAAc,4BAA4B,WAAa,2BAA2B,qBAAuB,qCAAqC,cAAgB,8BAA8B,aAAe,6BAA6B,aAAe,6BAA6B,eAAiB,+BAA+B,gBAAkB,gCAAgC,OAAS,uBAAuB,OAAS,uBAAuB,eAAiB,+BAA+B,UAAY,0BAA0B,QAAU,wBAAwB,UAAY,0BAA0B,SAAW,yBAAyB,UAAY,0BAA0B,UAAY,0BAA0B,UAAY,0BAA0B,OAAS,uBAAuB,kBAAoB,kCAAkC,QAAU,wBAAwB,eAAiB,+BAA+B,cAAgB,8BAA8B,mBAAqB,mCAAmC,YAAc,4BAA4B,kBAAoB,kCAAkC,WAAa,2BAA2B,UAAY,0BAA0B,eAAiB,+BAA+B,WAAa,6B,mBCA34DD,EAAOC,QAAU,CAAC,OAAS,qBAAqB,IAAM,kBAAkB,KAAO,qB,mBCA/ED,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,WAAa,oC,+ECApFD,EAAOC,QAAU,CAAC,OAAS,yB,mPCErBC,EAAY,CACdC,IAAK,yCACLC,KAAM,8CCmQGC,EAAgB,IAtQ7B,4JAEI,WACI,IAAIC,EAAYC,KAAKC,sBACrBD,KAAKE,KAAOH,IAJpB,wEAOI,4BAAAI,EAAA,sEACUH,KAAKI,YAAY,WAD3B,uBAEqBJ,KAAKK,cAF1B,cAEQH,EAFR,yBAGWA,GAHX,gDAPJ,qHAaI,iCAAAC,EAAA,6DAAmBG,EAAnB,EAAmBA,IAAKC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,OAApC,SACiBR,KAAKS,eAAe,eAAgB,CAC7C,QAAW,aACX,WAAcF,EACd,SAAYD,EACZ,OAAUE,IALlB,wFAbJ,2HAsBI,iCAAAL,EAAA,6DAAwBO,EAAxB,EAAwBA,KAAMF,EAA9B,EAA8BA,OAAQG,EAAtC,EAAsCA,IAAtC,SACiBX,KAAKS,eAAe,aAAc,CAC3C,WAAcC,EACd,QAAWC,EACX,OAAUH,IAJlB,wFAtBJ,6HA8BI,+BAAAL,EAAA,6DAA0BO,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,IAAhC,SACiBX,KAAKS,eAAe,aAAc,CAC3C,WAAcC,EACd,QAAWC,EACX,OAAU,KAJlB,wFA9BJ,0HAsCI,+BAAAR,EAAA,6DAAuBG,EAAvB,EAAuBA,IAAKM,EAA5B,EAA4BA,IAA5B,SACiBZ,KAAKS,eAAe,cAAe,CAC5C,UAAaG,EACb,SAAYN,IAHpB,wFAtCJ,qHA6CI,mCAAAH,EAAA,6DAAkBO,EAAlB,EAAkBA,KAAMF,EAAxB,EAAwBA,OAAQK,EAAhC,EAAgCA,KAAMP,EAAtC,EAAsCA,IAAtC,SACiBN,KAAKS,eAAe,eAAgB,CAC7C,QAAW,eACX,WAAcC,EACd,SAAYJ,EACZ,QAAWO,EAAKC,WAChB,OAAUN,IANlB,wFA7CJ,uHAuDI,iCAAAL,EAAA,6DAAoBO,EAApB,EAAoBA,KAAMF,EAA1B,EAA0BA,OAAQF,EAAlC,EAAkCA,IAAlC,SACiBN,KAAKS,eAAe,eAAgB,CAC7C,QAAW,kBACX,WAAcC,EACd,SAAYJ,EACZ,OAAUE,IALlB,wFAvDJ,kHAgEI,iCAAAL,EAAA,6DAAeG,EAAf,EAAeA,IAAKI,EAApB,EAAoBA,KAAMF,EAA1B,EAA0BA,OAA1B,SACiBR,KAAKS,eAAe,eAAgB,CAC7C,QAAW,eACX,WAAcC,EACd,SAAYJ,EACZE,WALR,wFAhEJ,qHAyEI,iCAAAL,EAAA,6DAAkBG,EAAlB,EAAkBA,IAAKI,EAAvB,EAAuBA,KAAMF,EAA7B,EAA6BA,OAA7B,SACiBR,KAAKS,eAAe,eAAgB,CAC7C,QAAW,kBACX,WAAcC,EACd,SAAYJ,EACZE,WALR,wFAzEJ,sHAkFI,iCAAAL,EAAA,6DAAmBG,EAAnB,EAAmBA,IAAKS,EAAxB,EAAwBA,KAAML,EAA9B,EAA8BA,KAA9B,SACiBV,KAAKS,eAAe,aAAc,CAC3C,OAAUM,EACV,WAAcL,EACd,SAAYJ,IAJpB,wFAlFJ,sHA0FI,6BAAAH,EAAA,6DAAmBG,EAAnB,EAAmBA,IAAnB,SACiBN,KAAKgB,cAAc,WAAY,CACxC,KAAQ,aACR,SAAYV,IAHpB,wFA1FJ,0HAiGI,6BAAAH,EAAA,6DAAuBG,EAAvB,EAAuBA,IAAvB,SACiBN,KAAKgB,cAAc,eAAgB,CAC5C,SAAYV,IAFpB,wFAjGJ,0HAuGI,6BAAAH,EAAA,6DAAuBQ,EAAvB,EAAuBA,IAAvB,SACiBX,KAAKgB,cAAc,UAAW,CACvC,QAAWL,IAFnB,wFAvGJ,sHA6GI,6BAAAR,EAAA,6DAAmBG,EAAnB,EAAmBA,IAAnB,SACiBN,KAAKgB,cAAc,WAAY,CACxC,KAAQ,UACR,SAAYV,IAHpB,wFA7GJ,yHAoHI,6BAAAH,EAAA,6DAAsBG,EAAtB,EAAsBA,IAAtB,SACiBN,KAAKgB,cAAc,gBAAiB,CAC7C,SAAYV,IAFpB,wFApHJ,wHA0HI,6BAAAH,EAAA,6DAAqBQ,EAArB,EAAqBA,IAArB,SACiBX,KAAKgB,cAAc,cAAe,CAC3C,QAAWL,IAFnB,wFA1HJ,wHAgII,4BAAAR,EAAA,sEAC0BH,KAAKgB,cAAc,aAD7C,YAEQ,UADAC,EADR,+BAGcC,MAAM,oBAHpB,gCAKWD,GALX,gDAhIJ,mHAwII,uCAAAd,EAAA,6DAAiBgB,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,UAAWhB,EAA3D,EAA2DA,IAAKiB,EAAhE,EAAgEA,MAAhE,SACiBvB,KAAKS,eAAe,WAAY,CACzC,UAAaU,EACb,YAAeG,EACf,UAAaF,EACb,UAAaC,EACb,MAASE,EACT,IAAOjB,IAPf,wFAxIJ,uHAmJI,6BAAAH,EAAA,6DAAoBQ,EAApB,EAAoBA,IAApB,SACiBX,KAAKS,eAAe,WAAY,CACzC,QAAWE,IAFnB,wFAnJJ,qHAyJI,iCAAAR,EAAA,6DAAkBQ,EAAlB,EAAkBA,IAAlB,EAAuBa,KAAMC,EAA7B,EAA6BA,MAA7B,SACuBzB,KAAKS,eAAe,YAAa,CAChD,QAAWE,EACX,OAAUc,IAHlB,YAKQ,UAJAC,EADR,+BAMc,IAAIR,MAAMQ,EAAOC,MAAMC,SANrC,gDAzJJ,oHAmKI,WAAejB,GAAf,SAAAR,EAAA,sEACiBH,KAAKgB,cAAc,SAAU,CAAE,QAAWL,IAD3D,wFAnKJ,yHAuKI,iCAAAR,EAAA,6DAAsBQ,EAAtB,EAAsBA,IAAKkB,EAA3B,EAA2BA,IAAKC,EAAhC,EAAgCA,SAAhC,SACiB9B,KAAKS,eAAe,WAAY,CACzC,OAAUoB,EACV,SAAYC,EACZ,QAAWnB,IAJnB,wFAvKJ,0HA+KI,iCAAAR,EAAA,6DAAuBQ,EAAvB,EAAuBA,IAAKD,EAA5B,EAA4BA,KAAMqB,EAAlC,EAAkCA,MAAlC,SACiB/B,KAAKS,eAAe,YAAa,CAC1C,WAAcC,EACd,YAAeqB,EACf,QAAWpB,IAJnB,wFA/KJ,yHAuLI,iCAAAR,EAAA,6DAAsBQ,EAAtB,EAAsBA,IAAKkB,EAA3B,EAA2BA,IAAKC,EAAhC,EAAgCA,SAAhC,SACiB9B,KAAKS,eAAe,WAAY,CACzC,OAAUoB,EACV,SAAYC,EACZ,QAAWnB,IAJnB,wFAvLJ,4HA+LI,+BAAAR,EAAA,6DAAyBQ,EAAzB,EAAyBA,IAAKkB,EAA9B,EAA8BA,IAA9B,SACiB7B,KAAKS,eAAe,WAAY,CACzC,OAAUoB,EACV,QAAWlB,IAHnB,wFA/LJ,4HAsMI,+BAAAR,EAAA,6DAAyBQ,EAAzB,EAAyBA,IAAKkB,EAA9B,EAA8BA,IAA9B,SACiB7B,KAAKS,eAAe,WAAY,CACzC,OAAUoB,EACV,QAAWlB,IAHnB,wFAtMJ,oHA6MI,iCAAAR,EAAA,6DAAiB6B,EAAjB,EAAiBA,OAAQ1B,EAAzB,EAAyBA,IAAKiB,EAA9B,EAA8BA,MAA9B,SACiBvB,KAAKS,eAAe,iBAAkB,CAC/C,WAAcuB,EACd,IAAO1B,EACP,MAASiB,IAJjB,wFA7MJ,qHAsNI,WAAgBjB,GAAhB,SAAAH,EAAA,sEACiBH,KAAKgB,cAAc,SAAU,CAAE,SAAYV,IAD5D,wFAtNJ,yHA0NI,WAAoBA,GAApB,eAAAH,EAAA,sEACqBH,KAAKgB,cAAc,UAAW,CAAE,SAAYV,IADjE,YAEQ,UADA2B,EADR,QAEwBC,KAAK,IAF7B,sBAGchB,MAAMe,EAAKC,KAAK,GAAGP,OAHjC,gCAKeM,GALf,gDA1NJ,wHAmOI,+BAAA9B,EAAA,6DAAqBQ,EAArB,EAAqBA,IAAKL,EAA1B,EAA0BA,IAA1B,SACiBN,KAAKS,eAAe,YAAa,CAC1C,SAAYH,EACZ,QAAWK,IAHnB,wFAnOJ,wHA0OI,+BAAAR,EAAA,6DAAqBO,EAArB,EAAqBA,KAAMJ,EAA3B,EAA2BA,IAA3B,SACiBN,KAAKS,eAAe,eAAgB,CAC7C,SAAYH,EACZ,WAAcI,IAHtB,wFA1OJ,6HAiPI,iCAAAP,EAAA,6DAA0BQ,EAA1B,EAA0BA,IAAKoB,EAA/B,EAA+BA,MAAOzB,EAAtC,EAAsCA,IAAtC,SACiBN,KAAKS,eAAe,cAAe,CAC5C,SAAYH,EACZ,QAAWK,EACX,YAAeoB,IAJvB,wFAjPJ,sHAyPI,iCAAA5B,EAAA,6DAAmBG,EAAnB,EAAmBA,IAAKmB,EAAxB,EAAwBA,MAAxB,SACuBzB,KAAKS,eAAe,aAAc,CACjD,SAAYH,EACZ,OAAUmB,IAHlB,YAKQ,UAJAC,EADR,+BAMc,IAAIR,MAAMQ,EAAOC,MAAMC,SANrC,gDAzPJ,4D,WDOI,aAAe,oBACX5B,KAAKmC,WAAY,EACjBnC,KAAKE,KAAOF,KAAKK,c,iDAErB,WACI+B,OAAOC,SAAWrC,KAAKsC,gBAAgB,W,6BAE3C,SAAgBC,EAAQC,GACpBA,EAASA,GAAU,GACnB,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAKF,EACVC,GAAYC,EAAI,IAAMF,EAAOE,GAAK,IAItC,MAFiB,KAAbD,IAAiBA,EAAW,IAAMA,GACxB9C,EAAS,KACR4C,EAASE,I,gEAE5B,WAAkBF,EAAQC,GAA1B,SAAArC,EAAA,+EACWwC,MAAM3C,KAAKsC,gBAAgBC,EAAQC,GAAS,CAC/CI,YAAa,aAFrB,gD,wHAKA,WAAiBL,EAAQC,GAAzB,SAAArC,EAAA,+EACWwC,MAAM3C,KAAKsC,gBAAgBC,EAAQ,IAAKC,IADnD,gD,qFAIA,SAAeD,EAAQC,GACnB,IAAMK,EAAU,CACZN,OAAQ,OACRO,KAAMC,KAAKC,UAAUR,GACrBI,YAAa,UACbK,QAAS,CACL,eAAgB,qBAGxB,OAAOjD,KAAKkD,aAAalD,KAAKmD,WAAWZ,EAAQM,M,2BAGrD,SAAcN,EAAQC,GAClB,OAAOxC,KAAKkD,aAAalD,KAAKI,YAAYmC,EAAQC,M,iEAEtD,WAAmBY,GAAnB,oBAAAjD,EAAA,+EACWiD,EAASC,MACZ,SAAAC,GACI,OAAOA,EAAOC,OAAOF,MACjB,SAAAE,GACI,GAAI,UAAWA,EACX,MAAMA,EAAK5B,MAEf,GAAI,SAAU4B,GACNA,EAAKrB,KAAKsB,OAAS,GACf,UAAWD,EAAKrB,KAAK,GACrB,MAAMqB,EAAKrB,KAAK,GAAGP,MAI/B,OAAO4B,KAEX,SAAA5B,GAAK,OAAI,EAAK8B,WAAW9B,EAAO,WAGxC,SAAAA,GAAK,OAAI,EAAK8B,WAAW9B,EAAOyB,EAASM,UApBjD,2C,+EAuBA,SAAW/B,EAAO+B,GACd,KAAM,CACF,MAAS,CACL,QAAW/B,EACX,KAAQ+B,M,gEAIpB,8BAAAvD,EAAA,6DACUwD,EAAc,CAChBC,QAAS,CACTlD,KAAM,GACNmD,cAAe,EACfC,OAAQ,IAERC,KAAM,CACFC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,SAAS,EACTC,UAAU,IAZtB,SAeyBpE,KAAKgB,cAAc,WAf5C,WAeQoC,EAfR,QAgBkBiB,eAAe,SAhBjC,yCAiBejB,GAjBf,gCAmBWO,GAnBX,gD,uFE7EG,SAASW,EAAcC,GAC1B,OACI,qBAAKC,UAAWC,IAAOH,cAAvB,SACKC,EAAMG,WAMZ,SAASC,EAAWJ,GACvB,OACI,qBAAKC,UAAWC,IAAOE,WAAvB,SACKJ,EAAMG,W,oBCbbE,EAAOC,EAAO,GAWb,SAASC,IACZ,IAAMC,EAAa,SAInB,GAAIC,aAAc,CACd,IAAIC,EAAkBD,aAAaE,QAAQH,GAC3C,GAAIE,EACA,OAAOA,EAEP,IAAME,EAAYC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,EAEnD,OADAN,aAAaO,QAAQR,EAAYI,GAC1BA,EAGX,OAAO,E,qBClBf,SAASK,IACL,OACI,qBAAKhB,UAAWC,IAAOe,WAAvB,SACI,cAAC,IAAD,CAAMC,GAAG,IAAIC,MAAM,YAAnB,SACI,qBAAKC,IAAI,oBAAoBnB,UAAWC,IAAOmB,WAM/D,SAASC,EAAStB,GACd,OACI,qBAAKC,UAAWC,IAAOoB,SAAvB,SACI,cAAC,IAAD,CAASJ,GAAIlB,EAAMkB,GAAIK,gBAAiBrB,IAAOsB,eAAgBL,MAAOnB,EAAM7D,KAA5E,SAAmF6D,EAAMyB,SAAWzB,EAAM7D,SAKtH,SAASuF,EAAW1B,GAChB,OACI,mBAAGC,UAAWC,IAAOwB,WAAYC,OAAO,SAASC,IAAI,sBAAsBC,KAAM7B,EAAM6B,KAAMV,MAAOnB,EAAM7D,KAA1G,SACI,sBAAM2F,QAAS9B,EAAM8B,QAArB,SAA+B9B,EAAM7D,SAKjD,SAAS4F,IACL,OAAQ,qBAAKC,QAAQ,YAAY/B,UAAWC,IAAO+B,SAA3C,SACJ,sBAAMC,KAAK,eAAeC,EAAE,gDAIpC,SAASC,IACL,OAAQ,qBAAKJ,QAAQ,YAAY/B,UAAWC,IAAO+B,SAA3C,SACJ,sBAAMC,KAAK,eAAeC,EAAE,qeAM7B,SAASE,EAAQrC,GAAQ,ID7CCsC,EAAGC,EAAGC,EC6CR,EAEyBC,YAAS,QAAQ,kBAAMlH,EAAcI,QAA1E+G,EAFY,EAEnBtF,MAAwBzB,EAFL,EAEDgC,KAAYgF,EAFX,EAEWA,UAElCC,EAAU,GAAIC,EAAc,GAAIC,EAAa,GAAIC,EAAa,GAE9DC,EAAUC,cACRC,EAAcC,cAEdC,EAAiBC,aACnB,SAAAC,GAAC,OAAI/H,EAAcgI,WACnB,CAEIC,SAAS,WAAD,4BAAE,WAAOF,GAAP,eAAA1H,EAAA,sEAEAsH,EAAYO,cAAc,QAF1B,cAIAC,EAAWR,EAAYS,aAAa,QAE1CT,EAAYU,aAAa,QAAQ,SAAAC,GAC7B,MAAO,CACHxE,QAAS,CACLlD,KAAM,GACNmD,cAAe,EACfC,OAAQ,IAEZC,KAAM,CACFC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,SAAS,EACTC,UAAU,OAItBmD,EAAQc,KAAK,KAtBP,kBAwBC,CAAEJ,aAxBH,2CAAF,mDAAC,GA2BTK,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,WAM1C,IAAKxB,IAAcC,GAAahH,GACxBA,EAAK6D,KAAKK,SAAU,CAEpB,IAAMsE,EACF,qCACI,qDACA,cAAC/B,EAAD,OAIFgC,EACF,qCACI,gDACA,cAACrC,EAAD,OAeR,IAAK,IAAIsC,KAXL1I,EAAK6D,KAAKG,cACViD,EAAU,cAACtB,EAAD,CAAUJ,GAAG,QAAQ/E,KAAK,oBAAoBsF,QAAS0C,KAGrEtB,EAAc,EDjHOP,ECkHR,GDlHWC,ECkHP,cAACjB,EAAD,CAAkBJ,GAAG,SAAS/E,KAAK,aAApB,GDlHLqG,ECkHyC,WDjHtEA,KAAOnC,EA0BjB,SAAuBiC,EAAGC,EAAGe,GACzB,OAAc,IAANA,EAAWf,EAAID,EAxBhBgC,CAAchC,EAAGC,EAAGhC,KAFhB+B,GCiHC,cAAChB,EAAD,CAAkBJ,GAAG,YAAY/E,KAAK,WAAvB,GACf,cAACmF,EAAD,CAAkBJ,GAAG,cAAc/E,KAAK,eAAesF,QAAS2C,GAAjD,IAEnBtB,EAAa,cAACpB,EAAD,CAAYI,QAAS,WAAQsB,EAAemB,OAAO,KAAQpI,KAAK,WAC7E4G,EAAa,GACCpH,EAAK6I,YAAYC,UAAW,CACtC,IAAIC,EAAQ/I,EAAK6I,YAAYC,UAAUJ,GACvCtB,EAAWe,KAAK,cAACxC,EAAD,CAAUJ,GAAK,UAAYwD,EAAMC,GAAKxI,KAAMuI,EAAM9H,WAAgByH,KAQ9F,OACI,sBAAKpE,UAAWC,IAAOmC,QAAvB,UACI,cAACpB,EAAD,IACA,sBAAK2D,MAAO,CAAEC,QAAS,OAAQC,SAAU,EAAGC,cAAe,SAAUC,UAAW,OAAQC,aAAc,QAAtG,UACKpC,EACAD,EACD,qBAAK3C,UAAWC,IAAOgF,WAAvB,SACKnC,IAEL,cAACrB,EAAD,CAAYG,KAAK,qCAAqC1F,KAAK,eAC1D2G,KAGL,oBAAG8B,MAAO,CAAEO,YAAa,OAAQC,SAAU,QAA3C,cAAuDC,GAAvD,YAA+F,IAAjB9E,IAAsB,IAAM,U,6CCjJtH,SAAS+E,IACL,OACI,qBAAKtD,QAAQ,YAAY/B,UAAWC,IAAOqF,YAA3C,SACI,sBAAMrD,KAAK,eAAeC,EAAE,iDAKxC,SAASqD,EAAUxF,GACf,OACI,qBAAKgC,QAAQ,YAAY/B,UAAWC,IAAOuF,UAA3C,SACI,sBAAMvD,KAAK,eAAeC,EAAE,0LAKjC,SAASuD,EAAO1F,GACnB,IAAM2F,OAA+BC,IAAjB5F,EAAM6F,QAAyC,OAAjB7F,EAAM6F,OACxD,OACI,qBAAK5F,UAAW0F,EAAa,GAAKzF,IAAO2F,OAAzC,SACMF,EAAe,GAAM3F,EAAM6F,OAAU,cAACP,EAAD,IAAkB,cAACE,EAAD,MCjB9D,SAASM,EAAO9F,GACnB,IAAI4E,EAAQ5E,EAAM4E,OAAS,GAO3B,OANI5E,EAAM+F,mBACNnB,EAAK,WAAiB5E,EAAM+F,kBAE5B/F,EAAMgG,QACNpB,EAAK,MAAY5E,EAAMgG,OAGvB,yBAAQ9I,MAAO8C,EAAM9C,MAAO+C,UAAWC,IAAO+F,OAAQC,SAAUlG,EAAMkG,SAAUpE,QAAS9B,EAAMmG,SAAUhF,MAAOnB,EAAM7D,KAAMyI,MAAOA,EAAnI,UAA2I5E,EAAM7D,KAAK,cAACuJ,EAAD,CAAQG,OAAQ7F,EAAM6F,YAI7K,SAASO,EAAWpG,GACvB,OAAIA,EAAMkG,SACC,cAACJ,EAAD,CAAQ3J,KAAM6D,EAAM7D,KAAM+J,UAAU,IAG3C,cAAC,IAAD,CAAStB,MAAO5E,EAAM4E,MAAO3E,UAAWC,IAAO+F,OAAQ/E,GAAIlB,EAAMkB,GAAIC,MAAOnB,EAAM7D,KAAlF,SAAyF6D,EAAM7D,OAIhG,SAASkK,EAAUrG,GACtB,OACI,qBAAKC,UAAWC,IAAOoG,UAAvB,SAAmCtG,EAAMG,WAK1C,SAASoG,EAAUvG,GACtB,YAAoB4F,IAAhB5F,EAAM9C,MACC,uBAAOsJ,aAAcxG,EAAMwG,aAAcvG,UAAWC,IAAOqG,UAAWL,SAAUlG,EAAMkG,SAAUtB,MAAO5E,EAAM4E,MAAO3H,KAAM+C,EAAM/C,MAAQ,OAAQwJ,YAAazG,EAAM7D,KAAMuK,QAAS1G,EAAMmG,SAAUQ,SAAU3G,EAAMmG,WAEtN,uBAAOjJ,MAAO8C,EAAM9C,MAAOsJ,aAAcxG,EAAMwG,aAAcvG,UAAWC,IAAOqG,UAAWL,SAAUlG,EAAMkG,SAAUtB,MAAO5E,EAAM4E,MAAO3H,KAAM+C,EAAM/C,MAAQ,OAAQwJ,YAAazG,EAAM7D,KAAMuK,QAAS1G,EAAMmG,SAAUQ,SAAU3G,EAAMmG,WAG1O,SAASS,EAAY5G,GACxB,OAAIA,EAAMkG,SAEF,GAIJ,qBAAKjG,UAAWC,IAAO0G,YAAa9E,QAAS,SAAA+E,GAAC,OAAI7G,EAAMmG,SAASnG,EAAM8G,OAAO3F,MAAOnB,EAAM7D,KAA3F,SAAkG6D,EAAMyB,SAAWzB,EAAM7D,OAI1H,SAAS4K,EAAO/G,GAAQ,IAAD,EAEWgH,oBAAS,GAFpB,mBAEnBC,EAFmB,KAEJC,EAFI,KAIpBC,EAAkB,WACpB,IAAIC,GAAUH,EACdC,EAAYE,GACRpH,EAAMmG,UAAUnG,EAAMmG,SAASiB,IAGvCC,qBAAU,WACgB,OAAlBrH,EAAMsH,SACNJ,EAAYlH,EAAMsH,WAEvB,CAACtH,EAAMsH,UAGV,IAIMC,EAAkBN,EAAgB/G,IAAOsH,aAAetH,IAAO6G,OAErE,OACI,sBAAK9G,UAAWC,IAAOuH,UAAvB,UACI,sBAAKxH,UAAWsH,EAAiBzF,QAASqF,EAAiBO,UAAWT,EAAeU,WARvE,SAACC,GACA,KAAfA,EAAEC,UAAiBV,KAO6FW,KAAK,SAASC,SAAS,IAAvI,UACI,uBAAM9H,UAAWC,IAAO8H,YAAxB,UACI,sBAAM/H,UAAWC,IAAO+H,WACxB,sBAAMhI,UAAWC,IAAOgI,eAE5B,sBAAMjI,UAAWC,IAAOiI,kBAE5B,+BAAOnI,EAAM7D,UAqClB,SAASiM,GAAkBpI,GAAQ,IAAD,EAETgH,mBAAS,GAFA,mBAE9BqB,EAF8B,KAEtBC,EAFsB,KAIrC,OACI,qBAAKrI,UAAWC,IAAOqI,uBAAvB,SAEQvI,EAAMwI,QAAQnM,KAAI,SAAC4J,EAAQ5B,GAAT,OACd,qBAEIqD,UAAWrD,IAAMgE,EACjBP,KAAK,SACL7H,UAAYoE,IAAMgE,EAAUnI,IAAOuI,uBAAyBvI,IAAOwI,iBACnE5G,QAAS,SAAA+E,GAAOyB,EAAUjE,GAAI4B,EAAOE,YACrChF,MAAO8E,EAAO9J,KACd4L,SAAS,IAPb,SASK9B,EAAOxE,SAAWwE,EAAO9J,MARrBkI,QAiB7B,SAASsE,GAAa3I,GAClB,OACI,qBAAKC,UAAWC,IAAO0I,WAAY5G,QAAQ,YAA3C,SACI,sBAAME,KAAK,eAAeC,EAAE,2IAKxC,SAAS0G,GAAgB7I,GACrB,OACI,qBAAKC,UAAWC,IAAO0I,WAAY5G,QAAQ,YAA3C,SACI,sBAAME,KAAK,eAAeC,EAAE,2GAKjC,SAAS2G,GAAc9I,GAAQ,IAAD,EACF+I,IAAM/B,UAAS,GADb,mBAC1BgC,EAD0B,KAChBC,EADgB,KAMjC,OACI,sBAAKhJ,UAAY+I,EAAY9I,IAAOgJ,sBAAwBhJ,IAAOiJ,cAAerH,QAAS,kBAJ3FmH,EADYG,GAK6FJ,QAHzGhJ,EAAMmG,SAASiD,GAFJ,IAACA,GAKZ,UAESJ,EAAY,cAACL,GAAD,IAAmB,cAACE,GAAD,IAEnC7I,EAAMG,Y,wBC3KZ,SAASkJ,GAAOrJ,GACnB,OACI,qBAAKC,UAAWC,KAAOmJ,OAAvB,SAAgCrJ,EAAMG,WAIvC,SAASmJ,GAAItJ,GAChB,OACI,qBAAKC,UAAWC,KAAOoJ,IAAvB,SAA6BtJ,EAAMG,W,iCCRpC,SAASoJ,GAAKvJ,GACjB,OACI,qBAAKC,UAAWC,KAAOsJ,KAAM5E,MAAO5E,EAAM4E,MAA1C,SACK5E,EAAMG,WAKZ,SAASsJ,GAAQzJ,GACpB,OAAO,sBAAMC,UAAWC,KAAOuJ,QAAxB,SAAkCzJ,EAAMG,WAG5C,SAASuJ,GAAS1J,GACrB,OACI,qCACI,cAACoI,GAAD,CAAmBI,QAASxI,EAAMwI,UAClC,qBAAKvI,UAAWC,KAAOwJ,SAAU9E,MAAO5E,EAAM4E,MAA9C,SACK5E,EAAMG,cAMhB,SAASwJ,GAAI3J,GAChB,OACI,sBAAMC,UAAWC,KAAOyJ,IAAxB,SACK3J,EAAMG,WAOnB,IAAMyJ,GAAgB,CAClBC,SAAS,EACT1J,SAAU,GACV2J,KAAM,SAAClC,KACPmC,MAAO,SAACnC,MAGNoC,GAAejB,IAAMkB,cAAcL,IAE5BM,GAAW,kBAAMnB,IAAMoB,WAAWH,KAE/C,SAASI,GAAMpK,GAEX,IAAMqK,EAAaH,KAEnB,OACI,sBAAKjK,UAAWD,EAAM8J,KAAO5J,KAAOoK,MAAQpK,KAAOqK,cAAnD,UACI,qBAAKtK,UAAWC,KAAOsK,gBAAiB1I,QAAS,kBAAMuI,EAAWN,WAClE,qBAAK9J,UAAWC,KAAOuK,aAAvB,SAAsCzK,EAAMyB,aAKjD,SAASiJ,GAAc1K,GAAQ,IAAD,EAEa+I,IAAM/B,SAAS,CACzD6C,SAAS,EACT1J,SAAU,KAJmB,mBAE1BwK,EAF0B,KAETC,EAFS,KAsBjC,OACI,eAACZ,GAAaa,SAAd,CAAuB3N,MAAK,6BAAMyN,GAAN,IAAuBb,KAhBrC,SAAClC,GACfgD,GAAmB,SAAAzM,GAAC,oCACbA,GADa,IAEhB0L,SAAS,EACT1J,SAAUyH,QAYsDmC,MARrD,WACfa,GAAmB,SAAAzM,GAAC,oCACbA,GADa,IAEhB0L,SAAS,UAKb,UACI,cAACO,GAAD,CAAON,KAAMa,EAAgBd,QAASpI,QAASkJ,EAAgBxK,WAC9DH,EAAMG,Y,wBClFZ,SAAS2K,GAAO9K,GACnB,OACI,qBAAKC,UAAWC,KAAO4K,OAAvB,SACK9K,EAAMG,W,wBCHZ,SAAS4K,GAAQ/K,GACpB,IAAIrE,EAAOqE,EAAMX,QACjB,OACI,sBAAKY,UAAWC,KAAO6K,QAAvB,UACI,qBAAKC,IAAI,GAAG5J,IAAKzF,EAAK4D,OAAQU,UAAWC,KAAO+K,SAChD,sBAAKhL,UAAWC,KAAOgL,YAAvB,UACKvP,EAAKQ,KACN,sBAAM8D,UAAWC,KAAOiL,WAAxB,SACKxP,EAAK2D,mBAGd,sBAAKW,UAAWC,KAAOkL,OAAvB,UACI,qBAAKpJ,QAAQ,YAAYE,KAAK,OAAOmJ,MAAM,6BAA3C,SACI,sBAAMlJ,EAAE,6/BAA6/BD,KAAK,cAFlhC,kBAUL,SAASoJ,GAAUtL,GACtB,IAAIrE,EAAOqE,EAAMrE,KACb4P,EAAY,IAAIC,KAAKA,KAAKC,MAAM9P,EAAK+P,UAGrCC,EAAU,UAAMJ,EAAUK,UAAhB,YADC,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3CL,EAAUM,YAA9C,YAA6DC,OAAOP,EAAUQ,YAAYC,SAAS,EAAG,KAAtG,YAA8GF,OAAOP,EAAUU,cAAcD,SAAS,EAAG,MACvK,OACI,eAAClD,GAAD,CAAe3C,SAAUnG,EAAMmG,SAA/B,UACI,qBAAKlG,UAAWC,KAAOgL,YAAvB,SACKvP,EAAKQ,OAEV,qBAAK8D,UAAWC,KAAOgM,UAAvB,SACKvQ,EAAKgJ,KAEV,qBAAK1E,UAAWC,KAAOiM,UAAvB,SACKR,OAMV,SAASS,GAAcpM,GAC1B,OACI,qBAAKC,UAAWC,KAAOmM,Y,wBCxCxB,SAASC,GAAStM,GACrB,IAAI0E,EAAQ1E,EAAM0E,MAClB,OACI,eAAC,IAAD,CAAMzE,UAAWC,KAAOoM,SAAUpL,GAAI,UAAYwD,EAAMC,GAAxD,UACI,sBAAM1E,UAAWC,KAAOqM,UAAxB,SAAoC7H,EAAM9H,YAD9C,kBAOD,SAAS4P,GAAUxM,GACtB,IAAIvC,EAASuC,EAAMvC,OAGnB,GAAkB,OAAdA,EAAOkH,GACP,OACI,sBAAK1E,UAAWC,KAAOoM,SAAvB,UACI,uBAAMrM,UAAWC,KAAOqM,UAAxB,UACK9O,EAAOtB,KACR,sBAAM8D,UAAWC,KAAOuM,mBAAxB,+BAIHzM,EAAMiG,UAKnB,IAAMyG,EAAgB,WAClB,OAAQjP,EAAOoI,QACX,IAAK,WACD,OACI,sBAAM5F,UAAWC,KAAOyM,eAAxB,8BAIR,IAAK,UACD,OACI,sBAAM1M,UAAWC,KAAOyM,eAAxB,6BAIR,IAAK,UACD,OACI,sBAAM1M,UAAWC,KAAOuM,mBAAxB,4BAIR,QACI,OACI,sBAAMxM,UAAWC,KAAO0M,cAAxB,sBAtBM,GA6BtB,OACI,sBAAK3M,UAAWC,KAAOoM,SAAvB,UACI,eAAC,IAAD,CAAMrM,UAAWC,KAAOqM,UAAWrL,GAAI,WAAazD,EAAOkH,GAA3D,UACKlH,EAAOtB,KACPuQ,KAEJ1M,EAAMiG,UAgBZ,SAAS4G,GAAY7M,GACxB,OACI,oBAAG2B,OAAO,SAASC,IAAI,sBAAsB3B,UAAWC,KAAO4M,YAAajL,KAAK,gGAAjF,UACI,qBAAKT,IAAI,qBACT,gIAML,SAAS2L,GAAS/M,GACrB,IAAM5D,EAAM4D,EAAM5D,IADU,EAEcqG,YAAS,gBAAkBrG,GAAK,kBAAMb,EAAcyR,eAAe,CAAE5Q,WAAvG6Q,EAFoB,EAEpBA,QAAeC,EAFK,EAEXvP,KAAeP,EAFJ,EAEIA,MAE1B8F,EAAcC,cAJQ,EAMQ6D,mBAAS,IANjB,mBAMrBmG,EANqB,KAMTC,EANS,KAQtBC,EAAkBhK,aACpB,SAAAW,GAAS,OAAIzI,EAAc+R,kBAAkBtJ,KAC7C,CAEIR,SAAS,WAAD,4BAAE,iCAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAKD,EAAd,EAAcA,KAAd,SAEA+G,EAAYO,cAAc,gBAAkBrH,GAF5C,cAIAmR,EAAkBrK,EAAYS,aAAa,gBAAkBvH,GAEnE8G,EAAYU,aAAa,gBAAkBxH,GAAK,SAAAyH,GAE5C,OADAA,EAAIlG,KAAMkG,EAAIlG,KAAK6P,QAAO,SAAAC,GAAM,OAAIA,EAAOC,aAAevR,KACnD0H,KARL,kBAWC,CAAE0J,kBAAiBnR,QAXpB,2CAAF,mDAAC,GAcTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,gBAAkBK,EAAQ7H,IAAK6H,EAAQsJ,kBAGpExJ,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,gBAAkBD,EAAQ7H,QAKpE,OAAK8Q,EAKDD,EACM,SAAN,OAAgB7P,EAAM+B,KAAtB,qBAIA,gCACI,6EAC+C,8BAAI+N,EAAQvP,KAAKsB,OAAjB,YAD/C,KACmF,cAAC0K,GAAD,4BAEnF,cAACpD,EAAD,CAAWpK,KAAM,WAAYgK,SAAU,SAAC7C,GAAD,OAAO8J,EAAc9J,EAAE3B,OAAOzE,UACrE,qBAAK+C,UAAWC,KAAO4N,WAAvB,SAEQZ,EAAQvP,KAAK6P,QAAO,SAAApE,GAAC,OAAIA,EAAEsE,WAAWK,SAASZ,MAAa9Q,KACxD,SAACoR,EAAQpJ,GAAT,OAAgB,cAAC2J,GAAD,CAAcP,OAAQA,EAAgBtH,SAAU,kBAAMkH,EAAgB9I,OAAO,CAACnI,MAAKD,KAAMsR,EAAOC,eAA7DrJ,WAhB5D,YAyBf,SAAS2J,GAAahO,GAClB,IAAMyN,EAASzN,EAAMyN,OACrB,OACI,sBAAKxN,UAAWC,KAAO+N,OAAvB,UACI,sBAAMhO,UAAWC,KAAOgO,eAAxB,SAAyCT,EAAOC,aAChD,sBAAMzN,UAAWC,KAAOiO,UAAxB,SACwB,KAAlBV,EAAOxR,OAAiB,qBAAuB,gBAErD,sBAAMgE,UAAWC,KAAOkO,kBAAxB,SAA4CX,EAAOxR,SACnD,sBAAMgE,UAAWC,KAAOmO,YAAavM,QAAS9B,EAAMmG,SAApD,sBAKL,SAASmI,GAAUtO,GACtB,IAAM5D,EAAM4D,EAAM5D,IADW,EAEaqG,YAAS,cAAgBrG,GAAK,kBAAMb,EAAcgT,aAAa,CAAEnS,WAAnG6Q,EAFqB,EAErBA,QAAeuB,EAFM,EAEZ7Q,KAAeP,EAFH,EAEGA,MAEhC,OAAI6P,EACM,SAAN,OAAgB7P,EAAM+B,KAAtB,sBAGAqP,GACAA,EAAQC,KAAKC,MAAK,SAAC9S,EAAG+S,GAAJ,OACdnD,KAAKC,MAAMkD,EAAEC,WAAapD,KAAKC,MAAM7P,EAAEgT,cAM3C,gCACI,gDACA,qBAAKhK,MAAO,CAAEiK,UAAW,QAAS7J,UAAW,OAAQ8J,UAAW,OAAhE,SAESN,EAAWA,EAAQC,KAAKpS,KACrB,SAAC0S,EAAK1K,GAAN,OAAa,cAAC2K,GAAD,CAAQD,IAAKA,GAAU1K,MACpC4K,MAAMC,KAAK,CAAEjQ,OAAQ,IAAK,SAAC4H,EAAGlC,GAAJ,MAAY,CAAEA,SAAOtI,KAC/C,SAACwK,EAAGxC,GAAJ,OAAW,cAAC8K,GAAD,GAAkB9K,YAQrD,SAAS2K,GAAOhP,GACZ,IAAM+O,EAAM/O,EAAM+O,IAqBdK,GAnBgB,WAChB,OAAQL,EAAIM,QACR,IAAK,YAEL,IAAK,UAEL,IAAK,WAEL,IAAK,WAEL,IAAK,cAEL,IAAK,aAEL,WAdY,GAmBL,IAAI7D,KAAKuD,EAAIH,YAM5B,OAFAQ,EAAQ,UAAMA,EAASE,aAAf,YAHO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAG/CF,EAASvD,YAA/C,YAA8DuD,EAASG,cAAvE,YAAwFH,EAASrD,WAAjG,YAA+GqD,EAASnD,cAG5H,sBAAKhM,UAAWC,KAAOsP,OAAvB,UACI,sBAAMvP,UAAWC,KAAOuP,SAAxB,SAAmCV,EAAIW,YACvC,sBAAMzP,UAAWC,KAAOyP,UAAxB,SACIZ,EAAI9S,SAER,sBAAMgE,UAAWC,KAAO0P,QAAxB,SAAkCR,OAK9C,SAASD,KACL,OACI,qBAAKlP,UAAWC,KAAOsP,S,wBClP/B,SAASK,GAAS7P,GACd,OACI,sBAAKC,UAAWC,KAAO2P,SAAvB,UACI,6BAAK7P,EAAM8P,SACX,4BAAI9P,EAAMG,cAKtB,SAAS4P,KACL,OACI,mBAAG9P,UAAWC,KAAO6P,YAAalO,KAAMtG,EAAcwC,gBAAgB,SAAtE,oBAID,SAASiS,GAAkBhQ,GAC9B,OACI,qBAAKC,UAAWC,KAAO+P,SAAvB,SACI,sBAAKhQ,UAAWC,KAAOgQ,aAAvB,UACI,qBAAKjQ,UAAWC,KAAOiQ,WAAvB,SACI,sBAAKlQ,UAAWC,KAAOkQ,aAAvB,UACI,gFACA,+GACA,cAACL,GAAD,SAGR,sBAAK9P,UAAWC,KAAOmQ,QAAvB,UACI,0CACA,cAACR,GAAD,CAAUC,OAAO,mBAAjB,6EACA,cAACD,GAAD,CAAUC,OAAO,8BAAjB,0FACA,cAACD,GAAD,CAAUC,OAAO,yBAAjB,kFACA,cAACD,GAAD,CAAUC,OAAO,mCAAjB,uEACA,cAACD,GAAD,CAAUC,OAAO,wBAAjB,6EACA,cAACD,GAAD,CAAUC,OAAO,kCAAjB,gF,uBC7Bb,SAASQ,GAAUtQ,GACtB,OAAQ,sBAAMC,UAAWC,KAAOoQ,UAAxB,SAAoCtQ,EAAMG,WAGtD,SAASoQ,GAAiBvQ,GACtB,IAAMyN,EAASzN,EAAMyN,OADQ,EAEehL,YAAS,oBAAsBgL,GAAQ,kBAAMrP,MAAM,iDAAiDqP,EAAO,6BAA6B3O,MAAK,SAAA0R,GAAC,OAAEA,EAAExR,aAAtLiO,EAFqB,EAErBA,QAAewD,EAFM,EAEZ9S,KAEX+S,EAJuB,EAEC/N,WAEKsK,EAY/B,kBAXA,sBAAKhN,UAAWC,KAAOwQ,WAAvB,UACI,yCAAYD,EAAME,SAClB,yCAAYF,EAAMG,QAClB,uCAAUH,EAAMI,kBAChB,uCAAUJ,EAAMK,cAChB,4CAAeL,EAAMM,YACrB,6CAAgBN,EAAMO,aACtB,sCAASP,EAAMQ,aACf,sCAASR,EAAM9L,MACf,mBAAG9C,KAAM,+CAA+C4O,EAAM9L,GAAG,SAAS8I,EAAQ9L,OAAO,SAAzF,6BAIR,OACI,qCACI,iDAAoB8L,KACnBiD,KAyBN,SAASQ,GAAelR,GAE3B,IAAIvC,EAAS,KAAMC,EAAO,KACtBsC,EAAMtC,MAAQsC,EAAMtC,KAAKC,MAAQqC,EAAMtC,KAAKC,KAAKsB,OAAS,IAC1DxB,EAASuC,EAAMtC,KAAKC,KAAK,GACzBD,EAAOD,EAAO0T,MAGlB,IAAIC,EACA,sBAAMnR,UAAWC,KAAOuM,mBAAxB,4BAKAhP,IAEI2T,EADA3T,EAAOiC,QAEH,uBAAMO,UAAWC,KAAO0M,cAAxB,UACI,sBAAM3M,UAAWC,KAAOmR,aAD5B,aAOA,sBAAMpR,UAAWC,KAAOyM,eAAxB,6BAKoB,aAAxBlP,EAAOiP,eACP0E,EACI,sBAAMnR,UAAWC,KAAOyM,eAAxB,wCAMZ,IAAI2E,EAAmB,GACvB,GAAI7T,EAAQ,CACR,IAAM8T,EAAY,IAAI/F,KAAK/N,EAAO6T,kBAClCA,EAAgB,UAAOC,EAAUxF,WAAjB,YAA+BwF,EAAUtF,aAAzC,YAAyDsF,EAAUC,cAxCrD,MA0CAxK,mBAAS,IA1CT,mBA0C7ByK,EA1C6B,KA0CjBC,EA1CiB,KA2ClC,OACI,sBAAKzR,UAAWC,KAAOyR,iBAAvB,UACI,sBAAK1R,UAAWC,KAAO0R,qBAAvB,UACI,qBAAK3R,UAAWC,KAAO2R,YAAazQ,IAAM1D,EAAQA,EAAKoU,IAAM,yBAC7D,sBAAK7R,UAAWC,KAAO6R,SAAvB,UACI,sBAAM9R,UAAWC,KAAO8R,WAAxB,SAAsCtU,EAAQA,EAAKuU,OAAS,YAC5D,cAAC3B,GAAD,UAAa5S,EAAD,UAAYA,EAAKrB,IAAjB,cAA0BqB,EAAKwU,KAA/B,cAAyCxU,EAAKyU,WAA9C,aAA6DzU,EAAK0U,MAAlE,aAAqF,YAGzG,eAAC/L,EAAD,WACI,cAACP,EAAD,CAAQ3J,KAAK,UAAU+J,UAAWxI,EAAMyI,SAAU,SAAAU,GAAC,OAAI7G,EAAMqS,OAAQ3U,EAAQA,EAAK+T,WAAa,SAC/F,yBAAQxR,UAAWC,KAAOoS,WAAYpV,MAAOuU,EAAY9K,SAAU,SAAAiB,GAAC,OAAI8J,EAAc9J,EAAEjG,OAAOzE,QAA/F,UACI,wBAAQA,MAAM,GAAd,2BACEQ,EAAQA,EAAK6U,SAASlW,KAAI,SAACa,EAAOmH,GAAR,OACxB,yBAAQnH,MAAOA,EAAMsV,MAArB,UAAqCtV,EAAMuV,QAA3C,MAAuDvV,EAAMgV,OAA5B7N,MACjC,MAES,KAAfoN,EAAqB,cAAC3L,EAAD,CAAQ3J,KAAK,QAAQ+J,UAAWxI,EAAMyI,SAAU,SAAAU,GAAO7G,EAAMqS,OAAQ3U,EAAQ+T,EAAa,MAAOC,EAAc,OAAa,MAEvJ,sBAAKzR,UAAWC,KAAOwS,kBAAvB,UACI,+BAAOtB,IACP,uBAAMnR,UAAWC,KAAOyS,YAAxB,2BAAoDrB,WAO7D,SAASsB,GAAW5S,GACvB,IAAMsK,EAAQJ,KACViH,EAAOnR,EAAMtC,KAAKC,KAAK,GAAGkV,QAAQ7S,EAAMxD,MAAMqW,QAE9CC,EAA2B,MAAf9S,EAAMxD,KAAgB,IAAM,IAQ5C,OACI2U,EAAK9U,KAAI,SAACoR,EAAQpJ,GAAT,OACL,sBAAKpE,UAAWC,KAAO6S,UAAvB,UAEI,sBAAM9S,UAAWC,KAAO8S,YAAxB,SACK3O,EAAI,IAET,sBAAMpE,UAAWC,KAAO+S,YAAxB,SAEyB,OAAhBxF,EAAOmD,KAAiB,KAAOnD,EAAOmD,OAG/C,uBAAM3Q,UAAWC,KAAOgT,WAAYpR,QAAS,SAAA+E,GAAC,OAAEyD,EAAMR,KAAK,cAACyG,GAAD,CAAkB9C,OAAQA,EAAOtR,SAA5F,UAE4B,KAAnBsR,EAAO0F,QAAkB,GAA1B,WAAmC1F,EAAO0F,QAA1C,MAGA1F,EAAOtR,QAGf,sBAAM8D,UAAWC,KAAOkT,aAIxB,sBAAKnT,UAAWC,KAAOmT,cAAvB,UACI,qBAAKpT,UAAWC,KAAOoT,aAAcxR,QAAS,SAAA+E,GAAC,OAAI7G,EAAMuT,OAAOhP,OAAO,CAAExI,IAAKiE,EAAMjE,IAAKI,KAAMsR,EAAOtR,KAAMK,KAAMsW,KAAlH,kBAGA,qBAAK7S,UAAWC,KAAOoT,aAAcxR,QAAS,SAAA+E,GAAC,OAAIyD,EAAMR,KAAK,cAAC9J,EAAMwT,UAAP,CAAiBzX,IAAKiE,EAAMjE,IAAK0X,KAAMhG,EAAOtR,SAA5G,kBAGA,qBAAK8D,UAAWC,KAAOoT,aAAcxR,QAAS,SAAA+E,GAAC,OAAIyD,EAAMR,KAAK,cAAC9J,EAAM0T,SAAP,CAAgB3X,IAAKiE,EAAMjE,IAAK0X,KAAMhG,EAAOtR,SAA3G,oBASJ,uBAAM8D,UAAWC,KAAOyT,WAAxB,UACKlG,EAAOmG,KACR,qBAAK5R,QAAQ,YAAb,SACI,sBAAME,KAAK,eAAeC,EAAE,4LAzCDkC,MAkD5C,SAASwP,GAAiB7T,GAC7B,OACI,qBAAKC,UAAWC,KAAO4T,cAAvB,SACK9T,EAAMG,WAKZ,SAAS4T,GAAQ/T,GACpB,IAAMjE,EAAMiE,EAAMjE,IADS,EAEe0G,YAAS,gBAAkB1G,GAAK,kBAAMR,EAAcyY,WAAW,CAAEjY,WAAnGkR,EAFmB,EAEnBA,QAAeC,EAFI,EAEVvP,KAAeP,EAFL,EAEKA,MAFL,EAIS4J,mBAAS,IAJlB,mBAIpBmG,EAJoB,KAIRC,EAJQ,KAM3B,OAAKF,EAKDD,EACM,SAAN,OAAgB7P,EAAM+B,KAAtB,qBAIA,gCACI,wEAC0C,uBAD1C,QAES,8BAAI+N,EAAQvP,KAAKsB,OAAjB,uBAFT,0CAGyC,uBAHzC,0CAKA,cAACsH,EAAD,CAAWpK,KAAM,WAAYgK,SAAU,SAAC7C,GAAD,OAAO8J,EAAc9J,EAAE3B,OAAOzE,UACrE,qBAAK0H,MAAO,CAAEiK,UAAW,QAAS7J,UAAW,OAAQ8J,UAAW,OAAhE,SACI,wBAAOlK,MAAO,CAAEqP,eAAgB,WAAYjO,MAAO,QAAnD,UACI,wBAAOpB,MAAO,CAAEsP,SAAU,SAAUC,IAAK,KAAzC,UACI,6CACA,2CACA,wCACA,uCACA,uCACA,8CAEJ,gCAEQjH,EAAQvP,KAAK6P,QAAO,SAAApE,GAAC,OAAIA,EAAEgL,YAAYrG,SAASZ,MAAa9Q,KACzD,SAACoR,EAAQpJ,GAAT,OAAgB,cAAC4J,GAAD,CAAQR,OAAQA,GAAapJ,gBA5B9D,YAsCf,SAAS4J,GAAOjO,GACZ,IAAMyN,EAASzN,EAAMyN,OACrB,OACI,qBAAIxN,UAAWC,KAAO+N,OAAtB,UACI,oBAAIhO,UAAWC,KAAOgO,eAAtB,SAAuCT,EAAO2G,cAC9C,oBAAIjT,MAAM,YAAV,SAAuBsM,EAAO9I,KAC9B,6BAAK8I,EAAOxR,SACZ,6BAAKwR,EAAO4G,QACZ,6BAAK5G,EAAO6G,eACZ,6BAAK7G,EAAO8G,mBAKjB,SAASC,GAAYxU,GACxB,IAAMjE,EAAMiE,EAAMjE,IADa,EAEe0G,YAAS,oBAAsB1G,GAAK,kBAAMR,EAAckZ,eAAe,CAAE1Y,WAA/GkR,EAFuB,EAEvBA,QAAeyH,EAFQ,EAEd/W,KAAmBP,EAFL,EAEKA,MAFL,EAIK4J,mBAAS,IAJd,mBAIxBmG,EAJwB,KAIZC,EAJY,KAM/B,OAAKsH,EAKDzH,EACM,SAAN,OAAgB7P,EAAM+B,KAAtB,sBAGJuV,EAAY/W,KAAK+Q,MAAK,SAAC9S,EAAG+S,GAAJ,OAAUA,EAAEgG,OAAS/Y,EAAE+Y,UAGzC,gCACI,+IACiH,uBADjH,iEAIA,cAACpO,EAAD,CAAWpK,KAAM,WAAYgK,SAAU,SAAC7C,GAAD,OAAO8J,EAAc9J,EAAE3B,OAAOzE,UACrE,qBAAK0H,MAAO,CAAEiK,UAAW,QAAS7J,UAAW,OAAQ8J,UAAW,OAAhE,SACI,wBAAOlK,MAAO,CAAEqP,eAAgB,WAAYjO,MAAO,QAAnD,UACI,wBAAOpB,MAAO,CAAEsP,SAAU,SAAUC,IAAK,KAAzC,UACI,6CACA,2CACA,2CAEJ,gCAEQO,EAAY/W,KAAK6P,QAAO,SAAApE,GAAC,OAAIA,EAAEsE,WAAWK,SAASZ,MAAa9Q,KAC5D,SAACoR,EAAQpJ,GAAT,OAAgB,cAACuQ,GAAD,CAAYnH,OAAQA,GAAapJ,iBA1BlE,YAoCf,SAASuQ,GAAW5U,GAChB,IAAMyN,EAASzN,EAAMyN,OACrB,OACI,qBAAIxN,UAAWC,KAAO+N,OAAtB,UACI,qBAAIhO,UAAWC,KAAOgO,eAAtB,UAA0D,KAAnBT,EAAO0F,QAAP,WAA2B1F,EAAO0F,QAAlC,MAA+C,KAAM1F,EAAOC,cACnG,oBAAIvM,MAAM,YAAV,SAAuBsM,EAAOoH,WAC9B,6BAAKpH,EAAOkH,YAKjB,SAASG,GAAQ9U,GAEpB,IAAMjE,EAAMiE,EAAMjE,IAFS,EAGe0G,YAAS,gBAAkB1G,GAAK,kBAAMR,EAAcwZ,cAAc,CAAEhZ,WAAtGkR,EAHmB,EAGnBA,QAAeuB,EAHI,EAGV7Q,KAAeP,EAHL,EAGKA,MAEhC,OAAI6P,EACM,SAAN,OAAgB7P,EAAM+B,KAAtB,sBAGAqP,GACAA,EAAQC,KAAKC,MAAK,SAAC9S,EAAG+S,GAAJ,OACdnD,KAAKC,MAAMkD,EAAEC,WAAapD,KAAKC,MAAM7P,EAAEgT,cAM3C,gCACI,0CACA,qBAAKhK,MAAO,CAAEiK,UAAW,QAAS7J,UAAW,OAAQ8J,UAAW,OAAhE,SAESN,EAAWA,EAAQC,KAAKpS,KACrB,SAAC0S,EAAK1K,GAAN,OAAa,cAAC,GAAD,CAAQ0K,IAAKA,GAAU1K,MACpC4K,MAAMC,KAAK,CAAEjQ,OAAQ,IAAK,SAAC4H,EAAGlC,GAAJ,MAAY,CAAEA,SAAOtI,KAC/C,SAACwK,EAAGxC,GAAJ,OAAW,cAAC,GAAD,GAAkBA,YAQrD,SAAS2K,GAAOhP,GACZ,IAAMsK,EAAQJ,KACR6E,EAAM/O,EAAM+O,IACZM,EAAU,WACZ,OAAQN,EAAIM,QACR,IAAK,eACD,MAAO,SACX,IAAK,aACD,MAAO,SACX,IAAK,kBACD,MAAO,WACX,IAAK,eACD,MAAO,cACX,IAAK,aACD,MAAO,QACX,IAAK,kBACD,MAAO,iBACX,QACI,MAAO,gBAfH,GAmBZD,EAAW,IAAI5D,KAAKuD,EAAIH,WAM5B,OAFAQ,EAAQ,UAAMA,EAASE,aAAf,YAHO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAG/CF,EAASvD,YAA/C,YAA8DuD,EAASG,cAAvE,YAAwFzD,OAAOsD,EAASrD,YAAYC,SAAS,EAAG,KAAhI,YAAwIF,OAAOsD,EAASnD,cAAcD,SAAS,EAAG,MAEvK,kBAAf+C,EAAIM,OAEA,sBAAKpP,UAAWC,KAAOsP,OAAvB,UACI,qBAAKvP,UAAWC,KAAO8U,QAAShT,QAAQ,YAAxC,SACI,sBAAME,KAAK,eAAeC,EAAE,gHAEhC,sBAAMlC,UAAWC,KAAOuP,SAAxB,0BACA,sBAAMxP,UAAWC,KAAO+U,UAAxB,oBACA,sBAAMhV,UAAWC,KAAOgV,UAAWpT,QAAS,SAAA+E,GAAC,OAAEyD,EAAMR,KAAK,cAACyG,GAAD,CAAkB9C,OAAQsB,EAAIoG,aAAxF,SAAwGpG,EAAIoG,WAC5G,sBAAMlV,UAAWC,KAAO+U,UAAxB,SAAoClG,EAAI9S,SACxC,sBAAMgE,UAAWC,KAAOkV,oBACxB,sBAAMnV,UAAWC,KAAO0P,QAAxB,SAAkCR,OAK3B,wBAAfL,EAAIM,OAEA,sBAAKpP,UAAWC,KAAOsP,OAAvB,UACI,qBAAKvP,UAAWC,KAAO8U,QAAShT,QAAQ,YAAxC,SACI,sBAAME,KAAK,eAAeC,EAAE,6OAEhC,sBAAMlC,UAAWC,KAAOuP,SAAxB,kBACA,sBAAMxP,UAAWC,KAAO+U,UAAxB,oBACA,sBAAMhV,UAAWC,KAAOgV,UAAWpT,QAAS,SAAA+E,GAAC,OAAEyD,EAAMR,KAAK,cAACyG,GAAD,CAAkB9C,OAAQsB,EAAIoG,aAAxF,SAAwGpG,EAAIoG,WAC5G,sBAAMlV,UAAWC,KAAOyP,UAAxB,yBACA,sBAAM1P,UAAWC,KAAOkV,kBAAxB,SAA4CrG,EAAI9S,SAChD,sBAAMgE,UAAWC,KAAO0P,QAAxB,SAAkCR,OAK3B,mBAAfL,EAAIM,OAEA,sBAAKpP,UAAWC,KAAOsP,OAAvB,UACI,qBAAKvP,UAAWC,KAAO8U,QAAShT,QAAQ,YAAxC,SACI,sBAAME,KAAK,eAAeC,EAAE,6OAEhC,sBAAMlC,UAAWC,KAAOuP,SAAxB,mBACA,sBAAMxP,UAAWC,KAAO+U,UAAxB,oBACA,sBAAMhV,UAAWC,KAAOgV,UAAWpT,QAAS,SAAA+E,GAAC,OAAEyD,EAAMR,KAAK,cAACyG,GAAD,CAAkB9C,OAAQsB,EAAIoG,aAAxF,SAAwGpG,EAAIoG,WAC5G,sBAAMlV,UAAWC,KAAOyP,UAAxB,yBACA,sBAAM1P,UAAWC,KAAOkV,kBAAxB,SAA4CrG,EAAI9S,SAChD,sBAAMgE,UAAWC,KAAO0P,QAAxB,SAAkCR,OAK/B,UAAXC,GAAuC,WAAjBN,EAAIoG,SAEtB,sBAAKlV,UAAWC,KAAOsP,OAAvB,UACI,sBAAKvP,UAAWC,KAAO8U,QAAShT,QAAQ,YAAxC,UACI,sBAAME,KAAK,eAAeC,EAAE,0OADhC,sBAEA,sBAAMlC,UAAWC,KAAOuP,SAAxB,SAAmCV,EAAIW,YACvC,sBAAMzP,UAAWC,KAAO+U,UAAxB,SAAoClG,EAAI9S,SACxC,sBAAMgE,UAAWC,KAAOkV,oBACxB,sBAAMnV,UAAWC,KAAO0P,QAAxB,SAAkCR,OAK1C,sBAAKnP,UAAWC,KAAOsP,OAAvB,UACI,qBAAKvP,UAAWC,KAAO8U,QAAShT,QAAQ,YAAxC,SACI,sBAAME,KAAK,eAAeC,EAAE,qIAEhC,sBAAMlC,UAAWC,KAAOuP,SAAxB,SAAmCV,EAAIW,YACvC,sBAAMzP,UAAWC,KAAO+U,UAAxB,SAAoC5F,IACpC,sBAAMpP,UAAWC,KAAOgV,UAAWpT,QAAS,SAAA+E,GAAC,OAAEyD,EAAMR,KAAK,cAACyG,GAAD,CAAkB9C,OAAQsB,EAAIoG,aAAxF,SAAwGpG,EAAIoG,WAC5G,sBAAMlV,UAAWC,KAAOyP,UAAxB,SACqB,KAAfZ,EAAI9S,OAAiB,qBAAuB,gBAElD,sBAAMgE,UAAWC,KAAOkV,kBAAxB,SAA4CrG,EAAI9S,SAChD,sBAAMgE,UAAWC,KAAO0P,QAAxB,SAAkCR,OAM9C,SAASD,KACL,OACI,qBAAKlP,UAAWC,KAAOsP,SAIxB,SAAS6F,GAAQrV,GACpB,IAAMjE,EAAMiE,EAAMjE,IADS,EAEe0G,YAAS,gBAAkB1G,GAAK,kBAAMR,EAAc+Z,WAAW,CAAEvZ,WAAnGkR,EAFmB,EAEnBA,QAAesI,EAFI,EAEV5X,KAAeP,EAFL,EAEKA,MAFL,EAIS4J,mBAAS,IAJlB,mBAIpBmG,EAJoB,KAIRC,EAJQ,KAO3B,OAAKmI,EAKDtI,EACM,SAAN,OAAgB7P,EAAM+B,KAAtB,qBAKA,gCACI,sBAAKc,UAAWC,KAAOsV,UAAvB,UACI,cAACjP,EAAD,CAAWpK,KAAM,WAAYgK,SAAU,SAAC7C,GAAD,OAAO8J,EAAc9J,EAAE3B,OAAOzE,UACrE,qBAAK0H,MAAO,CAAEC,QAAS,OAAQ4Q,WAAY,UAA3C,SACI,qBAAI7Q,MAAO,CAAEK,aAAc,GAA3B,gDACuC,uBADvC,QAES,8BAAIsQ,EAAQ5X,KAAKsB,OAAjB,sBAFT,YAMR,qBAAK2F,MAAO,CAAEiK,UAAW,QAAS7J,UAAW,OAAQ8J,UAAW,OAAhE,SACI,wBAAOlK,MAAO,CAAEqP,eAAgB,WAAYjO,MAAO,QAAnD,UACI,uBAAOpB,MAAO,CAAEsP,SAAU,SAAUC,IAAK,KAAzC,SACI,+BACI,6CACA,gDAGR,gCAEQoB,EAAQ5X,KAAK6P,QAAO,SAAApE,GAAC,OAAIA,EAAEgL,YAAYrG,SAASZ,MAAa9Q,KACzD,SAACoR,EAAQpJ,GAAT,OAAgB,cAACqR,GAAD,CAAQjI,OAAQA,GAAapJ,gBA9B9D,YAwCf,SAASqR,GAAO1V,GACZ,IAAMyN,EAASzN,EAAMyN,OACrB,OACI,qBAAIxN,UAAWC,KAAOwV,OAAtB,UACI,qBAAIvU,MAAOsM,EAAO2G,YAAanU,UAAWC,KAAOyV,QAAjD,UACI,qBAAK1V,UAAWC,KAAO0V,UAAvB,SAAkC,qBAAKxU,IAAKqM,EAAOlO,OAAQyL,IAAI,OAC/D,+BAAOyC,EAAO2G,iBAElB,oBAAIjT,MAAM,YAAV,SAAuBsM,EAAO9I,Q,MC/f3B,SAASkR,KAAW,IAAD,EAEsBpT,YAAS,QAAQ,kBAAMlH,EAAcI,QAA1E+G,EAFe,EAEtBtF,MAAwBzB,EAFF,EAEJgC,KAAYgF,EAFR,EAEQA,UAClCmT,EAAW,GAEf,GAAKpT,GAAcC,IAAahH,GAMzB,GAAI+G,IAAcC,EACrB,OAAO,cAAC,IAAD,CAAUzB,GAAG,UAPc,CAClC,IAAKvF,EAAK6D,KAAKK,SACX,OAAO,cAAC,IAAD,CAAUqB,GAAG,MAEpB4U,EAAW,cAAC/K,GAAD,CAAS1L,QAAS1D,EAAK0D,UAM1C,OACI,eAACiK,GAAD,WACI,eAACD,GAAD,WACI,cAACyB,GAAD,UACI,2CAEJ,eAACvB,GAAD,WACI,iDACCuM,QAGT,eAACzM,GAAD,WACI,cAACyB,GAAD,IACA,eAACvB,GAAD,WACI,6CACA,cAACE,GAAD,4BACA,cAACA,GAAD,2BACA,cAACA,GAAD,4CC/Bb,SAASsM,KAAa,IAAD,EAEatT,YAAS,aAAa,kBAAMlH,EAAcya,kBAAvErT,EAFgB,EAEhBA,UAAWsK,EAFK,EAELA,QAAStP,EAFJ,EAEIA,KAExBsY,EAAS,GAEb,GAAKtT,GAAcsK,IAAWtP,GAIvB,GAAIsP,EACP,OAAO,cAAC,IAAD,CAAU/L,GAAG,WAJpBvD,EAAKA,KAAKtB,KAAI,SAAC6Z,EAAG7R,GACd4R,EAAOnS,KAAK,cAACwI,GAAD,CAAkB5H,MAAOwR,GAAV7R,OAMnC,OACI,eAACiF,GAAD,WACI,eAACD,GAAD,WACI,cAACyB,GAAD,UACI,qDAEJ,eAACvB,GAAD,WACI,gDACC0M,EACD,cAAC5P,EAAD,UACI,cAACD,EAAD,CAAYjK,KAAK,gBAAgB+E,GAAG,wBAIhD,cAACmI,GAAD,O,aC5BL,SAAS8M,GAAOnW,GACnB,IAQIoW,EAGAC,EAXAta,EAAMiE,EAAMsW,MAAMrY,OAAOlC,IAEvBmH,EAAcC,cACdmH,EAAQJ,KAJY,EAMqBzH,YAAS,SAAW1G,GAAK,kBAAMR,EAAcgb,UAAUxa,MAAlE0B,GANV,EAMlBwP,QANkB,EAMItP,MANJ,EAOwB8E,YAAS,aAAe1G,GAAK,kBAAMR,EAAcib,cAAcza,MAAhG0a,EAPS,EAOlBxJ,QAA0ByJ,EAPR,EAOE/Y,KAGxBgZ,EAAa,GACbC,GAAe,EAXO,EAcQ5P,mBAAS,IAdjB,mBAcrB0G,EAdqB,KAcTmJ,EAdS,OAgBe7P,mBAAS,CAAE7K,KAAM,UAAW0J,QAAQ,IAhBnD,mBAgBrBiR,EAhBqB,KAgBPC,EAhBO,OAiBqB/P,mBAAS,CAAE7K,KAAM,aAAc0J,QAAQ,IAjB5D,mBAiBrBmR,EAjBqB,KAiBJC,EAjBI,OAkBajQ,mBAAS,CAAE7K,KAAM,QAAS0J,QAAQ,IAlB/C,mBAkBrBqR,EAlBqB,KAkBRC,EAlBQ,OAoBUnQ,mBAAS,QApBnB,mBAoBrBoQ,EApBqB,KAoBRC,EApBQ,KAsBpBC,EAAcjU,aAChB,SAAAC,GAAC,OAAI/H,EAAcgc,YAAYjU,KAAI,CACnCE,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,6DACNub,EAAkB,CAAEhb,KAAM,YAAa0J,QAAQ,IADzC,kBAEC,CAAEA,OAAQqR,IAFX,2CAAF,kDAAC,GAKTvJ,QAAS,SAACC,EAAKC,EAAS5J,KAIxBF,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCkT,EAAkBlT,EAAQ4B,WAK5B2R,EAAYnU,aACd,SAAAC,GAAC,OAAI/H,EAAckc,UAAUnU,KAAI,CACjCE,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,6DACNqb,EAAsB,CAAE9a,KAAM,YAAa0J,QAAQ,IAD7C,kBAEC,CAAEA,OAAQmR,IAFX,2CAAF,kDAAC,GAKTrJ,QAAS,SAACC,EAAKC,EAAS5J,KAIxBF,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCgT,EAAsBhT,EAAQ4B,WAKhC6R,EAASrU,aACX,SAAAC,GAAC,OAAI/H,EAAcoc,OAAOrU,KAAI,CAC9BE,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,6DACNmb,EAAmB,CAAE5a,KAAM,YAAa0J,QAAQ,IAD1C,kBAEC,CAAEA,OAAQiR,IAFX,2CAAF,kDAAC,GAKTnJ,QAAS,SAACC,EAAKC,EAAS5J,KAIxBF,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChC8S,EAAmB9S,EAAQ4B,WAK7B+R,EAAavU,aACf,SAAAW,GAAS,OAAIzI,EAAcqc,WAAW5T,KACtC,CAEIR,SAAS,WAAD,4BAAE,mCAAA5H,EAAA,6DAASG,EAAT,EAASA,IAAKS,EAAd,EAAcA,KAAML,EAApB,EAAoBA,KAApB,SAEA+G,EAAYO,cAAc,aAAe1H,GAFzC,cAIA8b,EAAgB3U,EAAYS,aAAa,aAAe5H,GAE9DmH,EAAYU,aAAa,aAAe7H,GAAK,SAAA8H,GAQzC,MAPa,MAATrH,GACAqH,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQ/O,KAAKD,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQiF,MAAK,SAAAlQ,GAAC,OAAIA,EAAEzL,OAASA,MACxF0H,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAUhP,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQrF,QAAO,SAAApE,GAAC,OAAIA,EAAEjN,OAASA,OAEvF0H,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQ/O,KAAKD,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQiF,MAAK,SAAAlQ,GAAC,OAAIA,EAAEzL,OAASA,MACxF0H,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAUhP,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQrF,QAAO,SAAApE,GAAC,OAAIA,EAAEjN,OAASA,MAEpF0H,KAdL,kBAiBC,CAAEgU,gBAAe9b,QAjBlB,2CAAF,mDAAC,GAoBT4R,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,aAAeK,EAAQlI,IAAKkI,EAAQ4T,gBAGjE9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,OAMtC8T,EAAa,CACf,CACI5b,KAAM,eACNgK,SAAU,kBAAMkR,EAAe,UAEnC,CACIlb,KAAM,WACNgK,SAAU,kBAAMkR,EAAe,aAEnC,CACIlb,KAAM,cACNgK,SAAU,kBAAMkR,EAAe,aAEnC,CACIlb,KAAM,mBACNgK,SAAU,kBAAMkR,EAAe,iBAEnC,CACIlb,KAAM,OACNgK,SAAU,kBAAMkR,EAAe,aAEnC,CACIlb,KAAM,oBACNgK,SAAU,kBAAMkR,EAAe,gBAEnC,CACIlb,KAAM,WACNgK,SAAU,kBAAMkR,EAAe,eAIjCW,EAAU,CACZ7G,KACI,cAAC0C,GAAD,UACI,cAAC3C,GAAD,CAAgBxT,KAAMgZ,EAAarE,OAAQ,SAAA1N,GAAE,OAAIpJ,EAAc0c,eAAe,CAAElc,MAAKM,IAAKsI,SAGlGuT,QAAS,cAACnE,GAAD,CAAShY,IAAKA,IACvBoc,QAAS,cAAC9C,GAAD,CAAStZ,IAAKA,IACvBqc,YAAa,cAAC5D,GAAD,CAAazY,IAAKA,IAC/Bsc,QAAS,cAACvD,GAAD,CAAS/Y,IAAKA,IACvBuc,WACI,mCACI,cAACC,GAAD,CAAkB9a,OAAQA,EAAQ1B,IAAKA,MAG/Cyc,SACI,mCACI,cAACC,GAAD,CAAgBhb,OAAQA,EAAQ1B,IAAKA,OAMjDqa,EACI,cAAC9M,GAAD,UACI,cAACD,GAAD,UACI,cAACK,GAAD,CAAUlB,QAASuP,EAAnB,SACKC,EAAQZ,SAOzB,IAAIsB,GAAY,EAEhB,IAAKjC,GAAaC,KAAiB,UAAWA,EAAY/Y,KAAK,GAAGkV,QAAQ,IAAK,CAE3E6F,EAA8C,eAAlChC,EAAY/Y,KAAK,GAAGwT,KAAKe,KAErC,IAAIyG,EAAKjC,EAAY/Y,KAAK,GAAGkV,QAAQ,GAAGA,QAAQiF,MAAK,SAAAlQ,GAAC,OAAIA,EAAEzL,OAASuR,KACjEkL,EAAKlC,EAAY/Y,KAAK,GAAGkV,QAAQ,GAAGA,QAAQiF,MAAK,SAAAlQ,GAAC,OAAIA,EAAEzL,OAASuR,UAE1D9H,IAAP+S,EACAtC,EAAqB,SACRzQ,IAAPgT,IACNvC,EAAqB,KAGrBO,EAA+B,KAAflJ,SAEJ9H,IAAP+S,QAA6B/S,IAAPgT,GAG/BjC,EACI,eAACrN,GAAD,WACI,cAACD,GAAD,UACI,eAACE,GAAD,WACI,wCACA,cAACqJ,GAAD,CAAYlV,KAAMgZ,EAAala,KAAK,IAAIT,IAAKA,EAAKwX,OAAQqE,EAAYlE,SAAUmF,GAAiBrF,UAAWsF,GAAkBC,QAASrB,EAAQD,UAAWD,SAGlK,cAACnO,GAAD,UACI,eAACE,GAAD,WACI,wCACA,cAACqJ,GAAD,CAAYlV,KAAMgZ,EAAala,KAAK,IAAIT,IAAKA,EAAKwX,OAAQqE,EAAYlE,SAAUmF,GAAiBrF,UAAWsF,GAAmBC,QAASrB,EAAQD,UAAWD,YAO/K,OACI,qCACI,cAAClO,GAAD,UACI,cAACD,GAAD,UACI,cAACyB,GAAD,UACI,oDAIXsL,EACD,cAAC9M,GAAD,UACI,cAACD,GAAD,UACI,eAACE,GAAD,WACI,yCACA,eAACD,GAAD,WACI,cAAC/C,EAAD,CAAWpK,KAAK,cAAcgK,SAAU,SAAAyB,GAAC,OAAIiP,EAAcjP,EAAEjG,OAAOzE,QAAQ0H,MAAO,CAC/EoU,YAAa,MAEjB,eAAC3S,EAAD,WACI,cAACP,EAAD,CAAQI,SAAyB,KAAfwH,EAAmBvR,KAAK,OAAOgK,SAAU,SAAAU,GAAC,OAAIyD,EAAMR,KAAK,cAACgP,GAAD,CAAkB/c,IAAKA,EAAK0X,KAAM/F,QAC7G,cAAC5H,EAAD,CAAQI,UAAW0Q,EAAcza,KAAK,OAAOgK,SAAU,SAAAU,GAAC,OAAI+Q,EAAWrT,OAAO,CAAExI,MAAKS,KAAM6Z,EAAoBla,KAAMuR,OACrH,cAAC5H,EAAD,CAAQI,SAAyB,KAAfwH,EAAmBvR,KAAK,MAAMgK,SAAU,SAAAU,GAAC,OAAIyD,EAAMR,KAAK,cAAC+O,GAAD,CAAiB9c,IAAKA,EAAK0X,KAAM/F,QAC3G,cAAC5H,EAAD,CAAQI,SAAyB,KAAfwH,GAAqBwJ,EAAYrR,OAAQ1J,KAAM+a,EAAY/a,KAAMgK,SAAU,SAAAU,GAAC,OAAIyQ,EAAY/S,OAAO,CAAExI,MAAKI,KAAMuR,EAAYzR,OAAQ,QACtJ,cAAC6J,EAAD,CAAQI,SAAyB,KAAfwH,GAAqBoJ,EAAajR,QAAU6S,EAAWvc,KAAM2a,EAAa3a,KAAMgK,SAAU,SAAAU,GAAC,OAAI6Q,EAAOnT,OAAO,CAAExI,MAAKI,KAAMuR,EAAYzR,OAAQ,QAChK,cAAC6J,EAAD,CAAQI,SAAyB,KAAfwH,GAAqBsJ,EAAgBnR,QAAU6S,EAAWvc,KAAM6a,EAAgB7a,KAAMgK,SAAU,SAAAU,GAAC,OAAI2Q,EAAUjT,OAAO,CAAExI,MAAKI,KAAMuR,EAAYzR,OAAQ,qBAM5L0a,KAMb,SAAS4B,GAAiBvY,GAEtB,IAAIiZ,GAAY,EACZjZ,EAAMvC,SAAQwb,GAAY,GAE9B,IAAM/V,EAAcC,cALS,EAOuB6D,oBAAS,GAPhC,mBAOtBkS,EAPsB,KAOFC,EAPE,OAQSnS,mBAAS,MARlB,mBAQtBoS,EARsB,KAQTC,EARS,OASGrS,oBAAS,GATZ,mBAStBsS,EATsB,KASZC,EATY,OAUSvS,mBAAS,MAVlB,mBAUtBwS,EAVsB,KAUTC,EAVS,KAY7BpS,qBAAU,WAEN,GAAIrH,EAAMvC,OAAQ,CAAC,IAAD,EACkFuC,EAAMvC,OAA9Fic,EADM,EACNA,YAAaC,EADP,EACOA,cAAeC,EADtB,EACsBA,qBAAsBC,EAD5C,EAC4CA,aACpDC,EAAsB,CAAEJ,cAAaC,gBAAeC,uBAAsBC,eAAcE,oBAFhF,EAC0DA,qBAExE,GAAoB,OAAhBX,EACAC,EAAeS,GACfX,EAAuC,IAAjBU,OACnB,CACH,IAAIG,GAAc,EAClB,IAAK,IAAI3V,KAAKyV,EACVE,GAAeZ,EAAY/U,KAAOyV,EAAoBzV,GAEzB,IAA7B+U,EAAYS,cAAoBV,GAAsB,GAC1DI,EAAYS,OAMrB,CAACha,EAAMvC,OAAQ2b,IAElB,IAAMa,EAAqB,SAAC3W,GACxB+V,GAAe,SAAAlb,GAAC,oCAAUA,GAAMmF,OAG9B4W,EAAqB7W,aACvB,SAAAW,GAAS,OAAIzI,EAAc4e,WAAW,CAAEjd,MAAO8G,EAAWjI,IAAKiE,EAAMjE,QACrE,CACIyH,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN6d,GAAe,GADT,2CAAF,kDAAC,GAGTW,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MADR,2CAAF,kDAAC,GAGV9L,QAAQ,WAAD,4BAAE,sBAAA/R,EAAA,sDACL6d,GAAe,GACfY,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAFjC,2CAAF,kDAAC,GAIR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,sDACPsH,EAAYgB,kBAAkB,SAAWlE,EAAMjE,KADxC,2CAAF,kDAAC,KAMZue,EAAiB,SAAC9X,GACpB,OAAIxC,EAAMvC,QAAU+E,KAAOxC,EAAMvC,OACtBuC,EAAMvC,OAAO+E,GAEjB,IAGX,OACI,qCACI,oBAAIoC,MAAO,CAAE2V,WAAY,QAAzB,oCACA,qBAAI3V,MAAO,CAAEkK,UAAW,OAAxB,qFAC4E,uBAD5E,iDAEkD,kDAFlD,aAEoF,uBAFpF,6DAKA,cAAC/H,EAAD,CAAQO,QAASgT,EAAe,eAAgBne,KAAK,sBAAsBgK,SAAU,SAAC7C,GAAD,OAAO2W,EAAmB,CAAEP,YAAapW,OAC9H,qBAAIsB,MAAO,CAAEkK,UAAW,OAAxB,8CAAkE,uBAAlE,yCAEA,cAACvI,EAAD,CACIL,UAAW+S,GAAcG,IAAgBA,EAAYM,YACrDvT,SAAU,SAACyB,GAAD,OAAOqS,EAAmB,CAAEL,qBAAsBhS,EAAEjG,OAAOzE,SACrEsJ,aAAc8T,EAAe,wBAC7Bne,KAAM,kBAEV,qBAAIyI,MAAO,CAAEkK,UAAW,QAAxB,qDAA0E,6CAC1E,cAAC/H,EAAD,CAAQO,QAASgT,EAAe,iBAAkBne,KAAK,0BAA0BgK,SAAU,SAAC7C,GAAD,OAAO2W,EAAmB,CAAEN,cAAerW,OACtI,oBAAIsB,MAAO,CAAEkK,UAAW,QAAxB,uDACA,cAAC/H,EAAD,CAAQO,QAAS4R,EAAoB/c,KAAK,oBAAoBgK,SAAU,SAAC7C,GAAQ6V,EAAsB7V,GAAoD2W,EAA9C3W,EAAiE,CAAEuW,aAAc,KAA1D,CAAEA,aAAc,OACpJ,cAACtT,EAAD,CACItJ,KAAK,SACLiJ,UAAW+S,IAAcC,EACzB/S,SACI,SAACyB,GACG4S,QAAQzL,IAAInH,EAAEjG,OAAOzE,OACjB0K,EAAEjG,OAAOzE,MAAQ,GACM,KAAnB0K,EAAEjG,OAAOzE,OAAc+c,EAAmB,CAAEJ,aAAcY,SAAS7S,EAAEjG,OAAOzE,UAI5FA,MAAQkc,EAAeA,EAAYS,aAAe,GAClD1d,KAAM,oBAEV,cAACoK,EAAD,CACIL,UAAW+S,IAAcC,EACzB/S,SAAU,SAACyB,GAAD,OAAOqS,EAAmB,CAAEF,oBAAqBnS,EAAEjG,OAAOzE,SACpEsJ,aAAc8T,EAAe,uBAC7Bne,KAAM,kBAEV,oBAAIyI,MAAO,CAAEkK,UAAW,OAAxB,oFACA,cAACvI,EAAD,CACItJ,KAAK,SACLiJ,UAAU,EACVC,SACI,SAACyB,GACG4S,QAAQzL,IAAInH,EAAEjG,OAAOzE,MAAQ,GACzB0K,EAAEjG,OAAOzE,MAAQ,GACM,KAAnB0K,EAAEjG,OAAOzE,OACT+c,EAAmB,CAAES,gBAAiBD,SAAS7S,EAAEjG,OAAOzE,UAKxEsJ,aAAc8T,EAAe,mBAC7Bpd,MAAQkc,EAAeA,EAAYsB,gBAAkB,GACrDve,KAAM,8BAGL6D,EAAMvC,QAAU6b,EACb,cAACjT,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,gBAAgB+J,UAAW+S,GAA6B,OAAhBO,EAAsBrT,SACvE,SAAAU,GAAC,OAAIqT,EAAmB3V,OACpB6U,IAENvT,OAAQ2T,MAEd,MAMpB,SAASf,GAAezY,GAEpB,IAAIiZ,GAAY,EACZjZ,EAAMvC,SAAQwb,GAAY,GAE9B,IAAM/V,EAAcC,cALO,EAOW6D,mBAAS,MAPpB,mBAOpBoS,EAPoB,KAOPC,EAPO,OAQKrS,oBAAS,GARd,mBAQpBsS,EARoB,KAQVC,EARU,OASWvS,mBAAS,MATpB,mBASpBwS,EAToB,KASPC,EATO,OAUOzS,mBAAS,CAAE7H,KAAM,EAAG9B,QAAS,YAVpC,mBAUpBsd,EAVoB,KAULC,EAVK,KAY3BvT,qBAAU,WACN,GAAIrH,EAAMvC,OAAQ,CAAC,IAAD,EACsBuC,EAAMvC,OACpCqc,EAAsB,CAAEe,WAFhB,EACNA,WACkCC,YAF5B,EACMA,aAEpB,GAAoB,OAAhB1B,EACAC,EAAeS,OACZ,CACH,IAAIE,GAAc,EAClB,IAAK,IAAI3V,KAAKyV,EACVE,GAAeZ,EAAY/U,KAAOyV,EAAoBzV,GAE1DkV,EAAYS,OAIrB,CAACha,EAAMvC,OAAQ2b,IAElB,IAAMa,EAAqB,SAAC3W,GACxB+V,GAAe,SAAAlb,GAAC,oCAAUA,GAAMmF,OAG9B4W,EAAqB7W,aACvB,SAAAW,GAAS,OAAIzI,EAAc4e,WAAW,CAAEjd,MAAO8G,EAAWjI,IAAKiE,EAAMjE,QACrE,CACIyH,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN6d,GAAe,GADT,2CAAF,kDAAC,GAGTW,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MADR,2CAAF,kDAAC,GAGV9L,QAAQ,WAAD,4BAAE,WAAOvQ,GAAP,SAAAxB,EAAA,sDACL6d,GAAe,GACfmB,EAASxd,GACTid,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAHjC,2CAAF,mDAAC,GAKR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,sDACPsH,EAAYgB,kBAAkB,SAAWlE,EAAMjE,KADxC,2CAAF,kDAAC,KAMZue,EAAiB,SAAC9X,GACpB,OAAIxC,EAAMvC,QAAU+E,KAAOxC,EAAMvC,OACtBuC,EAAMvC,OAAO+E,GAEjB,IAGX,OACI,qCACI,oBAAIoC,MAAO,CAAE2V,WAAY,QAAzB,6BAEA,oBAAI3V,MAAO,CAAEkK,UAAW,OAAxB,gCAEA,cAACvI,EAAD,CACIL,UAAW+S,EACX9S,SAAU,SAACyB,GAAD,OAAOqS,EAAmB,CAAEY,WAAYjT,EAAEjG,OAAOzE,SAC3DsJ,aAAc8T,EAAe,cAC7Bne,KAAM,gBAGV,oBAAIyI,MAAO,CAAEkK,UAAW,OAAxB,oFAEA,cAACvI,EAAD,CACIL,UAAW+S,EACX9S,SAAU,SAACyB,GAAD,OAAOqS,EAAmB,CAAEa,YAAalT,EAAEjG,OAAOzE,SAC5DsJ,aAAc8T,EAAe,eAC7Bne,KAAM,UAGL6D,EAAMvC,QAAU6b,EACb,eAACjT,EAAD,WACI,cAACP,EAAD,CAAQ3J,KAAK,gBAAgB+J,UAAW+S,GAA6B,OAAhBO,EAAsBrT,SACvE,SAAAU,GAAC,OAAIqT,EAAmB3V,OACpB6U,IAENvT,OAAQ2T,IACV,qBAAI5U,MAAO,CAAEK,aAAc,EAAG8V,UAAW,SAAUC,SAA0B,IAAhBxB,EAAyB,EAAI,GAA1F,mBAAsGmB,EAAcxb,KAApH,KAA4Hwb,EAActd,cAE9I,MAOpB,SAASyb,GAAiB9Y,GAAQ,IAExBjE,EAAciE,EAAdjE,IAAK0X,EAASzT,EAATyT,KACLnJ,EAAQJ,KAHe,EAKHlD,mBAAS,IALN,mBAKxB/K,EALwB,KAKhBgf,EALgB,OAMejU,mBAAS,MANxB,mBAMxBkU,EANwB,KAMPC,EANO,OAOKnU,mBAAS,CAAE7H,KAAM,EAAG9B,QAAS,YAPlC,mBAOtBsd,EAPsB,KAOPC,EAPO,KAQvB1X,EAAcC,cAEdiY,EAAa/X,aACf,SAAAC,GAAC,OAAI/H,EAAc8f,WAAW/X,KAC9B,CAEIE,SAAS,WAAD,4BAAE,iCAAA5H,EAAA,6DAASG,EAAT,EAASA,IAAK0X,EAAd,EAAcA,KAAd,EAAoBxX,OAApB,SAEAiH,EAAYO,cAAc,aAAe1H,GAFzC,cAIA8b,EAAgB3U,EAAYS,aAAa,aAAe5H,GAE9DmH,EAAYU,aAAa,aAAe7H,GAAK,SAAA8H,GAGzC,OAFAA,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAUhP,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQrF,QAAO,SAAA5F,GAAC,OAAIA,EAAEzL,OAASsX,KACvF5P,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAUhP,EAAIlG,KAAK,GAAGkV,QAAQ,GAAGA,QAAQrF,QAAO,SAAA5F,GAAC,OAAIA,EAAEzL,OAASsX,KAChF5P,KAEXsX,GAAmB,GAXb,kBAaC,CAAEtD,gBAAe9b,QAblB,2CAAF,mDAAC,GAeTqe,UAAW,WACPe,EAAmB,MACnB7Q,EAAMP,SAGV4D,QAAS,SAACvQ,EAAOyQ,EAAS5J,GACtBkX,GAAmB,GACnBP,EAASxd,GACTid,YAAW,SAAAxT,GAAC,OAAIsU,EAAmB,QAAO,KAC1CjY,EAAYU,aAAa,aAAeK,EAAQlI,IAAKkI,EAAQ4T,gBAGjE9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,OAMtCjB,EAAUC,cAEhB,OACI,qCACI,+DAAkCjD,EAAMyT,QACxC,cAAClN,EAAD,CAAWpK,KAAK,SAASgK,SAAU,SAACyB,GAAD,OAAOqT,EAAUrT,EAAEjG,OAAOzE,UAC7D,eAACmJ,EAAD,WACI,cAACP,EAAD,CAAQD,OAAQqV,EAAiB/e,KAAK,YAAY+J,SAAqB,KAAXjK,EAAekK,SAAU,WAAQiV,EAAW7W,OAAO,CAAExI,MAAK0X,OAAMxX,SAAQD,WAAYgE,EAAMyT,OAASzQ,EAAQc,KAAR,kBAAwB9D,EAAMjE,IAA9B,SAC/J,qBAAI6I,MAAO,CAAEK,aAAc,EAAG8V,UAAW,SAAUC,SAA8B,IAApBE,EAA6B,EAAI,GAA9F,mBAA0GP,EAAcxb,KAAxH,KAAgIwb,EAActd,iBAM9J,SAASwb,GAAgB7Y,GACrB,IAAMsK,EAAQJ,KACRnO,EAAciE,EAAdjE,IAAK0X,EAASzT,EAATyT,KAFiB,GAIZxQ,cACY+D,mBAAS,KALT,mBAKrB/K,EALqB,KAKbgf,EALa,OAMEjU,mBAAS,GANX,mBAMrBsU,EANqB,KAMZC,EANY,OAOwBvU,oBAAS,GAPjC,mBAOrBwU,EAPqB,KAODC,EAPC,OASczU,mBAAS,MATvB,mBASvB0U,EATuB,KASPC,EATO,OAUM3U,mBAAS,CAAE7H,KAAM,EAAG9B,QAAS,YAVnC,mBAUrBsd,EAVqB,KAUNC,EAVM,OAYsBnY,YAAS,QAAQ,kBAAMlH,EAAcI,QAAtEigB,EAZW,EAYpB3O,QAAiCtR,EAZb,EAYOgC,KAE7Bke,EAAYxY,aACd,SAAAC,GAAC,OAAI/H,EAAcugB,UAAUxY,KAC7B,CACIE,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN+f,GAAkB,GADZ,2CAAF,kDAAC,GAGThO,QAAS,SAACvQ,GACNue,GAAkB,GAClBf,EAASxd,GACTid,YAAW,SAAAxT,GAAC,OAAI8U,EAAkB,QAAO,MAE7CvB,UAAW,WACPuB,EAAkB,MAClBrR,EAAMP,WAKZgS,EAAkB1Y,aACpB,SAAAC,GAAC,OAAI/H,EAAcygB,gBAAgB1Y,KACnC,CACIE,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN+f,GAAkB,GADZ,2CAAF,kDAAC,GAGThO,QAAS,SAACvQ,GACNue,GAAkB,GAClBf,EAASxd,GACTid,YAAW,SAAAxT,GAAC,OAAI8U,EAAkB,QAAO,MAE7CvB,UAAW,WACPuB,EAAkB,SAM1Bvf,EAAM,KAENT,GACAA,EAAK6I,YAAYC,UAAUpI,KACvB,SAAAqI,GAAU,IAAD,iBACeA,EAAMuX,SADrB,IACL,2BAAmC,WACflgB,IACZK,EAAMsI,EAAMC,KAHf,kCAUjB,IAAMuX,EACS,KAAXjgB,GACAqf,EAAU,GACS,OAAnBI,GACAE,IAAqBjgB,GAAe,MAAPS,EAGjC,OACI,qCACI,qBAAIwI,MAAO,CAAE2V,WAAY,QAAzB,yCAAgEva,EAAMyT,QACtE,oEACA,cAAClN,EAAD,CAAWpK,KAAK,SAASgK,SAAU,SAACyB,GAAD,OAAOqT,EAAUrT,EAAEjG,OAAOzE,UAC7D,cAAC6J,EAAD,CAAQ7J,MAAOse,EAAoBrf,KAAK,8CAA8CgK,SAAW,SAAC7C,GAAD,OAAOmY,EAAsBnY,MAC9H,mFAAqD,uBAArD,qDAA6G,uBAA7G,iCACA,cAACiD,EAAD,CAAWtJ,KAAK,SAASd,KAAK,WAAWqK,aAAc,EAAGL,SAAU,SAACyB,GAAD,OAAO2T,EAAW3T,EAAEjG,OAAOzE,QAAQgJ,SAAUsV,IACjH,eAACnV,EAAD,WACI,cAACP,EAAD,CACI3J,KAAK,OACLyI,MAAO,CAAEuX,SAAU,SACnBjW,SAAUgW,EACV/V,SAAU,WACFqV,EACAO,EAAgBxX,OAAO,CAAEnI,MAAKH,SAAQE,KAAM6D,EAAMyT,OAElDoI,EAAUtX,OAAO,CAAExI,MAAK0X,OAAMxX,SAAQE,KAAM6D,EAAMyT,KAAMnX,KAAMgf,KAGtEzV,OAAQ6V,IACZ,qBAAI9W,MAAO,CAAEK,aAAc,EAAG8V,UAAW,SAAUC,SAA6B,IAAnBU,EAA4B,EAAI,GAA7F,mBAAyGf,EAAcxb,KAAvH,KAA+Hwb,EAActd,iB,aC3nBvJ+e,GACF,qBAAKpa,QAAQ,YAAY4C,MAAO,CAAEoB,MAAO,QAAzC,SACI,sBAAM9D,KAAK,eAAeC,EAAE,oHAK7B,SAASka,GAAMrc,GAElB,IAAI5D,EAAM4D,EAAMsW,MAAMrY,OAAO7B,IAEvB8G,EAAcC,cAJK,EAMmBV,YAAS,UAAYrG,GAAK,kBAAMb,EAAc+gB,SAASlgB,KAAM,CAAEmgB,UAAW,MAAvGC,EANU,EAMjBpf,MAAyB6Y,EANR,EAMEtY,KANF,EAOgB8E,YAAS,QAAQ,kBAAMlH,EAAcI,QAA/D+G,EAPU,EAOjBtF,MAAwBzB,EAPP,EAOCgC,KAGpB8e,EAAcpZ,aAChB,SAAAW,GAAS,OAAIzI,EAAcmhB,iBAAiB1Y,KAC5C,CAEIR,SAAS,WAAD,4BAAE,iCAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAKkB,EAAd,EAAcA,IAAd,SAEA4F,EAAYO,cAAc,UAAYrH,GAFtC,cAIAyb,EAAgB3U,EAAYS,aAAa,UAAYvH,GAE5C,IAAIoP,KAAKA,KAAKmR,OAAOC,cAEpC1Z,EAAYU,aAAa,UAAYxH,GAAK,SAAAyH,GAEtC,OADAA,EAAIlG,KAAK,GAAGkf,OAAShZ,EAAIlG,KAAK,GAAGkf,OAAOrP,QAAO,SAAA6G,GAAK,OAAIA,EAAM1P,KAAOrH,KAC9DuG,KAVL,kBAaC,CAAEgU,gBAAezb,QAblB,2CAAF,mDAAC,GAgBTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,UAAYK,EAAQ7H,IAAK6H,EAAQ4T,gBAG9D9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,UAAYD,EAAQ7H,QAKxD0gB,EAAezZ,aACjB,SAAAW,GAAS,OAAIzI,EAAcuhB,aAAa9Y,KACxC,CAEIR,SAAS,WAAD,4BAAE,iCAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAKL,EAAd,EAAcA,IAAd,SAEAmH,EAAYO,cAAc,UAAYrH,GAFtC,cAIAyb,EAAgB3U,EAAYS,aAAa,UAAYvH,GAE3D8G,EAAYU,aAAa,UAAYxH,GAAK,SAAAyH,GAEtC,OADAA,EAAIlG,KAAK,GAAGse,QAAUpY,EAAIlG,KAAK,GAAGse,QAAQzO,QAAO,SAAA/P,GAAM,OAAIA,EAAOkH,KAAO5I,KAClE8H,KARL,kBAWC,CAAEgU,gBAAezb,QAXlB,2CAAF,mDAAC,GAcTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,UAAYK,EAAQ7H,IAAK6H,EAAQ4T,gBAG9D9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,UAAYD,EAAQ7H,QAOxD2gB,EAAc1Z,aAChB,SAAAW,GAAS,OAAIzI,EAAcyhB,iBAAiBhZ,KAC5C,CAEIR,SAAS,WAAD,4BAAE,iCAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAKkB,EAAd,EAAcA,IAAd,SAEA4F,EAAYO,cAAc,UAAYrH,GAFtC,cAIAyb,EAAgB3U,EAAYS,aAAa,UAAYvH,GAE5C,IAAIoP,KAAKA,KAAKmR,OAAOC,cAEpC1Z,EAAYU,aAAa,UAAYxH,GAAK,SAAAyH,GAEtC,OADAA,EAAIlG,KAAK,GAAGsf,OAASpZ,EAAIlG,KAAK,GAAGsf,OAAOzP,QAAO,SAAA6G,GAAK,OAAIA,EAAM1P,KAAOrH,KAC9DuG,KAVL,kBAaC,CAAEgU,gBAAezb,QAblB,2CAAF,mDAAC,GAgBTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,UAAYK,EAAQ7H,IAAK6H,EAAQ4T,gBAG9D9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,UAAYD,EAAQ7H,QAM1DsI,EAASuR,GAAUA,EAAOtY,MAAQsY,EAAOtY,KAAKsB,OAAS,EAAKgX,EAAOtY,KAAK,GAAK,KArGxD,EAsGKqJ,mBAAS,WAtGd,mBAsGlBqJ,EAtGkB,KAsGT6M,EAtGS,OAuGqBlW,mBAAS,WAvG9B,mBAuGlBmW,EAvGkB,KAuGDC,EAvGC,KAyGnBC,EAAa,CACfJ,OAAQ,cAACK,GAAD,CAAa5Y,MAAOA,EAAO/I,KAAMA,EAAMS,IAAKA,EAAKmhB,SAAUR,IACnEF,OAAQ,cAACW,GAAD,CAAa9Y,MAAOA,EAAO/I,KAAMA,EAAMS,IAAKA,EAAKmhB,SAAUd,IACnER,QAAS,cAACwB,GAAD,CAAc/Y,MAAOA,EAAO/I,KAAMA,EAAMS,IAAKA,EAAKmhB,SAAUT,IACrEY,SAAU,cAAC3Q,GAAD,CAAUpR,KAAMA,EAAMS,IAAKA,IACrCuhB,UAAW,cAACrP,GAAD,CAAWlS,IAAKA,KAIzBwhB,EAAc,CAChBC,QAAS,cAACC,GAAD,CAAoB1hB,IAAKA,EAAKT,KAAMA,EAAM+I,MAAOA,IAC1DrF,QAAS,cAAC0e,GAAD,CAAsB3hB,IAAKA,EAAKT,KAAMA,EAAM+I,MAAOA,IAC5DsZ,OAAQ,cAACC,GAAD,CAAiB7hB,IAAKA,EAAKT,KAAMA,EAAM+I,MAAOA,KAGpDwZ,EAAY,CACd,CACI/hB,KAAM,UACNgK,SAAU,kBAAM+W,EAAW,aAE/B,CACI/gB,KAAM,SACNgK,SAAU,kBAAM+W,EAAW,YAE/B,CACI/gB,KAAM,SACNgK,SAAU,kBAAM+W,EAAW,YAE/B,CACI/gB,KAAM,YACNgK,SAAU,kBAAM+W,EAAW,cAE/B,CACI/gB,KAAM,aACNgK,SAAU,kBAAM+W,EAAW,gBAI7BiB,EAAgB,CAClB,CACIhiB,KAAM,iBACNgK,SAAU,kBAAMiX,EAAmB,aAEvC,CACIjhB,KAAM,sBACNgK,SAAU,kBAAMiX,EAAmB,aAEvC,CACIjhB,KAAM,cACNgK,SAAU,kBAAMiX,EAAmB,aAI3C,OAAIZ,GAAc9Z,GAAcuT,GAAUA,EAAOtY,MAA+B,IAAvBsY,EAAOtY,KAAKsB,OAC1D,cAAC,IAAD,CAAUiC,GAAG,MAIpB,qCACI,cAACoI,GAAD,UACI,cAACD,GAAD,UACI,cAACyB,GAAD,UACI,6CAIZ,cAACxB,GAAD,UACI,cAACD,GAAD,UACI,eAACE,GAAD,WACI,+CAAmB7E,EAASA,EAAM9H,UAAY,eAC9C,oBAAGgI,MAAO,CAAEK,aAAc,GAA1B,sBAAyC7I,YAIrD,cAACkN,GAAD,UACI,cAACD,GAAD,UACI,cAACK,GAAD,CAAUlB,QAAS2V,EAAnB,SACKP,EAAYT,SAIzB,cAAC7T,GAAD,UACI,cAACD,GAAD,UACI,cAACK,GAAD,CAAUlB,QAAS0V,EAAnB,SACKb,EAAWhN,YAUpC,SAASmN,GAAYxd,GAEjB,IAAMsK,EAAQJ,KAEVkU,GAAY,EAJQ,EAKQpX,mBAAS,IALjB,mBAKjBgC,EALiB,KAKPqV,EALO,KAOpBre,EAAM0E,OAAS1E,EAAMrE,OAAMyiB,EAAYpe,EAAM0E,MAAM9E,SAAWI,EAAMrE,KAAK6D,KAAKG,aAElF,IAEI2e,EACAte,EAAM0E,QACN4Z,EAAS,aAAOte,EAAM0E,MAAMmY,SAClBnO,MAAK,SAAC9S,EAAG+S,GAAJ,OAAUnD,KAAKC,MAAMkD,EAAEjD,SAAWF,KAAKC,MAAM7P,EAAE8P,YAGlE,IAAM6S,EAAavV,EAAS/J,OAAS,EAWrC,OAAO,qCACH,2FAA6D,uBAA7D,mCAEKsf,EAAe,6BAAI,8CAAiBvV,EAAS/J,OAA1B,gBAAuD,+DAE/E,eAACoH,EAAD,WAES+X,EACG,cAACtY,EAAD,CAAQ3J,KAAK,YAAYgK,SAAU,kBAAMmE,EAAMR,KAAK,cAAC0U,GAAD,CAAepiB,IAAK4D,EAAM0E,MAAMC,GAAIwB,SAAUmE,EAAMP,YAExG,cAACjE,EAAD,CAAQI,UAAU,EAAM/J,KAAK,cAAcsF,QAAQ,cAItD2c,GAAaG,EACV,cAACzY,EAAD,CAAQ3J,KAAK,yBAAyBgK,SApBjC,WACjBkY,EAAY,IACZrV,EAAS3M,KAAI,SAACoiB,GAAD,OAAOze,EAAMud,SAAShZ,OAAO,CAAEnI,IAAK4D,EAAM5D,IAAKkB,IAAKmhB,UAoBrD,cAAC3Y,EAAD,CAAQI,UAAU,EAAM/J,KAAK,qBAKpC6D,EAAM0E,MACH4Z,EAAUjiB,KAAI,SAACgY,EAAOhQ,GAAR,OACV,cAACiH,GAAD,CAAW3P,KAAM0Y,EAAOlO,SAAU,SAAC7C,GAAD,OAjC3B,SAACA,EAAGqB,GACvB0Z,GAAY,SAAA1P,GAAC,OAAMrL,EAAF,uBAA2CqL,GAA3C,CAA8ChK,IAAvCgK,EAAEnB,QAAO,SAAAkR,GAAI,OAAIA,IAAS/Z,QAgCGga,CAAerb,EAAG+Q,EAAM1P,MAAU0P,EAAM1P,IAAMN,MA3CnF,CAAC,EAAG,EAAG,GA8CHhI,KAAI,SAACwK,EAAGxC,GAAJ,OAAU,cAAC+H,GAAD,GAAoB/H,SAO9D,SAASoZ,GAAazd,GAElB,IAAIoe,GAAY,EAEZpe,EAAM0E,OAAS1E,EAAMrE,OAAMyiB,EAAYpe,EAAM0E,MAAM9E,SAAWI,EAAMrE,KAAK6D,KAAKG,aAIlF,OAAO,qCACH,6FAA+D,uBAA/D,6CAEKK,EAAM0E,MACH1E,EAAM0E,MAAMuX,QAAQ5f,KAAI,SAACoB,EAAQ4G,GAAT,OACpB,cAACmI,GAAD,CAAW/O,OAAQA,EAAgBwI,OAC/B,cAACW,EAAD,CACIzK,KAAK,SACLsF,QAAS2a,GACTlW,UAAWkY,EACXtX,KAAM,CAAE1K,IAAK4D,EAAM5D,IAAKL,IAAK0B,EAAOkH,IACpCwB,SAAUnG,EAAMud,SAAShZ,UANDF,MAP5B,CAAC,EAAG,EAAG,GAkBHhI,KAAI,SAACwK,EAAGxC,GAAJ,OAAU,cAAC+H,GAAD,GAAoB/H,MAGtD,cAACgC,EAAD,UAES+X,EACG,cAAChY,EAAD,CAAYjK,KAAK,aAAa+E,GAAI,UAAYlB,EAAM5D,IAAM,gBAE1D,cAAC0J,EAAD,CAAQI,UAAU,EAAM/J,KAAK,cAAcsF,QAAQ,oBAOvE,SAAS6b,GAAYtd,GAEjB,IAAMsK,EAAQJ,KAFU,EAGQlD,mBAAS,IAHjB,mBAGjBgC,EAHiB,KAGPqV,EAHO,KAKpBD,GAAY,EACZpe,EAAM0E,OAAS1E,EAAMrE,OAAMyiB,EAAYpe,EAAM0E,MAAM9E,SAAWI,EAAMrE,KAAK6D,KAAKG,aAElF,IAEIif,EACA5e,EAAM0E,QACNka,EAAS,aAAO5e,EAAM0E,MAAMuY,SAClBvO,MAAK,SAAC9S,EAAG+S,GAAJ,OAAUnD,KAAKC,MAAMkD,EAAEjD,SAAWF,KAAKC,MAAM7P,EAAE8P,YAGlE,IAAM6S,EAAavV,EAAS/J,OAAS,EAWrC,OAAO,qCACH,+FAAiE,uBAAjE,mDAEKsf,EAAe,6BAAI,8CAAiBvV,EAAS/J,OAA1B,gBAAuD,+DAE/E,eAACoH,EAAD,WAES+X,EACG,cAACtY,EAAD,CAAQ3J,KAAK,YAAYgK,SAAU,kBAAMmE,EAAMR,KAAK,cAAC+U,GAAD,CAAeziB,IAAK4D,EAAM0E,MAAMC,GAAIwB,SAAUmE,EAAMP,YAExG,cAACjE,EAAD,CAAQI,UAAU,EAAM/J,KAAK,cAAcsF,QAAQ,cAItD2c,GAAaG,EACV,cAACzY,EAAD,CAAQ3J,KAAK,gBAAgBgK,SApBxB,WACjBkY,EAAY,IACZrV,EAAS3M,KAAI,SAACoiB,GAAD,OAAOze,EAAMud,SAAShZ,OAAO,CAAEnI,IAAK4D,EAAM5D,IAAKkB,IAAKmhB,UAoBrD,cAAC3Y,EAAD,CAAQI,UAAU,EAAM/J,KAAK,+BAKpCyiB,EACGA,EAAUviB,KAAI,SAACyiB,EAAOza,GAAR,OACV,cAACiH,GAAD,CAAW3P,KAAMmjB,EAAO3Y,SAAU,SAAC7C,GAAD,OAjC3B,SAACA,EAAGqB,GACvB0Z,GAAY,SAAA1P,GAAC,OAAMrL,EAAF,uBAA2CqL,GAA3C,CAA8ChK,IAAvCgK,EAAEnB,QAAO,SAAAkR,GAAI,OAAIA,IAAS/Z,QAgCGga,CAAerb,EAAGwb,EAAMna,MAAUma,EAAMna,IAAMN,MA3CnF,CAAC,EAAG,EAAG,GA8CHhI,KAAI,SAACwK,EAAGxC,GAAJ,OAAU,cAAC+H,GAAD,GAAoB/H,SAQ9D,SAASyZ,GAAmB9d,GACxB,IAAIiZ,GAAY,EACZjZ,EAAM0E,OAAS1E,EAAMrE,OAAMsd,EAAYjZ,EAAM0E,MAAM9E,SAAWI,EAAMrE,KAAK6D,KAAKG,aAElF,IAAMuD,EAAcC,cAJW,EAMT6D,mBAAS,IANA,mBAMxBjL,EANwB,KAMnBgjB,EANmB,OAOL/X,mBAAS,IAPJ,mBAOxBhK,EAPwB,KAOjBgiB,EAPiB,OAQOhY,mBAAS,MARhB,mBAQxBwS,EARwB,KAQXC,EARW,KAU/BpS,qBAAU,WACFrH,EAAM0E,QACF1H,IAAUgD,EAAM0E,MAAMua,OAAOjiB,OAC7BgiB,EAAShf,EAAM0E,MAAMua,OAAOjiB,OAC5BjB,IAAQiE,EAAM0E,MAAMua,OAAOljB,KAC3BgjB,EAAO/e,EAAM0E,MAAMua,OAAOljB,QAEnC,CAACiE,EAAM0E,QAEV,IAAMwa,EAAc7b,aAChB,SAAAW,GAAS,OAAIzI,EAAc4jB,UAAUnb,KACrC,CACIR,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN6d,GAAe,GADT,2CAAF,kDAAC,GAGTW,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MADR,2CAAF,kDAAC,GAGV9L,QAAQ,WAAD,4BAAE,sBAAA/R,EAAA,sDACL6d,GAAe,GACfY,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAFjC,2CAAF,kDAAC,GAIR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,sDACPsH,EAAYgB,kBAAkB,UAAYlE,EAAM5D,KADzC,2CAAF,kDAAC,KAMlB,OACI,qCACI,qBAAIwI,MAAO,CAAEkK,UAAW,OAAxB,kEACyD,uBADzD,iCAEkC,mDAEhC9O,EAAM0E,QAAU1E,EAAM0E,MAAM0a,YAC1B,mBAAGxa,MAAO,CAAEkK,UAAW,MAAOuQ,OAAQ,gCAAiCC,QAAS,YAAaC,aAAc,MAAOC,MAAO,UAAWC,WAAY,6BAAhJ,qEAGA,GAEJ,eAACnW,GAAD,WACI,cAAC/C,EAAD,CAAWtJ,KAAK,WAAWiJ,UAAW+S,EAAW9S,SAAU,SAACyB,GAAD,OAAOoX,EAASpX,EAAEjG,OAAOzE,QAAQsJ,aAAcxJ,EAAOb,KAAM,UACvH,mBAAGyI,MAAO,CAAE8a,OAAQ,aAAc3E,UAAW,UAA7C,iCAIJ,eAACzR,GAAD,WACI,cAAC/C,EAAD,CAAWtJ,KAAK,WAAWiJ,UAAW+S,EAAW9S,SAAU,SAACyB,GAAD,OAAOmX,EAAOnX,EAAEjG,OAAOzE,QAAQsJ,aAAczK,EAAKI,KAAM,QACnH,mBAAGyI,MAAO,CAAE8a,OAAQ,aAAc3E,UAAW,UAA7C,iCAKC/a,EAAM0E,OAAU3I,IAAQiE,EAAM0E,MAAMua,OAAOljB,KAAOiB,IAAUgD,EAAM0E,MAAMua,OAAOjiB,MAa7E,GAZC,cAACqJ,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,QAAQ+J,UAAW+S,GAA6B,OAAhBO,EAAsBrT,SAC/D,SAAAU,GAAC,OAAIqY,EAAY3a,OACb,CACInI,IAAK4D,EAAM5D,IACXc,MAAO,CACH+hB,OAAQ,CAAEljB,MAAKiB,aAI7B6I,OAAQ2T,SAQlC,SAASuE,GAAqB/d,GAC1B,IAAIiZ,GAAY,EACZjZ,EAAM0E,OAAS1E,EAAMrE,OAAMsd,EAAYjZ,EAAM0E,MAAM9E,SAAWI,EAAMrE,KAAK6D,KAAKG,aAElF,IAAMuD,EAAcC,cAJa,EAMH6D,mBAAS,IANN,mBAM1B2Y,EAN0B,KAMjBC,EANiB,OAOP5Y,mBAAS,IAPF,mBAO1B6Y,EAP0B,KAOnBC,EAPmB,OAQD9Y,mBAAS,IARR,mBAQ1B+Y,EAR0B,KAQhBC,EARgB,OASKhZ,mBAAS,MATd,mBAS1BwS,EAT0B,KASbC,EATa,KAWjCpS,qBAAU,WACFrH,EAAM0E,QAEFqb,IAAa/f,EAAM0E,MAAMub,gBACzBD,EAAYhgB,EAAM0E,MAAMub,gBAExBJ,IAAU7f,EAAM0E,MAAMwb,kBACtBJ,EAAS9f,EAAM0E,MAAMwb,kBAErBP,IAAY3f,EAAM0E,MAAMyb,oBACxBP,EAAW5f,EAAM0E,MAAMyb,uBAGhC,CAACngB,EAAM0E,QAEV,IAAM0b,EAAqB/c,aACvB,SAAAW,GAAS,OAAIzI,EAAc4jB,UAAUnb,KACrC,CACIR,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN6d,GAAe,GADT,2CAAF,kDAAC,GAGTW,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MADR,2CAAF,kDAAC,GAGV9L,QAAQ,WAAD,4BAAE,sBAAA/R,EAAA,sDACL6d,GAAe,GACfY,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAFjC,2CAAF,kDAAC,GAIR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,sDACPsH,EAAYgB,kBAAkB,UAAYlE,EAAM5D,KADzC,2CAAF,kDAAC,KAMlB,OACI,qCACI,cAACyQ,GAAD,IACA,qBAAIjI,MAAO,CAAEkK,UAAW,OAAxB,wEAC+D,uBAD/D,uCAGA,iHAGA,eAACxF,GAAD,WACI,cAAC/C,EAAD,CAAWL,UAAW+S,EAAW9S,SAAU,SAACyB,GAAD,OAAOoY,EAAYpY,EAAEjG,OAAOzE,QAAQsJ,aAAcuZ,EAAU5jB,KAAM,mBAC7G,mBAAGyI,MAAO,CAAE8a,OAAQ,aAAc3E,UAAW,UAA7C,uCAIJ,qBAAInW,MAAO,CAAEkK,UAAW,OAAxB,mDAC0C,uBAD1C,6CAGA,eAACxF,GAAD,WACI,cAAC/C,EAAD,CAAWL,UAAW+S,EAAW9S,SAAU,SAACyB,GAAD,OAAOgY,EAAWhY,EAAEjG,OAAOzE,QAAQsJ,aAAcmZ,EAASxjB,KAAM,qBAC3G,mBAAGyI,MAAO,CAAE8a,OAAQ,aAAc3E,UAAW,UAA7C,iCAIJ,eAACzR,GAAD,WACI,cAAC/C,EAAD,CAAWL,UAAW+S,EAAW9S,SAAU,SAACyB,GAAD,OAAOkY,EAASlY,EAAEjG,OAAOzE,QAAQsJ,aAAcqZ,EAAO1jB,KAAM,mBACvG,mBAAGyI,MAAO,CAAE8a,OAAQ,aAAc3E,UAAW,UAA7C,wEAKC/a,EAAM0E,OAAUqb,IAAa/f,EAAM0E,MAAMub,gBAAkBJ,IAAU7f,EAAM0E,MAAMwb,kBAAoBP,IAAY3f,EAAM0E,MAAMyb,mBAe1H,GAdA,cAAC9Z,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,QAAQ+J,UAAW+S,GAA6B,OAAhBO,EAAsBrT,SAC/D,SAAAU,GAAC,OAAIuZ,EAAmB7b,OACpB,CACInI,IAAK4D,EAAM5D,IACXc,MAAO,CACH+iB,eAAgBF,EAChBG,iBAAkBL,EAClBM,mBAAoBR,MAIlC9Z,OAAQ2T,SASlC,SAASyE,GAAgBje,GAErB,IAAIiZ,GAAY,EACZjZ,EAAM0E,OAAS1E,EAAMrE,OAAMsd,EAAYjZ,EAAM0E,MAAM9E,SAAWI,EAAMrE,KAAK6D,KAAKG,aAElF,IAAMuD,EAAcC,cALQ,EAOM6D,mBAAS,IAPf,mBAOrBpK,EAPqB,KAOVyjB,EAPU,OAQUrZ,mBAAS,MARnB,mBAQrBwS,EARqB,KAQRC,EARQ,KAU5BpS,qBAAU,WAEFrH,EAAM0E,OAAS9H,IAAcoD,EAAM0E,MAAM9H,WACzCyjB,EAAargB,EAAM0E,MAAM9H,aAG9B,CAACoD,EAAM0E,QAEV,IAAM4b,EAAgBjd,aAClB,SAAAW,GAAS,OAAIzI,EAAc4jB,UAAUnb,KACrC,CACIR,SAAS,WAAD,4BAAE,sBAAA5H,EAAA,sDACN6d,GAAe,GADT,2CAAF,kDAAC,GAGTW,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MADR,2CAAF,kDAAC,GAGV9L,QAAQ,WAAD,4BAAE,sBAAA/R,EAAA,sDACL6d,GAAe,GACfY,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAFjC,2CAAF,kDAAC,GAIR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,sDACPsH,EAAYgB,kBAAkB,UAAYlE,EAAM5D,KADzC,2CAAF,kDAAC,KAMlB,OACI,qCACI,oBAAIwI,MAAO,CAAEkK,UAAW,OAAxB,uDACA,cAACvI,EAAD,CAAWL,UAAW+S,EAAW9S,SAAU,SAACyB,GAAD,OAAOyY,EAAazY,EAAEjG,OAAOzE,QAAQsJ,aAAc5J,EAAWT,KAAM,eAE1G6D,EAAM0E,OAAU9H,IAAcoD,EAAM0E,MAAM9H,UACvC,cAACyJ,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,gBAAgB+J,UAAW+S,GAA6B,OAAhBO,EAAsBrT,SACvE,SAAAU,GAAC,OAAIyZ,EAAc/b,OACf,CACInI,IAAK4D,EAAM5D,IACXc,MAAO,CACHN,gBAIdiJ,OAAQ2T,MAEd,GAER,qBAAI5U,MAAO,CAAEkK,UAAW,OAAxB,qEAAyF,uBAAzF,2CACA,cAACzI,EAAD,UACI,cAACD,EAAD,CAAYxB,MAAO,CAAE4a,MAAO,WAAYrjB,KAAK,eAAe+E,GAAE,iBAAYlB,EAAM5D,IAAlB,YAAiC8J,UAAW+S,SAMnH,SAAS4F,GAAc7e,GAC1B,IAAI5D,EAAM4D,EAAM5D,IADiB,EAGD4K,mBAAS,IAHR,mBAG1BzJ,EAH0B,KAGhBgjB,EAHgB,OAIXvZ,mBAAS,IAJE,mBAI1B1J,EAJ0B,KAIrBkjB,EAJqB,KAM3Btd,EAAcC,cAGdsd,EAAuBpd,aACzB,SAAAW,GAAS,OAAIzI,EAAcmlB,cAAc1c,KACzC,CAEIR,SAAS,WAAD,4BAAE,qCAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAKkB,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAAnB,SAGA2F,EAAYO,cAAc,UAAYrH,GAHtC,cAKAyb,EAAgB3U,EAAYS,aAAa,UAAYvH,GAErDukB,EAAS,IAAInV,KAAKA,KAAKmR,OAAOC,cAEpC1Z,EAAYU,aAAa,UAAYxH,GAAK,SAAAyH,GAGtC,OAFAA,EAAIlG,KAAK,GAAGsf,OAAOnZ,KAAK,CAAEa,GAAIrH,EAAKnB,KAAMoB,EAAUmO,QAASiV,IAC5D9c,EAAIlG,KAAK,GAAGkf,OAAO/Y,KAAK,CAAEa,GAAIrH,EAAKnB,KAAMoB,EAAUmO,QAASiV,IACrD9c,KAZL,kBAeC,CAAEgU,gBAAezb,QAflB,2CAAF,mDAAC,GAkBTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,UAAYK,EAAQ7H,IAAK6H,EAAQ4T,gBAG9D9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,UAAYD,EAAQ7H,QAK9C6G,cAEhB,OACI,qCAEI,+CACA,cAACsD,EAAD,CAAWpK,KAAK,uCAAuCgK,SAAU,SAACyB,GAAD,OAAK2Y,EAAY3Y,EAAEjG,OAAOzE,UAC3F,cAACqJ,EAAD,CAAWpK,KAAK,cAAcgK,SAAU,SAACyB,GAAD,OAAO4Y,EAAO5Y,EAAEjG,OAAOzE,UAC/D,cAACmJ,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,YAAYgK,SAAU,WAAQsa,EAAqBlc,OAAO,CAAEnI,MAAKkB,MAAKC,aAAayC,EAAMmG,mBAQ/G,SAASqY,GAAcxe,GAC1B,IAAI5D,EAAM4D,EAAM5D,IADiB,EAGI4K,mBAAS,CAAE1J,IAAK,GAAIC,SAAU,GAAIqjB,QAAQ,IAH9C,mBAG1BC,EAH0B,KAGXC,EAHW,KAK3B5d,EAAcC,cAGd4d,EAAuB1d,aACzB,SAAAW,GAAS,OAAIzI,EAAcylB,cAAchd,KACzC,CAEIR,SAAS,WAAD,4BAAE,qCAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAKkB,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAAnB,SAGA2F,EAAYO,cAAc,UAAYrH,GAHtC,cAKAyb,EAAgB3U,EAAYS,aAAa,UAAYvH,GAErDukB,EAAS,IAAInV,KAAKA,KAAKmR,OAAOC,cAEpC1Z,EAAYU,aAAa,UAAYxH,GAAK,SAAAyH,GAEtC,OADAA,EAAIlG,KAAK,GAAGkf,OAAO/Y,KAAK,CAAEa,GAAIrH,EAAKnB,KAAMoB,EAAUmO,QAASiV,IACrD9c,KAXL,kBAcC,CAAEgU,gBAAezb,QAdlB,2CAAF,mDAAC,GAiBTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,UAAYK,EAAQ7H,IAAK6H,EAAQ4T,gBAG9D9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,UAAYD,EAAQ7H,QAKxD6kB,EAAc,SAACC,GACjB,IAAIC,EAAQ,6BACLN,GACAK,GAEPC,EAASP,OAA0B,KAAjBO,EAAS7jB,IAC3BwjB,EAAYK,IAGAle,cAEhB,OACI,qCACI,+CACA,cAACsD,EAAD,CAAWpK,KAAK,uCAAuCgK,SAAU,SAACyB,GAAD,OAAOqZ,EAAY,CAAC1jB,SAAUqK,EAAEjG,OAAOzE,WACxG,cAACqJ,EAAD,CAAWpK,KAAK,cAAcgK,SAAU,SAACyB,GAAD,OAAOqZ,EAAY,CAAC3jB,IAAKsK,EAAEjG,OAAOzE,WAC1E,cAACmJ,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,YAAY+J,UAAW2a,EAAcD,OAAQza,SAAU,WAAQ4a,EAAqBxc,OAAO,CAAEnI,MAAKkB,IAAKujB,EAAcvjB,IAAKC,SAAUsjB,EAActjB,WAAayC,EAAMmG,mBAQ3L,SAASib,GAASphB,GAAQ,IAAD,EAESgH,mBAAS,CAC1ChD,UAAW,CACPpH,UAAW,GACXC,UAAW,GACXE,UAAW,GACXD,QAAS,GACTE,MAAO,GACPjB,IAAK,IAETslB,aAAa,EACbT,QAAQ,IAZgB,mBAErBU,EAFqB,KAENR,EAFM,OAeU9Z,mBAAS,MAfnB,mBAerBwS,EAfqB,KAeRC,EAfQ,OAgBMzS,mBAAS,CAAE7H,KAAM,EAAG9B,QAAS,YAhBnC,mBAgBrBsd,EAhBqB,KAgBNC,EAhBM,KAiBtB1X,EAAcC,cACdH,EAAUC,cAEVse,EAAqBle,aACvB,SAAAW,GAAS,OAAIzI,EAAcimB,SAASxd,KACpC,CACIR,SAAS,WAAD,4BAAE,WAAOQ,GAAP,SAAApI,EAAA,6DACN6d,GAAe,GADT,SAEAvW,EAAYO,cAAc,aAF1B,gCAGC,IAHD,2CAAF,mDAAC,GAKT2W,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MACfzW,EAAQc,KAAK,KAFN,2CAAF,kDAAC,GAIV6J,QAAQ,WAAD,4BAAE,WAAOvQ,GAAP,SAAAxB,EAAA,sDACLgf,EAASxd,GACTqc,GAAe,GACfY,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAHjC,2CAAF,mDAAC,GAKR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,sDACPsH,EAAYue,eAAe,aADpB,2CAAF,kDAAC,KAMZC,EAAsB,SAACC,GACzB,IAAIC,EAAa,6BACVN,GADU,IAEbtd,UAAU,6BACHsd,EAActd,WACd2d,KAGPE,EAAUD,EAAc5d,UAC5B4d,EAAcP,YAAqC,KAAtBQ,EAAQhlB,UACrC+kB,EAAchB,OACTiB,EAAQ7kB,MAAMiC,OAAS,GAAO4iB,EAAQ9lB,IAAIkD,OAAS,GAAO4iB,EAAQjlB,UAAUqC,OAAS,EAC1F6hB,EAAYc,IAGhB,OACI,cAACtY,GAAD,UACI,eAACD,GAAD,WACI,cAACyB,GAAD,UACI,oDAGJ,eAACvB,GAAD,WACI,qFAEA,cAAChD,EAAD,CAAWpK,KAAK,OAAOgK,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE9kB,UAAWgL,EAAEjG,OAAOzE,WACpF,oBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,mFAGA,cAACvI,EAAD,CAAWpK,KAAK,oBAAoBgK,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE7kB,UAAW+K,EAAEjG,OAAOzE,WACjG,cAACqJ,EAAD,CAAWpK,KAAK,cAAc+J,UAAWob,EAAcD,YAAalb,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE5kB,QAAS8K,EAAEjG,OAAOzE,WAC/H,cAACqJ,EAAD,CAAWpK,KAAK,gBAAgB+J,UAAWob,EAAcD,YAAalb,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE3kB,UAAW6K,EAAEjG,OAAOzE,WACnI,qBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,uFAC8E,uBAD9E,kEAEmE,uBAFnE,iFAGkF,0BAElF,qBAAIlK,MAAO,CAAEkK,UAAW,OAAxB,6CACoC,mDAEpC,cAACvI,EAAD,CAAWpK,KAAK,aAAac,KAAK,WAAWkJ,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE3lB,IAAK6L,EAAEjG,OAAOzE,WACpG,qBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,sDAC6C,mDAE7C,cAACvI,EAAD,CAAWpK,KAAK,eAAec,KAAK,WAAWkJ,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE1kB,MAAO4K,EAAEjG,OAAOzE,WACxG,qBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,wDAC+C,uBAD/C,gDAGA,eAACzI,EAAD,WACI,cAACP,EAAD,CAAQ3J,KAAK,eAAe+J,UAAWob,EAAcV,QAA0B,OAAhBpH,EAAsB3T,OAAQ2T,EAAarT,SAAU,kBAAMob,EAAmBhd,OAAO+c,EAActd,cAClK,qBAAIY,MAAO,CAAEK,aAAc,EAAG8V,UAAW,SAAUC,SAA0B,IAAhBxB,EAAyB,EAAI,GAA1F,mBAAsGmB,EAAcxb,KAApH,KAA4Hwb,EAActd,sBAQ3J,SAASykB,GAAY9hB,GAExB,IAAI+hB,EAAU/hB,EAAMsW,MAAMrY,OAAO7B,IAE3B8G,EAAcC,cACdH,EAAUC,cAEV+e,EAAqB3e,aACvB,SAAAW,GAAS,OAAIzI,EAAc0mB,YAAYje,KACvC,CAEIR,SAAS,WAAD,4BAAE,+BAAA5H,EAAA,6DAASQ,EAAT,EAASA,IAAT,SAEA8G,EAAYO,cAAc,aAF1B,cAIAye,EAAiBhf,EAAYS,aAAa,aAEhDT,EAAYU,aAAa,aAAa,SAAAC,GAIlC,OAHIA,IACAA,EAAIlG,KAAOkG,EAAIlG,KAAK6P,QAAO,SAAA9I,GAAK,OAAIA,EAAMC,KAAOvI,MAE9CyH,KAVL,kBAaC,CAAEqe,iBAAgB9lB,QAbnB,2CAAF,mDAAC,GAgBTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,YAAaK,EAAQie,iBAGlDne,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,gBAK1C,OACI,cAACoF,GAAD,UACI,eAACD,GAAD,WACI,cAACyB,GAAD,UACI,gDAEJ,eAACvB,GAAD,WACI,6CACA,4EACA,eAAClD,EAAD,WACI,cAACD,EAAD,CAAYjK,KAAK,UAAU+E,GAAI,UAAY6gB,IAC3C,cAACjc,EAAD,CAAQ3J,KAAK,cAAcgK,SAAU,WAAQ6b,EAAmBzd,OAAO,CAAEnI,IAAK2lB,IAAY/e,EAAQc,KAAK,uBAQxH,SAASqe,GAAeniB,GAC3B,IAAI5D,EAAM4D,EAAMsW,MAAMrY,OAAO7B,IAEzBD,EAAO,GAAIqB,EAAQ,GAEjB0F,EAAcC,cAGdif,EAAwB/e,aAC1B,SAAAW,GAAS,OAAIzI,EAAc8mB,eAAere,KAC1C,CAEIR,SAAS,WAAD,4BAAE,mCAAA5H,EAAA,6DAAQQ,EAAR,EAAQA,IAAKD,EAAb,EAAaA,KAAb,EAAmBqB,MAAnB,SAGA0F,EAAYO,cAAc,UAAYrH,GAHtC,cAKAyb,EAAgB3U,EAAYS,aAAa,UAAYvH,GAErDukB,EAAS,IAAInV,KAAKA,KAAKmR,OAAOC,cAEpC1Z,EAAYU,aAAa,UAAYxH,GAAK,SAAAyH,GAMtC,OALAA,EAAIlG,KAAK,GAAGse,QAAQnY,KAAK,CACrB,QAAW6c,EACX,GAAM,KACN,KAAQxkB,IAEL0H,KAfL,kBAkBC,CAAEgU,gBAAezb,QAlBlB,2CAAF,mDAAC,GAqBTuR,QAAS,SAACC,EAAKC,EAAS5J,GACpBf,EAAYU,aAAa,UAAYK,EAAQ7H,IAAK6H,EAAQ4T,gBAG9D9T,UAAW,SAACpG,EAAMP,EAAO4G,EAAWC,GAChCf,EAAYgB,kBAAkB,UAAYD,EAAQ7H,QAKxD4G,EAAUC,cAEhB,OACI,cAACqG,GAAD,UACI,eAACD,GAAD,WACI,cAACyB,GAAD,UACI,kDAEJ,eAACvB,GAAD,WACI,8CACA,cAAChD,EAAD,CAAWpK,KAAK,cAAcgK,SAAU,SAACyB,GAAQzL,EAAOyL,EAAEjG,OAAOzE,SACjE,cAACqJ,EAAD,CAAWpK,KAAK,mBAAmBgK,SAAU,SAACyB,GAAQpK,EAAQoK,EAAEjG,OAAOzE,SACvE,cAACmJ,EAAD,UACI,cAACP,EAAD,CAAQ3J,KAAK,aAAagK,SAAU,WAAQic,EAAsB7d,OAAO,CAAEnI,MAAKoB,QAAOrB,SAAS6G,EAAQc,KAAK,UAAY1H,gBAU1I,SAASkmB,GAAUtiB,GACtB,OAAQ,6BAGL,SAASuiB,GAAQviB,GAAQ,IAAD,EAEUgH,mBAAS,CAC1ChD,UAAW,CACPvG,OAAQ,GACRT,MAAO,GACPjB,IAAK,IAET6kB,QAAQ,IARe,mBAEpBU,EAFoB,KAELR,EAFK,OAWW9Z,mBAAS,MAXpB,mBAWpBwS,EAXoB,KAWPC,EAXO,OAYOzS,mBAAS,CAAE7H,KAAM,EAAG9B,QAAS,YAZpC,mBAYpBsd,EAZoB,KAYLC,EAZK,KAgBrB4H,GAHcrf,cACJF,cAEQI,aACpB,SAAAW,GAAS,OAAIzI,EAAcknB,SAASze,KACpC,CACIR,SAAS,WAAD,4BAAE,WAAOQ,GAAP,SAAApI,EAAA,6DACN6d,GAAe,GADT,kBAEC,IAFD,2CAAF,mDAAC,GAITW,UAAU,WAAD,4BAAE,sBAAAxe,EAAA,sDACP6d,EAAe,MADR,2CAAF,kDAAC,GAGV9L,QAAQ,WAAD,4BAAE,WAAOvQ,GAAP,SAAAxB,EAAA,sDACLgf,EAASxd,GACTqc,GAAe,GACfY,YAAW,SAAAxT,GAAC,OAAI4S,EAAe,QAAO,KAHjC,2CAAF,mDAAC,GAKR1V,UAAU,WAAD,4BAAE,sBAAAnI,EAAA,0FAAF,kDAAC,MAKZ8lB,EAAsB,SAACC,GACzB,IAAIC,EAAa,6BACVN,GADU,IAEbtd,UAAU,6BACHsd,EAActd,WACd2d,KAGPE,EAAUD,EAAc5d,UAC5B4d,EAAchB,OACTiB,EAAQ7kB,MAAMiC,OAAS,GAAO4iB,EAAQ9lB,IAAIkD,OAAS,GAAO4iB,EAAQpkB,OAAOwB,OAAS,EACvF6hB,EAAYc,IAGhB,OACI,cAACtY,GAAD,UACI,eAACD,GAAD,WACI,cAACyB,GAAD,UACI,6DAEJ,eAACvB,GAAD,WACI,4EAC8C,uBAD9C,gDACiG,uBADjG,4DAIA,cAAChD,EAAD,CAAWpK,KAAK,cAAcgK,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAEjkB,OAAQmK,EAAEjG,OAAOzE,WACxF,qBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,oBACW,sCADX,eAGA,qBAAIlK,MAAO,CAAEkK,UAAW,OAAxB,6CACoC,mDAEpC,cAACvI,EAAD,CAAWpK,KAAK,aAAac,KAAK,WAAWkJ,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE3lB,IAAK6L,EAAEjG,OAAOzE,WACpG,qBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,sDAC6C,mDAE7C,cAACvI,EAAD,CAAWpK,KAAK,eAAec,KAAK,WAAWkJ,SAAU,SAACyB,GAAQ8Z,EAAoB,CAAE1kB,MAAO4K,EAAEjG,OAAOzE,WACxG,qBAAI0H,MAAO,CAAEkK,UAAW,OAAxB,wDAC+C,uBAD/C,gDAGA,eAACzI,EAAD,WACI,cAACP,EAAD,CAAQ3J,KAAK,kBAAkB+J,UAAWob,EAAcV,QAA0B,OAAhBpH,EAAsB3T,OAAQ2T,EAAarT,SAAU,kBAAMqc,EAAgBje,OAAO+c,EAActd,cAClK,qBAAIY,MAAO,CAAEK,aAAc,EAAG8V,UAAW,SAAUC,SAA0B,IAAhBxB,EAAyB,EAAI,GAA1F,mBAAsGmB,EAAcxb,KAApH,KAA4Hwb,EAActd,sBC9gCnJ,SAASqlB,GAAM1iB,GAC1B,OACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAO2iB,OAAK,EAACC,KAAK,YAAYC,UAAWhN,KAEzC,cAAC,IAAD,CAAO8M,OAAK,EAACC,KAAK,gBAAgBC,UAAW1M,KAE7C,cAAC,IAAD,CAAOwM,OAAK,EAACC,KAAK,cAAcC,UAAWzB,KAC3C,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,eAAeC,UAAWxG,KAE5C,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,yBAAyBC,UAAWV,KACtD,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,yBAAyBC,UAAWrE,KACtD,cAAC,IAAD,CAAOmE,OAAK,EAACC,KAAK,yBAAyBC,UAAWhE,KAEtD,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,oBAAoBC,UAAWP,KACjD,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,qBAAqBC,UAAWf,KAElD,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,QAAQC,UAAW9M,KAErC,cAAC,IAAD,CAAO4M,OAAK,EAACC,KAAK,YAAYC,UAAWN,QCvBtC,SAASO,KAAQ,IAAD,EAEgBrgB,YAAS,QAAQ,kBAAMlH,EAAcI,QAAxEsR,EAFmB,EAEnBA,QAAetR,EAFI,EAEVgC,KAEjB,OAJ2B,EAEEgF,YAEVsK,GAAWtR,GAAQA,EAAK6D,KAAKK,SACrC,cAAC,IAAD,CAAUqB,GAAG,cAIpB,cAAC8O,GAAD,I,aCAK3K,IAFU0d,eAEI,SAgCZC,OA9Bf,WAEI,IAAIllB,EAAWmlB,cAEf,OACI,qBAAKhjB,UAAU,MAAf,SACI,cAAC,IAAD,UACI,cAACyK,GAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiY,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,eAAC,IAAD,WAGI,cAACzgB,EAAD,IACA,cAAC6gB,EAAA,EAAD,CAAiBL,UAAW9iB,EAA5B,SACI,cAACojB,EAAA,EAAD,CAAmCC,WAAW,OAAOC,QAAS,IAA9D,SACI,cAACjjB,EAAD,UACI,cAACsiB,GAAD,OAFY5kB,EAASwlB,qBCzBvDpgB,GAAc,IAAIqgB,IAIxBC,IAASC,OAEL,cAAC,IAAMC,WAAP,UACI,cAACC,EAAA,EAAD,CAAqBC,OAAQ1gB,GAA7B,SACI,cAAC,IAAD,UACI,cAAC,GAAD,UAKZ2gB,SAASC,eAAe,W","file":"static/js/main.28fa04b1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRow\":\"Buttons_buttonRow__dKjZj\",\"button\":\"Buttons_button__1VKNK\",\"container\":\"Buttons_container__np2ep\",\"dropdown\":\"Buttons_dropdown__13J8f\",\"ul\":\"Buttons_ul__3tJo8\",\"li\":\"Buttons_li__1sX4Q\",\"TextInput\":\"Buttons_TextInput__35GbL\",\"SmallButton\":\"Buttons_SmallButton__3rzhd\",\"Switch\":\"Buttons_Switch__39fTc\",\"SwitchActive\":\"Buttons_SwitchActive__2ViHx\",\"SwitchInner\":\"Buttons_SwitchInner__3LnS9\",\"SwitchHandle\":\"Buttons_SwitchHandle__2b8wJ\",\"SwitchOff\":\"Buttons_SwitchOff__3Oaf-\",\"SwitchOn\":\"Buttons_SwitchOn__1_Jsb\",\"SwitchRow\":\"Buttons_SwitchRow__3WA6c\",\"ChoosePageButton\":\"Buttons_ChoosePageButton__1-OpM\",\"ChoosePageButtonActive\":\"Buttons_ChoosePageButtonActive__13GmV\",\"ChoosePageButtonHolder\":\"Buttons_ChoosePageButtonHolder__VfFyz\",\"selectableRow\":\"Buttons_selectableRow__V-YSj\",\"selectableRowSelected\":\"Buttons_selectableRowSelected__AlZEt\",\"iconSelect\":\"Buttons_iconSelect__EU1hH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupRow\":\"Group_GroupRow__1Ew1c\",\"GroupName\":\"Group_GroupName__3G6eX\",\"gameStatsAd\":\"Group_gameStatsAd__2Eob_\",\"logAdmin\":\"Group_logAdmin__1TOK4\",\"logPlayer\":\"Group_logPlayer__1Mapx\",\"logAction\":\"Group_logAction__2UECK\",\"logReason\":\"Group_logReason__8BHZZ\",\"logRow\":\"Group_logRow__YNVWa\",\"BanRow\":\"Group_BanRow__v5SxK\",\"banReasonDetailed\":\"Group_banReasonDetailed__3HFsw\",\"BanDisplayName\":\"Group_BanDisplayName__15HMw\",\"banReason\":\"Group_banReason__1ofIN\",\"globalUnban\":\"Group_globalUnban__v-kk5\",\"serverBadgeErr\":\"Group_serverBadgeErr__1dzxV\",\"serverBadgeOk\":\"Group_serverBadgeOk__2BwfX\",\"serverBadgePending\":\"Group_serverBadgePending__3AuNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLink\":\"Sidebar_PageLink__3fxKj\",\"PageButton\":\"Sidebar_PageButton__3ug-M\",\"PageLinkActive\":\"Sidebar_PageLinkActive___nnPr\",\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"Logo\":\"Sidebar_Logo__2HFo5\",\"TopSidebar\":\"Sidebar_TopSidebar__BQCyG\",\"sideIcon\":\"Sidebar_sideIcon__72aBF\",\"GroupLinks\":\"Sidebar_GroupLinks__8lkHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserRow\":\"User_UserRow__1fzJH\",\"Avatar\":\"User_Avatar__3XgeX\",\"DiscordName\":\"User_DiscordName__j-kJJ\",\"DiscordNum\":\"User_DiscordNum__odqe3\",\"secure\":\"User_secure__ADMpb\",\"UserRowSt\":\"User_UserRowSt__D7e-x\",\"DiscordId\":\"User_DiscordId__CJ0BY\",\"DateAdded\":\"User_DateAdded__1FZZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"CardRow\":\"Card_CardRow__1NbF3\",\"PageCard\":\"Card_PageCard__3UgmB\",\"Tag\":\"Card_Tag__gwAfh\",\"modalDisabled\":\"Card_modalDisabled__1amMq\",\"modal\":\"Card_modal__2zuep\",\"modalContent\":\"Card_modalContent__QUirv\",\"modalBackground\":\"Card_modalBackground__i6ZMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPageCard\":\"MainPage_MainPageCard__20zHQ\",\"MainPage\":\"MainPage_MainPage__2QR_f\",\"titleBlock\":\"MainPage_titleBlock__3Cu7O\",\"listing\":\"MainPage_listing__1JWXi\",\"ListItem\":\"MainPage_ListItem__1n0An\",\"titleContent\":\"MainPage_titleContent__QdrEG\",\"LoginButton\":\"MainPage_LoginButton__3Flzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"TopBar_bar__3bwJz\",\"barWrap\":\"TopBar_barWrap__13cVT\",\"mainPage\":\"TopBar_mainPage__28WNk\",\"logo\":\"TopBar_logo__3pe6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1LWe8\",\"loadingIcon\":\"Status_loadingIcon__3owGX\",\"Loading\":\"Status_Loading__v1uza\",\"errorIcon\":\"Status_errorIcon__2HXFb\",\"Shake\":\"Status_Shake__30h0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SmallText\":\"Server_SmallText__3uOYG\",\"ServerInfoColumn\":\"Server_ServerInfoColumn__35hJK\",\"ServerInfoRow\":\"Server_ServerInfoRow__2Aa7V\",\"serverImage\":\"Server_serverImage__3m2nE\",\"ServerName\":\"Server_ServerName__2irVE\",\"GameInfo\":\"Server_GameInfo__X3Hhq\",\"ServerDescriptionColumn\":\"Server_ServerDescriptionColumn__3pNJs\",\"ServerDescriptionRow\":\"Server_ServerDescriptionRow__12wsx\",\"SwitchGame\":\"Server_SwitchGame__3MjHo\",\"SettingsRow\":\"Server_SettingsRow__2yzpg\",\"SmallInput\":\"Server_SmallInput__1fZ_Z\",\"PlayerRow\":\"Server_PlayerRow__29Z8B\",\"PlayerName\":\"Server_PlayerName__3tLfO\",\"PlayerIndex\":\"Server_PlayerIndex__37b5y\",\"PlayerPing\":\"Server_PlayerPing__31qCm\",\"PlayerLevel\":\"Server_PlayerLevel__1Z7Ur\",\"PlayerNone\":\"Server_PlayerNone__2swFS\",\"playerBackgroundInfo\":\"Server_playerBackgroundInfo__27qMt\",\"PlayerButtons\":\"Server_PlayerButtons__3dQvb\",\"PlayerButton\":\"Server_PlayerButton__1b5UO\",\"serverStatus\":\"Server_serverStatus__2bq0e\",\"serverStatusOk\":\"Server_serverStatusOk__g8kKz\",\"serverStatusErr\":\"Server_serverStatusErr__3kLiy\",\"BanRow\":\"Server_BanRow__2CH-s\",\"VipRow\":\"Server_VipRow__11VYU\",\"BanDisplayName\":\"Server_BanDisplayName__1mYLa\",\"VipRowImg\":\"Server_VipRowImg__2uQKq\",\"VipName\":\"Server_VipName__1vh7h\",\"VipHeader\":\"Server_VipHeader__17wNH\",\"logAdmin\":\"Server_logAdmin__h3EXT\",\"logPlayer\":\"Server_logPlayer__3ubbb\",\"logAction\":\"Server_logAction__chE4g\",\"logReason\":\"Server_logReason__1SNMU\",\"logRow\":\"Server_logRow__3r-zZ\",\"logReasonDetailed\":\"Server_logReasonDetailed__uRKTP\",\"logIcon\":\"Server_logIcon__2eNHD\",\"serverBadgeErr\":\"Server_serverBadgeErr__3txr9\",\"serverBadgeOk\":\"Server_serverBadgeOk__1vnEH\",\"serverBadgePending\":\"Server_serverBadgePending__KFlxu\",\"serverBadge\":\"Server_serverBadge__2dEUL\",\"serverStatusArray\":\"Server_serverStatusArray__SklvZ\",\"liveUpdate\":\"Server_liveUpdate__2AkO3\",\"livePulse\":\"Server_livePulse__2PWwz\",\"liveUpdateText\":\"Server_liveUpdateText__3iOfu\",\"statsBlock\":\"Server_statsBlock__14xqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Flex_Column__3cQ9_\",\"Row\":\"Flex_Row__3SC-0\",\"Grow\":\"Flex_Grow__f7am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContainer\":\"PageContainer_PageContainer__1PlzU\",\"PageColumn\":\"PageContainer_PageColumn__3Qegy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3VoE2\"};","\nconst MODE = \"prod\";\n\nconst endPoints = {\n    dev: \"https://homedev.gametools.network/api/\",\n    prod: \"https://manager-api.gametools.network/api/\"\n}\n\nexport default class JsonClient {\n    constructor() {\n        this.isWorking = true;\n        this.user = this.getUserInfo();\n    }\n    openLoginPage() {\n        window.location = this.constructApiUrl(\"login\");\n    }\n    constructApiUrl(method, params) {\n        params = params || {};\n        let paramStr = \"\";\n        for (let s in params) {\n            paramStr += s + \"=\" + params[s] + \"&\";\n        }\n        if (paramStr !== \"\") paramStr = \"?\" + paramStr;\n        const apiEP = endPoints[MODE];\n        return apiEP + method + paramStr;\n    }\n    async fetchMethod(method, params) {\n        return fetch(this.constructApiUrl(method, params), {\n            credentials: \"include\"\n        });\n    }\n    async postMethod(method, params) {\n        return fetch(this.constructApiUrl(method, {}), params);\n    }\n    /// Returns Promise\n    postJsonMethod(method, params) {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(params),\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return this.errorHandler(this.postMethod(method, options));\n    }\n    /// Returns Promise\n    getJsonMethod(method, params) {\n        return this.errorHandler(this.fetchMethod(method, params));\n    }\n    async errorHandler(response) {\n        return response.then(\n            result => {\n                return result.json().then(\n                    json => {\n                        if (\"error\" in json) {\n                            throw json.error;\n                        }\n                        if (\"data\" in json) {\n                            if (json.data.length > 0) {\n                                if (\"error\" in json.data[0]) {\n                                    throw json.data[0].error;\n                                }\n                            }\n                        }\n                        return json;\n                    },\n                    error => this.spawnError(error, 600)\n                );\n            },\n            error => this.spawnError(error, response.code)\n        );\n    }\n    spawnError(error, code) {\n        throw {\n            \"error\": {\n                \"message\": error,\n                \"code\": code,\n            }\n        };\n    }\n    async getUserInfo() {\n        const defaultUser = {\n            discord: {\n            name: \"\",\n            discriminator: 0,\n            avatar: \"\"\n            },\n            auth: {\n                inGuild: false,\n                isAdmin: false,\n                isDeveloper: false,\n                isOwner: false,\n                signedIn: false\n            }\n        };\n        let response = await this.getJsonMethod(\"getinfo\");\n        if (!response.hasOwnProperty(\"error\")) {\n            return response;\n        }\n        return defaultUser;\n    }\n}","import JsonClient from \"./JsonApi\";\n\nexport class ApiProvider extends JsonClient {\n\n    logout() {\n        var asyncUser = this.logoutAndChangeUser();\n        this.user = asyncUser;\n    }\n\n    async logoutAndChangeUser() {\n        await this.fetchMethod(\"logout/\");\n        var user = await this.getUserInfo();\n        return user;\n    }\n\n    async kickPlayer({ sid, playername, reason }) {\n        return await this.postJsonMethod(\"changeplayer\", {\n            \"request\": \"kickPlayer\",\n            \"playername\": playername,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async globalBanPlayer({ name, reason, gid}) {\n        return await this.postJsonMethod(\"addautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": reason\n        });\n    }\n\n    async globalUnbanPlayer({ name, gid}) {\n        return await this.postJsonMethod(\"delautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": \"\"\n        });\n    }\n\n    async changeRotation({ sid, map }) {\n        return await this.postJsonMethod(\"changelevel\", {\n            \"mapnumber\": map,\n            \"serverid\": sid\n        });\n    }\n\n    async banPlayer({ name, reason, time, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"bantime\": time.toString(),\n            \"reason\": reason\n        }); \n    }\n\n    async unbanPlayer({ name, reason, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async addVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async removeVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async movePlayer({ sid, team, name }) {\n        return await this.postJsonMethod(\"moveplayer\", {\n            \"teamid\": team,\n            \"playername\": name,\n            \"serverid\": sid\n        });\n    }\n\n    async getBanList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"bannedList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getStarterList({ sid }) {\n        return await this.getJsonMethod(\"firestarters\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getAutoBanList({ gid }) {\n        return await this.getJsonMethod(\"autoban\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getVipList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"vipList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getServerLogs({ sid }) {\n        return await this.getJsonMethod(\"tailserverlog\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getGroupLogs({ gid }) {\n        return await this.getJsonMethod(\"tailuserlog\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getDevGroups() {\n        var devGroups = await this.getJsonMethod(\"devgroups\");\n        if (\"error\" in devGroups) {\n            throw Error(\"Error on server.\");\n        }\n        return devGroups;\n    }\n\n    async addGroup({ groupName, discordId, modRole, adminRole, sid, remid }) {\n        return await this.postJsonMethod(\"addgroup\", {\n            \"groupname\": groupName,\n            \"adminroleid\": adminRole,\n            \"discordid\": discordId,\n            \"modroleid\": modRole,\n            \"remid\": remid,\n            \"sid\": sid,\n        });\n    }\n\n    async removeGroup({ gid }) {\n        return await this.postJsonMethod(\"delgroup\", {\n            \"groupId\": gid,\n        });\n    }\n\n    async editGroup({ gid, type, value }) {\n        var answer = await this.postJsonMethod(\"editgroup\", {\n            \"groupid\": gid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n    async getGroup(gid) {\n        return await this.getJsonMethod(\"groups\", { \"groupid\": gid });\n    }\n\n    async addGroupOwner({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addowner\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupServer({ gid, name, alias }) {\n        return await this.postJsonMethod(\"addserver\", {\n            \"servername\": name,\n            \"serveralias\": alias,\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupAdmin({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addadmin\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupAdmin({ gid, uid }) {\n        return await this.postJsonMethod(\"deladmin\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupOwner({ gid, uid }) {\n        return await this.postJsonMethod(\"delowner\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async setupOps({ server, sid, remid }) {\n        return await this.postJsonMethod(\"makeoperations\", {\n            \"servername\": server,\n            \"sid\": sid,\n            \"remid\": remid,\n        });\n    }\n\n\n    async getServer(sid) {\n        return await this.getJsonMethod(\"server\", { \"serverid\": sid });\n    }\n\n    async getServerGame(sid) {\n        var game = await this.getJsonMethod(\"servers\", { \"serverid\": sid });\n        if (\"error\" in game.data[0]) {\n            throw Error(game.data[0].error);\n        } else {\n            return game;\n        }\n    }\n\n    async removeServer({ gid, sid }) {\n        return await this.postJsonMethod(\"delserver\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n        });\n    }\n\n    async renameServer({ name, sid }) {\n        return await this.postJsonMethod(\"renameserver\", {\n            \"serverid\": sid,\n            \"servername\": name,\n        });\n    }\n\n    async changeServerAlias({ gid, alias, sid }) {\n        return await this.postJsonMethod(\"serveralias\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n            \"serveralias\": alias,\n        });\n    }\n\n    async editServer({ sid, value }) {\n        var answer = await this.postJsonMethod(\"editserver\", {\n            \"serverid\": sid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n\n}\n\nexport const OperationsApi = new ApiProvider();","import React from \"react\";\nimport styles from \"./PageContainer.module.css\";\n\n\nexport function PageContainer(props) {\n    return (\n        <div className={styles.PageContainer}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport function PageColumn(props) {\n    return (\n        <div className={styles.PageColumn}>\n            {props.children}\n        </div>\n    );\n}\n","import rollout from \"../rollout.json\";\n\nconst fixedTest = null;\nconst keys = rollout[\"AB\"];\n\n// Switch for AB testing. Shows user A or B option to test new features\nexport default function ABSwitch(A, B, key) {\n    if (!(key in keys)) {\n        return A;\n    }\n    return switchingTest(A, B, getChannel());\n}\n\n// A or B channel\nexport function getChannel() {\n    const storageKey = 'TestAB';\n    if (fixedTest) {\n        return fixedTest;\n    }\n    if (localStorage) {\n        let storageItemTest = localStorage.getItem(storageKey);\n        if (storageItemTest) {\n            return storageItemTest;\n        } else {\n            const testValue = Math.floor(Math.random() * 10) % 2;\n            localStorage.setItem(storageKey, testValue);\n            return testValue;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction switchingTest(A, B, v) {\n    return (v === 1) ? B : A;\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./Sidebar.module.css\";\n\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\n\nfunction TopSidebar() {\n    return (\n        <div className={styles.TopSidebar}>\n            <Link to=\"/\" title=\"Main page\">\n                <img src=\"/release-logo.png\" className={styles.Logo} />\n            </Link>\n        </div>\n    );\n}\n\nfunction PageLink(props) {\n    return (\n        <div className={styles.PageLink}>\n            <NavLink to={props.to} activeClassName={styles.PageLinkActive} title={props.name}>{props.content || props.name}</NavLink>\n        </div>\n    );\n}\n\nfunction PageButton(props) {\n    return (\n        <a className={styles.PageButton} target=\"_blank\" rel=\"noopener noreferrer\" href={props.href} title={props.name}>\n            <span onClick={props.onClick}>{props.name}</span>\n        </a>\n    );\n}\n\nfunction AddIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>);\n}\n\nfunction WrenchIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M13.78 15.3L19.78 21.3L21.89 19.14L15.89 13.14L13.78 15.3M17.5 10.1C17.11 10.1 16.69 10.05 16.36 9.91L4.97 21.25L2.86 19.14L10.27 11.74L8.5 9.96L7.78 10.66L6.33 9.25V12.11L5.63 12.81L2.11 9.25L2.81 8.55H5.62L4.22 7.14L7.78 3.58C8.95 2.41 10.83 2.41 12 3.58L9.89 5.74L11.3 7.14L10.59 7.85L12.38 9.63L14.2 7.75C14.06 7.42 14 7 14 6.63C14 4.66 15.56 3.11 17.5 3.11C18.09 3.11 18.61 3.25 19.08 3.53L16.41 6.2L17.91 7.7L20.58 5.03C20.86 5.5 21 6 21 6.63C21 8.55 19.45 10.1 17.5 10.1Z\" />\n    </svg>);\n}\n\n\n\nexport function Sidebar(props) {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    var devLink = \"\", accountLink = \"\", logoutLink = \"\", groupLinks = \"\";\n\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                });\n                history.push('/');\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n\n\n    if (!userError && !isLoading && user) {\n        if (user.auth.signedIn) {\n\n            const devOptionsContent = (\n                <>\n                    <span>Developer Options</span>\n                    <WrenchIcon />\n                </>\n            );\n\n            const addGroupContent = (\n                <>\n                    <span>Create Group</span>\n                    <AddIcon />\n                </>\n            );\n\n            if (user.auth.isDeveloper) {\n                devLink = <PageLink to=\"/dev/\" name=\"Developer Options\" content={devOptionsContent} />;\n            }\n\n            accountLink = [\n                ABSwitch(\"\", <PageLink key={0} to=\"/home/\" name=\"Home page\" />, \"homePage\"),\n                <PageLink key={1} to=\"/account/\" name=\"Account\" />,\n                <PageLink key={2} to=\"/group/new/\" name=\"Create Group\" content={addGroupContent} />\n            ];\n            logoutLink = <PageButton onClick={() => { logoutExecutor.mutate({}); }} name=\"Logout\" />;\n            groupLinks = [];\n            for (let i in user.permissions.isAdminOf) {\n                let group = user.permissions.isAdminOf[i];\n                groupLinks.push(<PageLink to={ \"/group/\" + group.id } name={group.groupName} key={i} />);\n            }\n                \n        }\n    }\n\n    \n\n    return (\n        <div className={styles.Sidebar}>\n            <TopSidebar />\n            <div style={{ display: \"flex\", flexGrow: 2, flexDirection: \"column\", overflowY: \"auto\", marginBottom: \"50px\" }}>\n                {accountLink}\n                {devLink}\n                <div className={styles.GroupLinks}>\n                    {groupLinks}\n                </div>\n                <PageButton href=\"https://discord.gametools.network/\" name=\"Need help?\" />\n                {logoutLink}\n                \n            </div>\n            <p style={{ paddingLeft: \"48px\", fontSize: \"12px\" }}>v{APP_VERSION} channel {(getChannel() === 0) ? \"A\" : \"B\"}</p>\n        </div>\n    );\n\n}","import React from \"react\";\nimport styles from \"./Status.module.css\";\n\n\nfunction LoadingIcon() {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.loadingIcon}>\n            <path fill=\"currentColor\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    );\n}\n\nfunction ErrorIcon(props) {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.errorIcon}>\n            <path fill=\"currentColor\" d=\"M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z\" />\n        </svg>\n    );\n}\n\nexport function Status(props) {\n    const notEnabled = (props.status === undefined || props.status === null) ;\n    return (\n        <div className={notEnabled ? \"\" : styles.status}>\n            {(notEnabled) ?  \"\" : (props.status) ? <LoadingIcon /> : <ErrorIcon />}\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Buttons.module.css\";\nimport { Status } from \"./Status\";\n\n\nexport function Button(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}<Status status={props.status} /></button>\n    );\n}\n\nexport function ButtonLink(props) {\n    if (props.disabled) {\n        return <Button name={props.name} disabled={true} />\n    }\n    return (\n        <NavLink style={props.style} className={styles.button} to={props.to} title={props.name}>{props.name}</NavLink>\n    );\n}\n\nexport function ButtonRow(props) {\n    return (\n        <div className={styles.buttonRow}>{props.children}</div>\n    );\n}\n\n\nexport function TextInput(props) {\n    if (props.value === undefined) {\n        return <input defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />;\n    }\n    return <input value={props.value} defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />;\n}\n\nexport function SmallButton(props) {\n    if (props.disabled) {\n        return (\n            \"\"\n        );\n    }\n    return (\n        <div className={styles.SmallButton} onClick={_ => props.callback(props.vars)} title={props.name}>{props.content || props.name}</div>\n    );\n}\n\nexport function Switch(props) {\n\n    const [checkedSwitch, clickSwitch] = useState(false);\n\n    const switchTheSwitch = () => {\n        var newVal = !checkedSwitch;\n        clickSwitch(newVal);\n        if (props.callback) props.callback(newVal);\n    };\n\n    useEffect(() => {\n        if (props.checked !== null) {\n            clickSwitch(props.checked);\n        }\n    }, [props.checked])\n\n    /*  If user uses tabs, make it clickable on Enter key */\n    const SwitchOnenter = (e) => {\n        if (e.charCode === 13) switchTheSwitch();\n    };\n\n    const switchClassName = checkedSwitch ? styles.SwitchActive : styles.Switch;\n\n    return (\n        <div className={styles.SwitchRow}>\n            <div className={switchClassName} onClick={switchTheSwitch} isChecked={checkedSwitch} onKeyPress={SwitchOnenter} role=\"switch\" tabIndex=\"1\">\n                <span className={styles.SwitchInner}>\n                    <span className={styles.SwitchOn}></span>\n                    <span className={styles.SwitchOff}></span>\n                </span>\n                <span className={styles.SwitchHandle}></span>\n            </div>\n            <span>{props.name}</span>\n        </div>\n    );\n}\n\nexport function DropdownButton(props) {\n    const [open, setOpen] = useState(false);\n\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.container} ref={container}>\n            <button type=\"button\" className={styles.button} onClick={() => setOpen(!open)}>{props.name}</button>\n            {open && (<div className={styles.dropdown}>\n                <ul className={styles.ul}>\n                    {\n                        props.options.map(option => <li className={styles.li} onClick={option.callback}>{option.name}</li>)\n                    }\n                </ul>\n            </div>)}\n        </div>\n    );\n}\n\n\nexport function ChoosePageButtons(props) {\n\n    const [active, setActive] = useState(0);\n\n    return (\n        <div className={styles.ChoosePageButtonHolder} >\n            {\n                props.buttons.map((button, i) => (\n                    <div\n                        key={i}\n                        isChecked={i === active}\n                        role=\"switch\"\n                        className={(i === active) ? styles.ChoosePageButtonActive : styles.ChoosePageButton}\n                        onClick={_ => { setActive(i); button.callback() }}\n                        title={button.name}\n                        tabIndex=\"1\" \n                    >\n                        {button.content || button.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n    \n}\n\nfunction IconSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n        </svg>\n    );\n} \n\nfunction IconNotSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\" />\n        </svg>\n    );\n} \n\nexport function SelectableRow(props) {\n    const [selected, setSelcted] = React.useState(false);\n    const select = (p) => {\n        setSelcted(p);\n        props.callback(p);\n    }\n    return (\n        <div className={(selected) ? styles.selectableRowSelected : styles.selectableRow} onClick={() => select(!selected)}>\n            {\n                (selected) ? <IconSelected /> : <IconNotSelected />\n            }\n            {props.children}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport styles from \"./Flex.module.css\";\n\n\nexport function Column(props) {\n    return (\n        <div className={styles.Column}>{props.children}</div>\n    );\n}\n\nexport function Row(props) {\n    return (\n        <div className={styles.Row}>{props.children}</div>\n    );\n}\n\nexport function Grow(props) {\n    return (\n        <div className={styles.Grow}>{props.children}</div>\n    );\n}","import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nimport { ChoosePageButtons } from \"./Buttons.js\";\n\nexport function Card(props) {\n    return (\n        <div className={styles.card} style={props.style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function CardRow(props) {\n    return <span className={styles.CardRow}>{props.children}</span>;\n}\n\nexport function PageCard(props) {\n    return (\n        <>\n            <ChoosePageButtons buttons={props.buttons} />\n            <div className={styles.PageCard} style={props.style}>\n                {props.children}\n             </div>\n        </>\n    );\n}\n\nexport function Tag(props) {\n    return (\n        <span className={styles.Tag}>\n            {props.children}\n        </span>\n    );\n}\n\n\n\nconst ModalControll = {\n    isShown: false,\n    children: \"\",\n    show: (e) => {},\n    close: (e) => {},\n}\n\nconst ModalContext = React.createContext(ModalControll);\n\nexport const useModal = () => React.useContext(ModalContext);\n\nfunction Modal(props) {\n\n    const controller = useModal();\n\n    return (\n        <div className={props.show ? styles.modal : styles.modalDisabled}>\n            <div className={styles.modalBackground} onClick={() => controller.close()}></div>\n            <div className={styles.modalContent}>{props.content}</div>\n        </div>\n    );\n}\n\nexport function ModalProvider(props) {\n\n    const [controllerState, setControllerState] = React.useState({\n        isShown: false,\n        children: \"\",\n    });\n\n    const showModal = (e) => {\n        setControllerState(s => ({\n            ...s,\n            isShown: true,\n            children: e,\n        }));\n    }\n\n    const closeModal = () => {\n        setControllerState(s => ({\n            ...s,\n            isShown: false,\n        }));\n    }\n\n    return (\n        <ModalContext.Provider value={{...controllerState, show: showModal, close: closeModal}}>\n            <Modal show={controllerState.isShown} content={controllerState.children} />\n            {props.children}\n        </ModalContext.Provider>\n    );\n}","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\n\nexport function Header(props) {\n    return (\n        <div className={styles.Header}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport styles from \"./User.module.css\";\nimport { SelectableRow } from \"./Buttons\";\n\nexport function UserRow(props) {\n    var user = props.discord;\n    return (\n        <div className={styles.UserRow}>\n            <img alt=\"\" src={user.avatar} className={styles.Avatar} />\n            <div className={styles.DiscordName}>\n                {user.name}\n                <span className={styles.DiscordNum}>\n                    {user.discriminator}\n                </span>\n            </div>\n            <div className={styles.secure}>\n                <svg viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 12C6.39782 12 6.77935 11.842 7.06066 11.5607C7.34196 11.2794 7.5 10.8978 7.5 10.5C7.5 9.6675 6.825 9 6 9C5.60217 9 5.22064 9.15804 4.93934 9.43934C4.65804 9.72065 4.5 10.1022 4.5 10.5C4.5 10.8978 4.65804 11.2794 4.93934 11.5607C5.22064 11.842 5.60217 12 6 12ZM10.5 5.25C10.8978 5.25 11.2794 5.40804 11.5607 5.68934C11.842 5.97065 12 6.35218 12 6.75V14.25C12 14.6478 11.842 15.0294 11.5607 15.3107C11.2794 15.592 10.8978 15.75 10.5 15.75H1.5C1.10218 15.75 0.720644 15.592 0.43934 15.3107C0.158035 15.0294 0 14.6478 0 14.25V6.75C0 5.9175 0.675 5.25 1.5 5.25H2.25V3.75C2.25 2.75544 2.64509 1.80161 3.34835 1.09835C4.05161 0.395088 5.00544 0 6 0C6.49246 0 6.98009 0.0969967 7.43506 0.285452C7.89003 0.473907 8.30343 0.75013 8.65165 1.09835C8.99987 1.44657 9.27609 1.85997 9.46455 2.31494C9.653 2.76991 9.75 3.25754 9.75 3.75V5.25H10.5ZM6 1.5C5.40326 1.5 4.83097 1.73705 4.40901 2.15901C3.98705 2.58097 3.75 3.15326 3.75 3.75V5.25H8.25V3.75C8.25 3.15326 8.01295 2.58097 7.59099 2.15901C7.16903 1.73705 6.59674 1.5 6 1.5Z\" fill=\"#55F165\" />\n                </svg>\n                Logged in\n            </div>\n        </div>\n    );\n}\n\nexport function UserStRow(props) {\n    var user = props.user;\n    var dateAdded = new Date(Date.parse(user.addedAt));\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var dateString = `${dateAdded.getDate()} ${months[dateAdded.getMonth()]} ${String(dateAdded.getHours()).padStart(2, '0')}:${String(dateAdded.getMinutes()).padStart(2, '0')}`;\n    return (\n        <SelectableRow callback={props.callback}>\n            <div className={styles.DiscordName}>\n                {user.name}\n            </div>\n            <div className={styles.DiscordId}>\n                {user.id}\n            </div>\n            <div className={styles.DateAdded}>\n                {dateString}\n            </div>\n        </SelectableRow>\n    );\n}\n\nexport function FakeUserStRow(props) {\n    return (\n        <div className={styles.UserRowSt} />\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Group.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { OperationsApi } from \"../api\";\nimport { TextInput } from \"./Buttons\";\nimport { Tag } from \"./Card\";\n\nexport function GroupRow(props) {\n    var group = props.group;\n    return (\n        <Link className={styles.GroupRow} to={\"/group/\" + group.id}>\n            <span className={styles.GroupName}>{group.groupName}</span>\n            Manage group\n        </Link>\n    );\n}\n\nexport function ServerRow(props) {\n    var server = props.server;\n\n    // If not yet setteled\n    if (server.id === null) {\n        return (\n            <div className={styles.GroupRow}>\n                <span className={styles.GroupName}>\n                    {server.name}\n                    <span className={styles.serverBadgePending}>\n                        Pending status\n                    </span>\n                </span>\n                {props.button}\n            </div>\n        );\n    }\n\n    const serverStatus = (() => {\n        switch (server.status) {\n            case \"noServer\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        Server not found\n                    </span>\n                )\n            case \"noAdmin\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        No admin rights\n                    </span>\n                )\n            case \"pending\":\n                return (\n                    <span className={styles.serverBadgePending}>\n                        Pending status\n                    </span>\n                )\n            default:\n                return (\n                    <span className={styles.serverBadgeOk}>\n                        Running\n                    </span>\n                )    \n        }\n    })();\n\n    return (\n        <div className={styles.GroupRow}>\n            <Link className={styles.GroupName} to={\"/server/\" + server.id}>\n                {server.name}\n                {serverStatus}\n            </Link>\n            {props.button}\n        </div>\n    );\n}\n\nexport function GroupAdminAccount(props) {\n\n    var { remid, sid } = props.cookie;\n\n    return (\n        <div className={styles.AdminAccount}>\n        </div>\n    );\n\n}\n\nexport function GameStatsAd(props) {\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className={styles.gameStatsAd} href=\"https://discord.com/oauth2/authorize?client_id=714524944783900794&scope=bot&permissions=83968\">\n            <img src=\"./game-stats.png\" />\n            <span>Add Game Stats bot on your Discord server, in order to control BF1 servers with commands.</span>\n        </a>\n    );\n}\n\n\nexport function VBanList(props) {\n    const gid = props.gid;\n    const { isError, data: banList, error } = useQuery('globalBanList' + gid, () => OperationsApi.getAutoBanList({ gid }));\n\n    const queryClient = useQueryClient();\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    const unbanVGlobalBan = useMutation(\n        variables => OperationsApi.globalUnbanPlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('globalBanList' + gid)\n                // Snapshot the previous value\n                const previousBanList = queryClient.getQueryData('globalBanList' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('globalBanList' + gid, old => {\n                    old.data= old.data.filter(player => player.playerName !== name);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousBanList, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('globalBanList' + context.gid, context.previousBanList)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('globalBanList' + context.gid)\n            },\n        }\n    );\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                List of banned players on this group. Used <b>{banList.data.length} slots</b>. <Tag>Early beta</Tag>\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div className={styles.BanListing}>\n                {\n                    banList.data.filter(p => p.playerName.includes(searchWord)).map(\n                        (player, i) => (<GlobalBanRow player={player} key={i} callback={() => unbanVGlobalBan.mutate({gid, name: player.playerName})}/>)\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\n\nfunction GlobalBanRow(props) {\n    const player = props.player;\n    return (\n        <div className={styles.BanRow}>\n            <span className={styles.BanDisplayName}>{player.playerName}</span>\n            <span className={styles.banReason}>{\n                ((player.reason === \"\") ? \"without any reason\" : \"with reason\")\n            }</span>\n            <span className={styles.banReasonDetailed}>{player.reason}</span>\n            <span className={styles.globalUnban} onClick={props.callback}>Unban</span>\n        </div>\n    );\n}\n\nexport function GroupLogs(props) {\n    const gid = props.gid;\n    const { isError, data: logList, error } = useQuery('groupogList' + gid, () => OperationsApi.getGroupLogs({ gid }));\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>Group log list</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const log = props.log;\n\n    const actionIcon = (() => {\n        switch (log.action) {\n            case \"editGroup\":\n                return \"\";\n            case \"addUser\":\n                return \"\";\n            case \"addOwner\":\n                return \"\"\n            case \"addGroup\":\n                return \"\";\n            case \"removeOwner\":\n                return \"\";\n            case \"removeUser\":\n                return \"\"\n            default:\n                return \"\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${datetime.getHours()}:${datetime.getMinutes()}`;\n\n    return (\n        <div className={styles.logRow}>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logReason}>{\n                log.reason\n            }</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}","import React from \"react\";\nimport styles from \"./MainPage.module.css\";\nimport { OperationsApi } from \"../api\";\n\nfunction ListItem(props) {\n    return (\n        <div className={styles.ListItem}>\n            <h2>{props.header}</h2>\n            <p>{props.children}</p>\n        </div>\n    );\n}\n\nfunction LoginButton() {\n    return (\n        <a className={styles.LoginButton} href={OperationsApi.constructApiUrl(\"login\")}>Log in</a>\n    );\n}\n\nexport function MainPageComponent(props) {\n    return (\n        <div className={styles.MainPage}>\n            <div className={styles.MainPageCard}>\n                <div className={styles.titleBlock}>\n                    <div className={styles.titleContent}>\n                        <h1>A new way to manage your Battlefield 1 servers</h1>\n                        <p>Server Manager is a new Gametools & BFBan service created by Community Network</p>\n                        <LoginButton />\n                    </div>\n                </div>\n                <div className={styles.listing}>\n                    <h2>Features</h2>\n                    <ListItem header=\"BFBan Anti Cheat\">Protect your servers against hackers confirmed on www.bfban.com</ListItem>\n                    <ListItem header=\"Unlimited Global V-Ban list\">Ban as many players as you want to on all your servers with virtal ban list.</ListItem>\n                    <ListItem header=\"High ping players kick\">Automaticaly kick players from your servers based on ping threshold.</ListItem>\n                    <ListItem header=\"Discord tools to maintain server\">Contoll your servers right in the Discord based on roles.</ListItem>\n                    <ListItem header=\"Server action logging\">See full logs on every actions made on your servers and groups.</ListItem>\n                    <ListItem header=\"Full controll over your servers\">Admins can controll server with same functions as in game.</ListItem>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Server.module.css\";\nimport { useQuery } from 'react-query';\nimport { Button, ButtonRow, DropdownButton, ButtonLink, TextInput } from \"./Buttons\";\nimport { useModal } from \"./Card\";\nimport { OperationsApi } from \"../api\";\n\n\nexport function SmallText(props) {\n    return (<span className={styles.SmallText}>{props.children}</span>);\n}\n\nfunction PlayerStatsModal(props) {\n    const player = props.player;\n    const { isError, data: stats, isLoading } = useQuery('playerStatsByEAID' + player, () => fetch(\"https://api.gametools.network/bf1/stats/?name=\"+player+\"&lang=en-us&platform=pc&=\").then(r=>r.json()));\n    \n    const statsBlock = (!isLoading && !isError) ? (\n        <div className={styles.statsBlock}>\n            <h5>Skill: {stats.skill}</h5>\n            <h5>Level: {stats.rank}</h5>\n            <h5>KPM: {stats.killsPerMinute}</h5>\n            <h5>Win: {stats.winPercent}</h5>\n            <h5>Accuracy: {stats.Accuracy}</h5>\n            <h5>Headshots: {stats.headshots}</h5>\n            <h5>KD: {stats.killDeath}</h5>\n            <h5>ID: {stats.id}</h5>\n            <a href={\"https://gametools.network/stats/pc/playerid/\"+stats.id+\"?name=\"+player} target=\"_blank\">Full stats..</a>\n        </div>\n    ) : \"Loading stats..\";\n\n    return (   \n        <>\n            <h2>Game stats for {player}</h2>\n            {statsBlock}\n        </>\n    );\n}\n\nexport function EditableText(props) {\n    return (<p>{props.children}</p>);\n}\n\nexport function SettingsRow(props) {\n    return <div className={styles.SettingsRow}>{props.children}</div>;\n}\n\nexport function SmallIntInput(props) {\n    return <input type=\"text\" className={styles.SmallInput} defaultValue={props.value} />;\n}\n\nexport function ServerInfo(props) {\n    var server = props.server;\n    return (\n        <>\n        </>\n    );\n}\n\nexport function ServerRotation(props) {\n    \n    var server = null, game = null;\n    if (props.game && props.game.data && props.game.data.length > 0) {\n        server = props.game.data[0];\n        game = server.info;\n    }\n\n    var server_status = (\n        <span className={styles.serverBadgePending}>\n            Pending status\n        </span>\n    );\n    \n    if (server) {\n        if (server.isAdmin) {\n            server_status = (\n                <span className={styles.serverBadgeOk}>\n                    <span className={styles.liveUpdate}></span>\n                    Running\n                </span>\n            )  \n        } else {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    No admin rights\n                </span>\n            )\n        }\n        if (server.serverStatus === \"noServer\") {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    Status: Server not found\n                </span>\n            )\n        }\n    }\n    var update_timestamp = \"\";\n    if (server) {\n        const timestamp = new Date(server.update_timestamp);\n        update_timestamp =  `${timestamp.getHours()}:${timestamp.getMinutes()}:${timestamp.getSeconds()}`;\n    }\n    var [rotationId, setRotationId] = useState(\"\"); \n    return (\n        <div className={styles.ServerInfoColumn}>\n            <div className={styles.ServerDescriptionRow}>\n                <img className={styles.serverImage} src={(game) ? game.url : \"/no-server-image.png\"} />\n                <div className={styles.GameInfo}>\n                    <span className={styles.ServerName}>{(game) ? game.prefix : \"Loading\" }</span>\n                    <SmallText>{(game) ? `${game.map} - ${game.mode} - ${game.serverInfo} [${game.inQue}] players` : \"-\"}</SmallText>\n                </div>\n            </div>\n            <ButtonRow>\n                <Button name=\"Restart\" disabled={!game} callback={_ => props.rotate((game) ? game.rotationId : null)} />\n                <select className={styles.SwitchGame} value={rotationId} onChange={e => setRotationId(e.target.value)}>\n                    <option value=\"\">Switch game..</option>\n                    {(game) ? game.rotation.map((value, i) =>\n                        <option value={value.index} key={i}>{value.mapname} - {value.mode}</option>\n                    ) : \"\"}\n                </select>\n                {(rotationId !== \"\") ? <Button name=\"Apply\" disabled={!game} callback={_ => { props.rotate((game) ? rotationId : null); setRotationId(\"\"); }} /> : \"\"}\n            </ButtonRow>\n            <div className={styles.serverStatusArray}>\n                <span>{server_status}</span>\n                <span className={styles.serverBadge}>Last update - {update_timestamp}</span>\n            </div>\n            \n        </div>\n    );\n}\n\nexport function PlayerInfo(props) {\n    const modal = useModal();\n    var info = props.game.data[0].players[props.team].players;\n\n    var moveTeam = (props.team === \"0\") ? \"1\" : \"2\";\n\n    let getDropdownOptions = (player) => {\n        return [\n            { name: \"Give VIP\", callback: () => props.giveVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n            { name: \"Remove VIP\", callback: () => props.removeVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n        ]\n    };\n    return (\n        info.map((player, i) => \n            <div className={styles.PlayerRow} key={i}>\n\n                <span className={styles.PlayerIndex}>\n                    {i + 1}\n                </span>\n                <span className={styles.PlayerLevel}>\n                    {\n                        (player.rank === null) ? \"??\" : player.rank\n                    }\n                </span>\n                <span className={styles.PlayerName} onClick={_=>modal.show(<PlayerStatsModal player={player.name} />)}>\n                    {\n                        (player.platoon === \"\") ? \"\" : `[${player.platoon}] ` \n                    }\n                    {\n                        player.name\n                    }\n                </span>\n                <span className={styles.PlayerNone} />\n\n\n                \n                <div className={styles.PlayerButtons}>\n                    <div className={styles.PlayerButton} onClick={_ => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam})}>\n                        Move\n                    </div>\n                    <div className={styles.PlayerButton} onClick={_ => modal.show(<props.kickModal sid={props.sid} eaid={player.name} />)}>\n                        Kick\n                    </div>\n                    <div className={styles.PlayerButton} onClick={_ => modal.show(<props.banModal sid={props.sid} eaid={player.name} />)}>\n                        Ban\n                    </div>\n                    {/*<ButtonLink name=\"Kick\" to={`/server/${props.sid}/kick/${player.name}/`} />\n                    <ButtonLink name=\"Ban\" to={`/server/${props.sid}/ban/${player.name}/`} />*/}\n                    {/*<DropdownButton options={getDropdownOptions(player)} name=\"☰\"></DropdownButton>*/}\n                    \n                </div>\n\n                <span className={styles.PlayerPing}>\n                    {player.ping}\n                    <svg viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M4,6V4H4.1C12.9,4 20,11.1 20,19.9V20H18V19.9C18,12.2 11.8,6 4,6M4,10V8A12,12 0 0,1 16,20H14A10,10 0 0,0 4,10M4,14V12A8,8 0 0,1 12,20H10A6,6 0 0,0 4,14M4,16A4,4 0 0,1 8,20H4V16Z\" />\n                    </svg>\n                </span>\n                \n            </div>\n        )\n    );\n}\n\nexport function ServerInfoHolder(props) {\n    return (\n        <div className={styles.ServerInfoRow}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function BanList(props) {\n    const sid = props.sid;\n    const { isError, data: banList, error } = useQuery('serverBanList' + sid, () => OperationsApi.getBanList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                List of banned players on this server.<br />\n                Used <b>{banList.data.length} slots out of 200</b>.\n                Use our group-based virtual ban list,<br /> to ban unlimited amount of players.\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>Player name</th>\n                        <th>Player id</th>\n                        <th>Reason</th>\n                        <th>Admin</th>\n                        <th>Until</th>\n                        <th>Timestamp</th>\n                    </thead>\n                    <tbody>\n                        {\n                            banList.data.filter(p => p.displayName.includes(searchWord)).map(\n                                (player, i) => (<BanRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction BanRow(props) {\n    const player = props.player;\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.displayName}</td>\n            <td title=\"Player ID\">{player.id}</td>\n            <td>{player.reason}</td>\n            <td>{player.admin}</td>\n            <td>{player.banned_until}</td>\n            <td>{player.ban_timestamp}</td>\n        </tr>\n    );\n}\n\nexport function FireStarter(props) {\n    const sid = props.sid;\n    const { isError, data: starterList, error } = useQuery('serverStarterList' + sid, () => OperationsApi.getStarterList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!starterList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    starterList.data.sort((a, b) => b.amount - a.amount);\n\n    return (\n        <div>\n            <h5>\n                We measure when your server's preround ended and count all the players that are in the server when it starts,<br />\n                so you can check here who is helping you start your server.\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>Player name</th>\n                        <th>Player id</th>\n                        <th>Amount</th>\n                    </thead>\n                    <tbody>\n                        {\n                            starterList.data.filter(p => p.playerName.includes(searchWord)).map(\n                                (player, i) => (<StarterRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction StarterRow(props) {\n    const player = props.player;\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.platoon !== \"\"? `[${player.platoon}] `: null}{player.playerName}</td>\n            <td title=\"Player ID\">{player.playerId}</td>\n            <td>{player.amount}</td>\n        </tr>\n    );\n}\n\nexport function LogList(props) {\n    \n    const sid = props.sid;\n    const { isError, data: logList, error } = useQuery('serverLogList' + sid, () => OperationsApi.getServerLogs({ sid }));\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>Log list</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const modal = useModal();\n    const log = props.log;\n    const action = (() => {\n        switch (log.action) {\n            case \"addServerBan\":\n                return \"banned\";\n            case \"kickPlayer\":\n                return \"kicked\";\n            case \"removeServerBan\":\n                return \"unbanned\"\n            case \"addServerVip\":\n                return \"gave vip to\";\n            case \"movePlayer\":\n                return \"moved\";\n            case \"removeServerVip\":\n                return \"removed vip of\"\n            default:\n                return \"did magic to\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${String(datetime.getHours()).padStart(2, '0')}:${String(datetime.getMinutes()).padStart(2, '0')}`;\n\n    if (log.action === \"autokick-ping\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M19.5,5.5V18.5H17.5V5.5H19.5M12.5,10.5V18.5H10.5V10.5H12.5M21,4H16V20H21V4M14,9H9V20H14V9M7,14H2V20H7V14Z\" />\n                </svg>\n                <span className={styles.logAdmin}>Ping checker</span>\n                <span className={styles.logAction}>kicked</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-globalBans\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>VBan</span>\n                <span className={styles.logAction}>kicked</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-bfban\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>BFBAN</span>\n                <span className={styles.logAction}>kicked</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (action === \"moved\" && log.toPlayer === \"server\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z\" />                </svg>\n                <span className={styles.logAdmin}>{log.adminName}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n    return (\n        <div className={styles.logRow}>\n            <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n            </svg>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logAction}>{action}</span>\n            <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n            <span className={styles.logReason}>{\n                ((log.reason === \"\") ? \"without any reason\" : \"with reason\")\n            }</span>\n            <span className={styles.logReasonDetailed}>{log.reason}</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}\n\nexport function VipList(props) {\n    const sid = props.sid;\n    const { isError, data: vipList, error } = useQuery('serverVipList' + sid, () => OperationsApi.getVipList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n\n    if (!vipList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n    \n\n    return (\n        <div>\n            <div className={styles.VipHeader}>\n                <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <h5 style={{ marginBottom: 0 }}>\n                        List of VIP players on this server.<br />\n                        Used <b>{vipList.data.length} slots out of 50</b>.\n                    </h5>\n                </div>\n            </div>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <tr>\n                            <th>Player name</th>\n                            <th>Player id</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            vipList.data.filter(p => p.displayName.includes(searchWord)).map(\n                                (player, i) => (<VipRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction VipRow(props) {\n    const player = props.player;\n    return (\n        <tr className={styles.VipRow}>\n            <td title={player.displayName} className={styles.VipName}>\n                <div className={styles.VipRowImg}><img src={player.avatar} alt=\"\" /></div>\n                <span>{player.displayName}</span>\n            </td>\n            <td title=\"Player ID\">{player.id}</td>\n        </tr>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, CardRow, UserRow, Row } from \"../components\";\n\nexport default function Account() {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var userLine = \"\";\n\n    if (!userError && !isLoading && user) {\n        if (!user.auth.signedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            userLine = <UserRow discord={user.discord} />;\n        }\n    } else if (userError && !isLoading) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Account</h2>\n                </Header>\n                <Card>\n                    <h2>Discord Profile</h2>\n                    {userLine}\n                </Card>\n            </Column>\n            <Column>\n                <Header />\n                <Card>\n                    <h2>Permissions</h2>\n                    <CardRow>Administrator</CardRow>\n                    <CardRow>Server owner</CardRow>\n                    <CardRow>System administrator</CardRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, GroupRow, Row } from \"../components\";\n\n\nexport function Developer() {\n\n    const { isLoading, isError, data } = useQuery('devGroups', () => OperationsApi.getDevGroups())\n    \n    var groups = [];\n\n    if (!isLoading && !isError && data) {\n        data.data.map((g, i) => {\n            groups.push(<GroupRow key={i} group={g} />);\n        });\n    } else if (isError) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Developer Options</h2>\n                </Header>\n                <Card>\n                    <h2>List of Groups</h2>\n                    {groups}\n                    <ButtonRow>\n                        <ButtonLink name=\"Add new Group\" to=\"/group/new/\" />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, Switch, BanList, Column, Card, Header, ServerRotation, ServerInfoHolder, ButtonLink, ButtonRow, Button, PageCard, Row, VipList, LogList, TextInput, PlayerInfo, FireStarter } from \"../components\";\n\n\nexport function Server(props) {\n    var sid = props.match.params.sid;\n\n    const queryClient = useQueryClient();\n    const modal = useModal();\n\n    const { isError: serverError, data: server } = useQuery('server' + sid, () => OperationsApi.getServer(sid));\n    const { isError: gameError, data: runningGame } = useQuery('serverGame' + sid, () => OperationsApi.getServerGame(sid));\n\n    var serverCard = \"\";\n    var playerList = \"\";\n    var playerInGame = false;\n    var playerNicknameTeam;\n\n    var [playerName, setPlayerName] = useState(\"\");\n\n    var [addVipStatus, changeAddVipStatus] = useState({ name: \"Add Vip\", status: false });\n    var [removeVipStatus, changeRemoveVipStatus] = useState({ name: \"Remove Vip\", status: false });\n    var [unbanStatus, changeUnbanStatus] = useState({ name: \"Unban\", status: false });\n    \n    var [tabsListing, setTabsListing] = useState(\"info\");\n\n    const UnbanPlayer = useMutation(\n        v => OperationsApi.unbanPlayer(v), {\n        onMutate: async () => {\n            changeUnbanStatus({ name: \"Pending..\", status: true });\n            return { status: unbanStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeUnbanStatus(context.status);\n        },\n    }\n    );\n\n    const RemoveVip = useMutation(\n        v => OperationsApi.removeVip(v), {\n        onMutate: async () => {\n            changeRemoveVipStatus({ name: \"Pending..\", status: true });\n            return { status: removeVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeRemoveVipStatus(context.status);\n        },\n    }\n    );\n\n    const AddVip = useMutation(\n        v => OperationsApi.addVip(v), {\n        onMutate: async () => {\n            changeAddVipStatus({ name: \"Pending..\", status: true });\n            return { status: addVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeAddVipStatus(context.status);\n        },\n    }\n    );\n\n    const movePlayer = useMutation(\n        variables => OperationsApi.movePlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, team, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    if (team === \"1\") {\n                        old.data[0].players[1].players.push(old.data[0].players[0].players.find(e => e.name === name));\n                        old.data[0].players[0].players = old.data[0].players[0].players.filter(p => p.name !== name);\n                    } else {\n                        old.data[0].players[0].players.push(old.data[0].players[1].players.find(e => e.name === name));\n                        old.data[0].players[1].players = old.data[0].players[1].players.filter(p => p.name !== name);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const serverTabs = [\n        {\n            name: \"Current game\",\n            callback: () => setTabsListing(\"info\"),\n        },\n        {\n            name: \"Ban list\",\n            callback: () => setTabsListing(\"banlist\"),\n        },\n        {\n            name: \"Vip players\",\n            callback: () => setTabsListing(\"viplist\"),\n        },\n        {\n            name: \"Firestarter list\",\n            callback: () => setTabsListing(\"firestarter\"),\n        },\n        {\n            name: \"Logs\",\n            callback: () => setTabsListing(\"loglist\"),\n        },\n        {\n            name: \"Server Protection\",\n            callback: () => setTabsListing(\"protection\"),\n        },\n        {\n            name: \"Settings\",\n            callback: () => setTabsListing(\"settings\"),\n        }\n    ];\n\n    const catTabs = {\n        info: (\n            <ServerInfoHolder>\n                <ServerRotation game={runningGame} rotate={id => OperationsApi.changeRotation({ sid, map: id })} />\n            </ServerInfoHolder>\n        ),\n        banlist: <BanList sid={sid} />,\n        viplist: <VipList sid={sid} />,\n        firestarter: <FireStarter sid={sid} />,\n        loglist: <LogList sid={sid} />,\n        protection: (\n            <>\n                <ServerAutomation server={server} sid={sid} />\n            </>\n        ),\n        settings: ( \n            <>\n                <ServerSettings server={server} sid={sid} />\n            </>\n        )\n    }\n\n    //if (!serverError && server && !gameError && runningGame) {\n    serverCard = (\n        <Row>\n            <Column>\n                <PageCard buttons={serverTabs} >\n                    {catTabs[tabsListing]}\n                </PageCard>\n            </Column>\n        </Row>\n    );\n    //}\n\n    var isOpsMode = false;\n\n    if (!gameError && runningGame && !(\"error\" in runningGame.data[0].players[0])) {\n\n        isOpsMode = runningGame.data[0].info.mode === \"Operations\";\n\n        var f1 = runningGame.data[0].players[0].players.find(e => e.name === playerName);\n        var f2 = runningGame.data[0].players[1].players.find(e => e.name === playerName);\n\n        if (f1 !== undefined) {\n            playerNicknameTeam = \"1\";\n        } else if(f2 !== undefined) {\n            playerNicknameTeam = \"2\";\n        }\n\n        var playerInGame = (playerName !== \"\") &&\n            (\n                (f1 !== undefined) || (f2 !== undefined)\n            );\n\n        playerList = (\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>Team 1</h2>\n                        <PlayerInfo game={runningGame} team=\"0\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n                <Column>\n                    <Card>\n                        <h2>Team 2</h2>\n                        <PlayerInfo game={runningGame} team=\"1\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer}  giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n            </Row>\n        )\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>Server panel</h2>\n                    </Header>\n                </Column>\n            </Row>\n            {serverCard}\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>Console</h2>\n                        <Row>\n                            <TextInput name=\"Player name\" callback={e => setPlayerName(e.target.value)} style={{\n                                marginRight: 12,\n                            }}/>\n                            <ButtonRow>\n                                <Button disabled={playerName === \"\"} name=\"Kick\" callback={_ => modal.show(<ServerKickPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={!playerInGame} name=\"Move\" callback={_ => movePlayer.mutate({ sid, team: playerNicknameTeam, name: playerName })} />\n                                <Button disabled={playerName === \"\"} name=\"Ban\" callback={_ => modal.show(<ServerBanPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\" || unbanStatus.status} name={unbanStatus.name} callback={_ => UnbanPlayer.mutate({ sid, name: playerName, reason: \"\" })} />\n                                <Button disabled={playerName === \"\" || addVipStatus.status || isOpsMode} name={addVipStatus.name} callback={_ => AddVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                                <Button disabled={playerName === \"\" || removeVipStatus.status || isOpsMode} name={removeVipStatus.name} callback={_ => RemoveVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                            </ButtonRow>\n                        </Row>\n                    </Card>\n                </Column>\n            </Row>\n            {playerList}\n        </>\n    );\n\n}\n\nfunction ServerAutomation(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n\n    const [kickOnPingDisabled, setKickOnPingDisabled] = useState(false);\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n\n        if (props.server) {\n            const { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage } = props.server;\n            const originalServerState = { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage };\n            if (serverState === null) {\n                setServerState(originalServerState);\n                setKickOnPingDisabled(autoPingKick !== 0);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                if (serverState.autoPingKick === 0) setKickOnPingDisabled(false);\n                setCanApply(newCanApply);\n            }\n           \n        }\n        \n\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>Auto server protection</h2>\n            <h5 style={{ marginTop: \"8px\" }}>\n                Introducing new tools developed to protect your servers against hackers.<br />\n                Global Virtual Ban list auto-kicks players on <b>all group servers</b> providing<br />\n                infinity amount of ban slots and synchronized ban list.\n            </h5>\n            <Switch checked={getServerValue(\"autoBanKick\")} name=\"Enable Global V-Ban\" callback={(v) => changeSrerverState({ autoBanKick: v })}/>\n            <h5 style={{ marginTop: \"8px\" }}>This msg appear to users who got <br />auto-kicked by V-Ban Global system.</h5>\n            \n            <TextInput\n                disabled={!allowedTo || (serverState && !serverState.autoBanKick)}\n                callback={(e) => changeSrerverState({ autoGlobalBanMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoGlobalBanMessage\")}\n                name={\"V-Ban message\"}\n            />\n            <h5 style={{ marginTop: \"30px\" }}>Protect server agains known cheaters in <i>bfban.com</i></h5>\n            <Switch checked={getServerValue(\"autoBfbanKick\")} name=\"Enable BFBan Anti Cheat\" callback={(v) => changeSrerverState({ autoBfbanKick: v })} />\n            <h5 style={{ marginTop: \"30px\" }}>Auto kick players with constant high ping</h5>\n            <Switch checked={kickOnPingDisabled} name=\"Kick on high ping\" callback={(v) => { setKickOnPingDisabled(v); (!v) ?changeSrerverState({ autoPingKick: 0 }) : changeSrerverState({ autoPingKick: 200 })  }} />\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") changeSrerverState({ autoPingKick: parseInt(e.target.value) })\n                        }\n                    }\n                }\n                value={(serverState) ? serverState.autoPingKick : \"\" }\n                name={\"High ping value\"}\n            />\n            <TextInput\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={(e) => changeSrerverState({ autoPingKickMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoPingKickMessage\")}\n                name={\"Auto ping msg\"}\n            />\n            <h5 style={{ marginTop: \"8px\" }}>Mimimum amount of players for autokick to start working (0 for always)</h5>\n            <TextInput\n                type=\"number\"\n                disabled={true/*!allowedTo || !kickOnPingDisabled*/}\n                callback={\n                    (e) => {\n                        console.log(e.target.value < 0);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") {\n                                changeSrerverState({ minAutoPingKick: parseInt(e.target.value) })\n                            }\n                        }\n                    }\n                }\n                defaultValue={getServerValue(\"minAutoPingKick\")}\n                value={(serverState) ? serverState.minAutoPingKick : \"\" }\n                name={\"Minimum amount of players\"}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply changes\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\nfunction ServerSettings(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    useEffect(() => {\n        if (props.server) {\n            const { serverName, serverAlias } = props.server;\n            const originalServerState = { serverName, serverAlias };\n            if (serverState === null) {\n                setServerState(originalServerState);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                setCanApply(newCanApply);\n            }\n\n        }\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>Server settings</h2>\n\n            <h5 style={{ marginTop: \"8px\" }}>Change Server Name</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverName: e.target.value })}\n                defaultValue={getServerValue(\"serverName\")}\n                name={\"Server Name\"}\n            />\n\n            <h5 style={{ marginTop: \"8px\" }}>Alias to use with a Discord bot. (Can be a server number, for example)</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverAlias: e.target.value })}\n                defaultValue={getServerValue(\"serverAlias\")}\n                name={\"Alias\"}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply changes\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction ServerKickPlayer(props) {\n\n    var { sid, eaid } = props;\n    const modal = useModal();\n\n    var [reason, setReason] = useState(\"\");\n    var [kickApplyStatus, setKickApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n\n    const KickPlayer = useMutation(\n        v => OperationsApi.kickPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid, reason }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                setKickApplyStatus(true);\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            onSuccess: () => {\n                setKickApplyStatus(null);\n                modal.close();\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (error, newTodo, context) => {\n                setKickApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setKickApplyStatus(null), 3000);\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>You are going to kick player {props.eaid}</h2>\n            <TextInput name=\"Reason\" callback={(e) => setReason(e.target.value)} />\n            <ButtonRow>\n                <Button status={kickApplyStatus} name=\"Kick him!\" disabled={reason === \"\"} callback={() => { KickPlayer.mutate({ sid, eaid, reason, playername: props.eaid }); history.push(`/server/${props.sid}/`); }} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (kickApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}\n\nfunction ServerBanPlayer(props) {\n    const modal = useModal();\n    var { sid, eaid } = props;\n\n    const history = useHistory();\n    const [reason, setReason] = useState(\"\");\n    const [banTime, setBanTime] = useState(0);\n    const [globalVsClassicBan, setGlobalVsClassicBan] = useState(false);\n\n    var [banApplyStatus, setBanApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    const { isError: userGettingError, data: user } = useQuery('user', () => OperationsApi.user);\n\n    const BanPlayer = useMutation(\n        v => OperationsApi.banPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n                modal.close();\n            },\n        }\n    );\n\n    const GlobalBanPlayer = useMutation(\n        v => OperationsApi.globalBanPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n\n            },\n        }\n    );\n\n    var gid = null;\n\n    if (user) {\n        user.permissions.isAdminOf.map(\n            group => {\n                for (let someSid of group.servers) {\n                    if (someSid === sid) {\n                        gid = group.id;\n                    }\n                }\n            }\n        )\n    }\n\n    const isDisabled =\n        reason === \"\" ||\n        banTime < 0 ||\n        banApplyStatus !== null ||\n        userGettingError || !user || gid == null;\n\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>You are going to ban player {props.eaid}</h2>\n            <h5>Enter a reason to ban this player.</h5>\n            <TextInput name=\"Reason\" callback={(e) => setReason(e.target.value)} />\n            <Switch value={globalVsClassicBan} name=\"Use Virtual Ban instead of classic ban list\" callback={ (v) => setGlobalVsClassicBan(v) } />\n            <h5>If you want to temporary ban him, specify time in<br /> hours below, or leave it 0 to make permament ban.<br />Not supported yet by V-Ban.</h5>\n            <TextInput type=\"number\" name=\"Ban time\" defaultValue={0} callback={(e) => setBanTime(e.target.value)} disabled={globalVsClassicBan} />\n            <ButtonRow>\n                <Button\n                    name=\"Ban!\"\n                    style={{ maxWidth: \"144px\" }}\n                    disabled={isDisabled}\n                    callback={() => {\n                        if (globalVsClassicBan) {\n                            GlobalBanPlayer.mutate({ gid, reason, name: props.eaid });\n                        } else {\n                            BanPlayer.mutate({ sid, eaid, reason, name: props.eaid, time: banTime });\n                        }\n                    }}\n                    status={banApplyStatus} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (banApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, GroupLogs, VBanList, GameStatsAd, Column, Card, Header, ButtonLink, ButtonRow, Button, UserStRow, Row, ServerRow, FakeUserStRow, TextInput, SmallButton, PageCard } from \"../components\";\n\n\nconst deleteIcon = (\n    <svg viewBox=\"0 0 24 24\" style={{ width: '16px' }}>\n        <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n    </svg>\n);\n\n\nexport function Group(props) {\n\n    var gid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n\n    const { error: groupError, data: groups } = useQuery('groupId' + gid, () => OperationsApi.getGroup(gid), { staleTime: 30000 });\n    const { error: userError, data: user } = useQuery('user', () => OperationsApi.user);\n\n\n    const removeAdmin = useMutation(\n        variables => OperationsApi.removeGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins = old.data[0].admins.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const removeServer = useMutation(\n        variables => OperationsApi.removeServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, sid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers = old.data[0].servers.filter(server => server.id !== sid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n\n    const removeOwner = useMutation(\n        variables => OperationsApi.removeGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners = old.data[0].owners.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n    var group = (groups && groups.data && groups.data.length > 0) ? groups.data[0] : null;\n    const [listing, setListing] = useState(\"servers\");\n    const [settingsListing, setSettingsListing] = useState(\"account\");\n\n    const catListing = {\n        owners: <GroupOwners group={group} user={user} gid={gid} onDelete={removeOwner} />,\n        admins: <GroupAdmins group={group} user={user} gid={gid} onDelete={removeAdmin} />,\n        servers: <GroupServers group={group} user={user} gid={gid} onDelete={removeServer} />,\n        vbanlist: <VBanList user={user} gid={gid} />,\n        grouplogs: <GroupLogs gid={gid} />,\n    }\n\n\n    const catSettings = {\n        account: <GroupServerAccount gid={gid} user={user} group={group} />,\n        discord: <GroupDiscordSettings gid={gid} user={user} group={group} />,\n        danger: <GroupDangerZone gid={gid} user={user} group={group} />,\n    }\n\n    const pageCycle = [\n        {\n            name: \"Servers\",\n            callback: () => setListing(\"servers\"),\n        },\n        {\n            name: \"Admins\",\n            callback: () => setListing(\"admins\"),\n        },\n        {\n            name: \"Owners\",\n            callback: () => setListing(\"owners\"),\n        },\n        {\n            name: \"VBan list\",\n            callback: () => setListing(\"vbanlist\"),\n        },\n        {\n            name: \"Group logs\",\n            callback: () => setListing(\"grouplogs\"),\n        }\n    ]\n\n    const settingsCycle = [\n        {\n            name: \"Server account\",\n            callback: () => setSettingsListing(\"account\"),\n        },\n        {\n            name: \"Discord integration\",\n            callback: () => setSettingsListing(\"discord\"),\n        },\n        {\n            name: \"Danger zone\",\n            callback: () => setSettingsListing(\"danger\"),\n        },\n    ];\n\n    if (groupError || userError || (groups && groups.data && groups.data.length === 0)) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>Group</h2>\n                    </Header>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>Group name - {(group) ? group.groupName : \"pending..\"}</h2>\n                        <p style={{ marginBottom: 0 }}>Identity {gid}</p>\n                    </Card>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={settingsCycle} >\n                        {catSettings[settingsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={pageCycle} >\n                        {catListing[listing]}\n                    </PageCard>\n                 </Column>\n            </Row>\n        </>\n    );\n\n\n}\n\nfunction GroupAdmins(props) {\n\n    const modal = useModal();\n\n    var hasRights = false;\n    const [selected, setSelected] = useState([]);\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let adminList;\n    if (props.group) {\n        adminList = [...props.group.admins];\n        adminList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeAdmins = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>Admin role can manage servers. You need to have at least <br />Owner role to add new admins.</h5>\n        {\n            (isSelected) ? (<h5><b>You selected {selected.length} admins.</b></h5>) : (<h5>Select admins to remove them.</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name=\"Add Admin\" callback={() => modal.show(<AddGroupAdmin gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name=\"Not allowed\" content=\"Add Admin\" />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name=\"Remove Selected Admins\" callback={removeAdmins} />\n                ) : (\n                    <Button disabled={true} name=\"Remove admins\" />\n                )\n            }\n        </ButtonRow>\n        {\n            (props.group) ? (\n                adminList.map((admin, i) => (\n                    <UserStRow user={admin} callback={(v) => changeSelected(v, admin.id)} key={admin.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n    </>;\n}\n\n\nfunction GroupServers(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    return <>\n        <h5>Servers instances added to current group. You need to have <br />Owner role in order to add new servers.</h5>\n        {\n            (props.group) ? (\n                props.group.servers.map((server, i) => (\n                    <ServerRow server={server} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, sid: server.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name=\"Add Server\" to={\"/group/\" + props.gid + \"/add/server\"} />\n                ) : (\n                    <Button disabled={true} name=\"Not allowed\" content=\"Add Server\" />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\nfunction GroupOwners(props) {\n\n    const modal = useModal();\n    const [selected, setSelected] = useState([]);\n\n    var hasRights = false;\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let ownerList;\n    if (props.group) {\n        ownerList = [...props.group.owners];\n        ownerList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeOwners = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>List of current group Owners. This role can add new Servers, <br />Admins and other owners. Be carefull with it!</h5>\n        {\n            (isSelected) ? (<h5><b>You selected {selected.length} owners.</b></h5>) : (<h5>Select owners to remove them.</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name=\"Add Owner\" callback={() => modal.show(<AddGroupOwner gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name=\"Not allowed\" content=\"Add Owner\" />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name=\"Remove Owners\" callback={removeOwners} />\n                ) : (\n                    <Button disabled={true} name=\"Select Owners to remove\" />\n                )\n            }\n        </ButtonRow>\n        {\n            (ownerList) ? (\n                ownerList.map((owner, i) => (\n                    <UserStRow user={owner} callback={(v) => changeSelected(v, owner.id)} key={owner.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        \n    </>;\n}\n\n\nfunction GroupServerAccount(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [sid, setSid] = useState(\"\");\n    const [remid, setRemid] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n        if (props.group) {\n            if (remid !== props.group.cookie.remid)\n                setRemid(props.group.cookie.remid);\n            if (sid !== props.group.cookie.sid)\n                setSid(props.group.cookie.sid);\n        } \n    }, [props.group]);\n\n    const editCookies = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>\n                Account manager, that will administrate your servers.<br />\n                These cookies can be found at <i>accounts.ea.com</i>\n            </h5>\n            {(props.group && !props.group.validCookie) ? (\n                <p style={{ marginTop: \"0px\", border: \"1px solid var(--color-second)\", padding: \"10px 22px\", borderRadius: \"8px\", color: \"#FF7575\", background: \"var(--color-container-v2)\" }}>\n                    Error: The cookies you are using right now are invalid!\n                </p>\n            ) : \"\"}\n            \n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setRemid(e.target.value)} defaultValue={remid} name={\"Remid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Reminder cookies\n                </p>\n            </Row>\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setSid(e.target.value)} defaultValue={sid} name={\"Sid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Session cookies\n                </p>\n            </Row>\n            {\n                (props.group && (sid !== props.group.cookie.sid || remid !== props.group.cookie.remid)) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editCookies.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        cookie: { sid, remid }\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ): \"\"\n            }\n        </>\n    );\n}\n\nfunction GroupDiscordSettings(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [adminId, setAdminId] = useState(\"\");\n    const [modId, setModId] = useState(\"\");\n    const [serverId, setServerId] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n        if (props.group) {\n\n            if (serverId !== props.group.discordGroupId)\n                setServerId(props.group.discordGroupId);\n\n            if (modId !== props.group.discordModRoleId)\n                setModId(props.group.discordModRoleId);\n\n            if (adminId !== props.group.discordAdminRoleId)\n                setAdminId(props.group.discordAdminRoleId);\n\n        }\n    }, [props.group]);\n\n    const editDiscordDetails = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <> \n            <GameStatsAd />\n            <h5 style={{ marginTop: \"8px\" }}>\n                With our bot, you can allow admins to controll your servers<br /> by using commands with ! prefix. \n            </h5>\n            <h5>\n                for a list of commands that you can use in Discord, use the \"!bfadmin\" command.\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setServerId(e.target.value)} defaultValue={serverId} name={\"Discord Server\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Your server Discord ID\n                </p>\n            </Row>\n            <h5 style={{ marginTop: \"8px\" }}>\n                Every person with that role id can use<br /> discord commands to contol the server.\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setAdminId(e.target.value)} defaultValue={adminId} name={\"Admin Discord ID\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Id of Admin role\n                </p>\n            </Row>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setModId(e.target.value)} defaultValue={modId} name={\"Mod DIscord ID\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    Id of Moderator role, moderators can only kick players\n                </p>\n            </Row>\n            {\n                (props.group && (serverId !== props.group.discordGroupId || modId !== props.group.discordModRoleId || adminId !== props.group.discordAdminRoleId)) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editDiscordDetails.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        discordGroupId: serverId,\n                                        discordModRoleId: modId,\n                                        discordAdminRoleId: adminId\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction GroupDangerZone(props) {\n\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [groupName, setGroupName] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n\n        if (props.group && groupName !== props.group.groupName) {\n            setGroupName(props.group.groupName);    \n        }\n\n    }, [props.group]);\n\n    const editGroupName = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>You can change the name of current Group.</h5>\n            <TextInput disabled={!allowedTo} callback={(e) => setGroupName(e.target.value)} defaultValue={groupName} name={\"Group name\"} />\n            {\n                (props.group && (groupName !== props.group.groupName)) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply changes\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editGroupName.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        groupName,\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n            <h5 style={{ marginTop: \"8px\" }}>Once you delete a group, it will remove all the servers,<br /> server account and users used in it.</h5>\n            <ButtonRow>\n                <ButtonLink style={{ color: \"#FF7575\"}} name=\"Delete Group\" to={`/group/${props.gid}/delete/`} disabled={!allowedTo} />\n            </ButtonRow>\n        </>\n    );\n}\n\nexport function AddGroupOwner(props) {\n    var gid = props.gid;\n\n    const [nickname, setNickname] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupOwnerExecute = useMutation(\n        variables => OperationsApi.addGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n                \n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n\n            <h2>Add new Owner</h2>\n            <TextInput name=\"Nickname (any, will be auto-updated)\" callback={(e)=>setNickname(e.target.value)}/>\n            <TextInput name=\"Discord UID\" callback={(e) => setUid(e.target.value) }/>\n            <ButtonRow>\n                <Button name=\"Add Owner\" callback={() => { AddGroupOwnerExecute.mutate({ gid, uid, nickname }); props.callback();  }} />\n            </ButtonRow>\n\n        </>\n    );\n\n}\n\nexport function AddGroupAdmin(props) {\n    var gid = props.gid;\n\n    const [addAdminState, changeState] = useState({ uid: \"\", nickname: \"\", canAdd: false });\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupAdminExecute = useMutation(\n        variables => OperationsApi.addGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const updateState = (values) => {\n        var newState = {\n            ...addAdminState,\n            ...values\n        };\n        newState.canAdd = newState.uid !== \"\";\n        changeState(newState);\n    }\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>Add new Admin</h2>\n            <TextInput name=\"Nickname (any, will be auto-updated)\" callback={(e) => updateState({nickname: e.target.value}) } />\n            <TextInput name=\"Discord UID\" callback={(e) => updateState({uid: e.target.value}) } />\n            <ButtonRow>\n                <Button name=\"Add Admin\" disabled={!addAdminState.canAdd} callback={() => { AddGroupAdminExecute.mutate({ gid, uid: addAdminState.uid, nickname: addAdminState.nickname }); props.callback(); }} />\n            </ButtonRow>\n        </>\n    );\n\n}\n\n\nexport function AddGroup(props) {\n\n    const [addGroupState, changeState] = useState({\n        variables: {\n            groupName: \"\",\n            discordId: \"\",\n            adminRole: \"\",\n            modRole: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        roleDisplay: false,\n        canAdd: false\n    });\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const AddNewGroupExecute = useMutation(\n        variables => OperationsApi.addGroup(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                await queryClient.cancelQueries('devGroups');\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n                history.push(\"/\");\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.refetchQueries('devGroups');\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.roleDisplay = (newVars.discordId !== \"\");\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.groupName.length > 2);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Create new Group</h2>\n                    \n                </Header>\n                <Card>\n                    <h5>Create a new group to manage your community servers</h5>\n                    {/*<h2>Create a new group to manage your community servers</h2>*/}\n                    <TextInput name=\"Name\" callback={(e) => { checkInputVariables({ groupName: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Optionaly, you can add your discord server, to integrate server tools\n                    </h5>\n                    <TextInput name=\"Discord Server ID\" callback={(e) => { checkInputVariables({ discordId: e.target.value }) }} />\n                    <TextInput name=\"Mod role ID\" disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ modRole: e.target.value }) }} />\n                    <TextInput name=\"Admin role ID\" disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ adminRole: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Every group need to be assigned special account with certain requirments: <br />\n                        It should be a BF1 server moderator (owner access not required)<br />\n                        This account shouldn't be used anywhere else, otherwise it will lead in errors<br />\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Session cookies can be found at <i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name=\"SID cookie\" type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Reminder session cookies can be found at <i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name=\"REMID cookie\" type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        By pressing this button, you agree to give <br />server manager tool access to the account.\n                    </h5>\n                    <ButtonRow>\n                        <Button name=\"Create group\" disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => AddNewGroupExecute.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function DeleteGroup(props) {\n\n    var thisGid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const DeleteGroupExecute = useMutation(\n        variables => OperationsApi.removeGroup(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('devGroups')\n                // Snapshot the previous value\n                const previousGroups = queryClient.getQueryData('devGroups')\n                // Optimistically update to the new value\n                queryClient.setQueryData('devGroups', old => {\n                    if (old) {\n                        old.data = old.data.filter(group => group.id !== gid);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroups, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('devGroups', context.previousGroups)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('devGroups')\n            },\n        }\n    );\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Delete Group</h2>\n                </Header>\n                <Card>\n                    <h2>Danger zone</h2>\n                    <p>Are you sure you want to delete this group?</p>\n                    <ButtonRow>\n                        <ButtonLink name=\"Oh, no!\" to={\"/group/\" + thisGid} />\n                        <Button name=\"Yes, delete\" callback={() => { DeleteGroupExecute.mutate({ gid: thisGid }); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function AddGroupServer(props) {\n    var gid = props.match.params.gid;\n\n    var name = \"\", alias = \"\";\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupServerExecute = useMutation(\n        variables => OperationsApi.addGroupServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async({ gid, name, alias }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers.push({\n                        \"addedAt\": UTCNow,\n                        \"id\": null,\n                        \"name\": name\n                    });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Add new Server</h2>\n                </Header>\n                <Card>\n                    <h2>Group Server</h2>\n                    <TextInput name=\"Server name\" callback={(e) => { name = e.target.value }} />\n                    <TextInput name=\"Alias (optional)\" callback={(e) => { alias = e.target.value; }} />\n                    <ButtonRow>\n                        <Button name=\"Add Server\" callback={() => { AddGroupServerExecute.mutate({ gid, alias, name }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function EditGroup(props) {\n    return (<></>);\n}\n\nexport function MakeOps(props) {\n   \n    const [addGroupState, changeState] = useState({\n        variables: {\n            server: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        canAdd: false\n    });\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const SetupOperations = useMutation(\n        variables => OperationsApi.setupOps(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.server.length > 1);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>Setup Operations Gamemode</h2>\n                </Header>\n                <Card>\n                    <h5>\n                        Setup operations gamemode on your server. <br />Note, that you will lose in-game admin panel!<br /> \n                        Make sure to add server into this pannel and check it.\n                    </h5>\n                    <TextInput name=\"Server name\" callback={(e) => { checkInputVariables({ server: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Server <b>owner</b> cookies.\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Session cookies can be found at <i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name=\"SID cookie\" type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        Reminder session cookies can be found at <i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name=\"REMID cookie\" type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        By pressing this button, you agree to give <br />server manager tool access to the account.\n                    </h5>\n                    <ButtonRow>\n                        <Button name=\"Make Operations\" disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => SetupOperations.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport Account from \"./Account\";\nimport { Developer } from \"./Developer\";\nimport { Server } from \"./Server\";\nimport { Group, AddGroupOwner, EditGroup, AddGroupAdmin, AddGroup, DeleteGroup, AddGroupServer, MakeOps } from \"./Group\";\n\n//import ABSwitch from \"../testing/ABtesting\";\n\nexport default function Views(props) {\n    return (\n        <Switch>\n\n            <Route exact path=\"/account/\" component={Account} />\n\n            <Route exact path=\"/server/:sid/\" component={Server} />\n\n            <Route exact path=\"/group/new/\" component={AddGroup} />\n            <Route exact path=\"/group/:gid/\" component={Group} />\n\n            <Route exact path=\"/group/:gid/add/server\" component={AddGroupServer} />\n            <Route exact path=\"/group/:gid/add/admin/\" component={AddGroupAdmin} />\n            <Route exact path=\"/group/:gid/add/owner/\" component={AddGroupOwner} />\n\n            <Route exact path=\"/group/:gid/edit/\" component={EditGroup} />\n            <Route exact path=\"/group/:gid/delete\" component={DeleteGroup} />\n\n            <Route exact path=\"/dev/\" component={Developer} />\n\n            <Route exact path=\"/makeops/\" component={MakeOps} />\n\n        </Switch>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\n\nimport { MainPageComponent } from \"../components\";\n\nexport default function Main() {\n\n    const { isError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    if (!isLoading && !isError && user && user.auth.signedIn) {\n        return <Redirect to=\"/account/\" />\n    }\n\n    return (\n        <MainPageComponent />\n    );\n}","\nimport React from \"react\";\nimport { HashRouter, useLocation, Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './App.css';\nimport './fade.css';\n\nimport Views from \"./views\";\nimport Main from \"./views/Main\";\nimport { createHashHistory } from 'history';\nimport { Sidebar, PageContainer, PageColumn, ModalProvider } from \"./components\";\n\n\nexport const history = createHashHistory();\n\nexport const APP_VERSION = \"1.0.3\";\n\nfunction App() {\n\n    let location = useLocation();\n\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <ModalProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Main} />\n                        <Route>\n                            \n                            {/*<TopBar />*/}\n                            <Sidebar />\n                            <TransitionGroup component={PageContainer}>\n                                <CSSTransition key={location.hash} classNames=\"fade\" timeout={200}>\n                                    <PageColumn>\n                                        <Views />\n                                    </PageColumn>\n                                </CSSTransition>\n                            </TransitionGroup>\n                            \n                        </Route>\n                    </Switch>\n                </ModalProvider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\n// Browser rendering\n\nReactDOM.render(\n\n    <React.StrictMode> \n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}