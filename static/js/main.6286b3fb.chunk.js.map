{"version":3,"sources":["components/Buttons.module.css","components/Group.module.css","components/Sidebar.module.css","components/User.module.css","components/Card.module.css","components/MainPage.module.css","components/TopBar.module.css","components/Server.module.css","components/Status.module.css","components/Flex.module.css","components/PageContainer.module.css","components/Header.module.css","JsonApi.js","api.js","components/PageContainer.js","testing/ABtesting.js","components/Sidebar.js","components/Status.js","components/Buttons.js","components/Flex.js","components/Card.js","components/Header.js","components/User.js","locales/config.js","components/Group.js","components/MainPage.js","components/Server.js","views/Account.js","views/Developer.js","views/Server.js","views/Group.js","views/index.js","views/Main.js","App.js","index.js"],"names":["module","exports","endPoints","dev","prod","OperationsApi","asyncUser","this","logoutAndChangeUser","user","a","fetchMethod","getUserInfo","sid","playername","reason","postJsonMethod","name","gid","map","time","toString","team","getJsonMethod","devGroups","Error","groupName","discordId","modRole","adminRole","remid","type","value","answer","error","message","uid","nickname","alias","server","game","data","isWorking","window","location","constructApiUrl","method","params","paramStr","s","fetch","credentials","options","body","JSON","stringify","headers","errorHandler","postMethod","response","then","result","json","length","spawnError","code","defaultUser","discord","discriminator","avatar","auth","inGuild","isAdmin","isDeveloper","isOwner","signedIn","hasOwnProperty","PageContainer","props","className","styles","children","PageColumn","keys","rollout","getChannel","storageKey","localStorage","storageItemTest","getItem","testValue","Math","floor","random","setItem","TopSidebar","to","title","src","Logo","PageLink","activeClassName","PageLinkActive","content","PageButton","target","rel","href","onClick","AddIcon","viewBox","sideIcon","fill","d","WrenchIcon","Sidebar","A","B","key","useQuery","userError","isLoading","devLink","accountLink","logoutLink","groupLinks","history","useHistory","queryClient","useQueryClient","logoutExecutor","useMutation","v","logout","onMutate","cancelQueries","prevUser","getQueryData","setQueryData","old","push","onSettled","variables","context","invalidateQueries","devOptionsContent","addGroupContent","i","switchingTest","mutate","permissions","isAdminOf","group","id","style","display","flexGrow","flexDirection","overflowY","marginBottom","GroupLinks","paddingLeft","fontSize","APP_VERSION","LoadingIcon","loadingIcon","ErrorIcon","errorIcon","Status","notEnabled","undefined","status","Button","background_color","width","button","disabled","callback","ButtonLink","ButtonRow","buttonRow","TextInput","defaultValue","placeholder","onReset","onChange","SmallButton","_","vars","Switch","useState","checkedSwitch","clickSwitch","switchTheSwitch","newVal","useEffect","checked","switchClassName","SwitchActive","SwitchRow","isChecked","onKeyPress","e","charCode","role","tabIndex","SwitchInner","SwitchOn","SwitchOff","SwitchHandle","ChoosePageButtons","active","setActive","ChoosePageButtonHolder","buttons","ChoosePageButtonActive","ChoosePageButton","IconSelected","iconSelect","IconNotSelected","SelectableRow","React","selected","setSelcted","selectableRowSelected","selectableRow","p","Column","Row","Card","card","CardRow","PageCard","Tag","ModalControll","isShown","show","close","ModalContext","createContext","useModal","useContext","Modal","controller","modal","modalDisabled","modalBackground","modalContent","ModalProvider","controllerState","setControllerState","Provider","Header","UserRow","alt","Avatar","DiscordName","DiscordNum","secure","xmlns","UserStRow","dateAdded","Date","parse","addedAt","dateString","getDate","getMonth","String","getHours","padStart","getMinutes","DiscordId","DateAdded","FakeUserStRow","UserRowSt","resources","translation","translationEN","i18n","use","initReactI18next","LanguageDetector","init","fallbackLng","GroupRow","t","useTranslation","GroupName","ServerRow","serverBadgePending","serverStatus","serverBadgeErr","serverBadgeOk","GameStatsAd","gameStatsAd","VBanList","getAutoBanList","isError","banList","searchWord","setSearchWord","unbanVGlobalBan","globalUnbanPlayer","previousBanList","filter","player","playerName","onError","err","newTodo","number","BanListing","includes","GlobalBanRow","BanRow","BanDisplayName","banReason","banReasonDetailed","globalUnban","GroupLogs","getGroupLogs","logList","logs","sort","b","timeStamp","maxHeight","marginTop","log","LogRow","Array","from","EmptyLogRow","datetime","action","getUTCDate","getFullYear","logRow","logAdmin","adminName","logReason","logTime","ListItem","header","LoginButton","MainPageComponent","MainPage","MainPageCard","titleBlock","titleContent","listing","SmallText","PlayerStatsModal","r","stats","statsBlock","skill","rank","killsPerMinute","winPercent","Accuracy","headshots","killDeath","ServerRotation","info","server_status","liveUpdate","update_timestamp","timestamp","getSeconds","rotationId","setRotationId","ServerInfoColumn","ServerDescriptionRow","serverImage","url","GameInfo","ServerName","prefix","mode","serverInfo","inQue","rotate","SwitchGame","rotation","index","mapname","serverStatusArray","serverBadge","PlayerInfo","players","moveTeam","PlayerRow","PlayerIndex","PlayerLevel","PlayerName","platoon","PlayerNone","PlayerButtons","PlayerButton","onMove","kickModal","eaid","banModal","PlayerPing","ping","ServerInfoHolder","ServerInfoRow","BanList","getBanList","borderCollapse","position","top","displayName","admin","banned_until","ban_timestamp","FireStarter","getStarterList","starterList","amount","StarterRow","playerId","LogList","getServerLogs","logIcon","logAction","logPlayer","toPlayer","logReasonDetailed","VipList","getVipList","vipList","VipHeader","alignItems","VipRow","VipName","VipRowImg","Account","userLine","Developer","getDevGroups","groups","g","Server","serverCard","playerNicknameTeam","match","getServer","getServerGame","gameError","runningGame","playerList","playerInGame","setPlayerName","addVipStatus","changeAddVipStatus","removeVipStatus","changeRemoveVipStatus","unbanStatus","changeUnbanStatus","tabsListing","setTabsListing","UnbanPlayer","unbanPlayer","RemoveVip","removeVip","AddVip","addVip","movePlayer","previousGroup","find","serverTabs","catTabs","changeRotation","banlist","viplist","firestarter","loglist","protection","ServerAutomation","settings","ServerSettings","isOpsMode","f1","f2","ServerBanPlayer","ServerKickPlayer","giveVip","marginRight","allowedTo","kickOnPingDisabled","setKickOnPingDisabled","serverState","setServerState","canApply","setCanApply","applyStatus","setApplyStatus","autoBanKick","autoBfbanKick","autoGlobalBanMessage","autoPingKick","originalServerState","autoPingKickMessage","newCanApply","changeSrerverState","editServerSettings","editServer","onSuccess","setTimeout","getServerValue","marginLeft","console","parseInt","minAutoPingKick","errorUpdating","setError","serverName","serverAlias","alignSelf","opacity","setReason","kickApplyStatus","setKickApplyStatus","KickPlayer","kickPlayer","banTime","setBanTime","globalVsClassicBan","setGlobalVsClassicBan","banApplyStatus","setBanApplyStatus","userGettingError","BanPlayer","banPlayer","GlobalBanPlayer","globalBanPlayer","servers","isDisabled","maxWidth","deleteIcon","Group","getGroup","staleTime","groupError","removeAdmin","removeGroupAdmin","now","toUTCString","admins","removeServer","removeOwner","removeGroupOwner","owners","setListing","settingsListing","setSettingsListing","catListing","GroupOwners","onDelete","GroupAdmins","GroupServers","vbanlist","grouplogs","catSettings","account","GroupServerAccount","GroupDiscordSettings","danger","GroupDangerZone","pageCycle","settingsCycle","hasRights","setSelected","adminList","isSelected","AddGroupAdmin","o","item","changeSelected","ownerList","AddGroupOwner","owner","setSid","setRemid","cookie","editCookies","editGroup","validCookie","border","padding","borderRadius","color","background","margin","adminId","setAdminId","modId","setModId","serverId","setServerId","discordGroupId","discordModRoleId","discordAdminRoleId","editDiscordDetails","setGroupName","editGroupName","setNickname","setUid","AddGroupOwnerExecute","addGroupOwner","UTCNow","canAdd","addAdminState","changeState","AddGroupAdminExecute","addGroupAdmin","updateState","values","newState","AddGroup","roleDisplay","addGroupState","AddNewGroupExecute","addGroup","refetchQueries","checkInputVariables","newVariables","newGroupState","newVars","DeleteGroup","thisGid","DeleteGroupExecute","removeGroup","previousGroups","AddGroupServer","AddGroupServerExecute","addGroupServer","EditGroup","MakeOps","SetupOperations","setupOps","Views","exact","path","component","Main","createHashHistory","App","useLocation","TransitionGroup","CSSTransition","classNames","timeout","hash","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.6286b3fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRow\":\"Buttons_buttonRow__dKjZj\",\"button\":\"Buttons_button__1VKNK\",\"container\":\"Buttons_container__np2ep\",\"dropdown\":\"Buttons_dropdown__13J8f\",\"ul\":\"Buttons_ul__3tJo8\",\"li\":\"Buttons_li__1sX4Q\",\"TextInput\":\"Buttons_TextInput__35GbL\",\"SmallButton\":\"Buttons_SmallButton__3rzhd\",\"Switch\":\"Buttons_Switch__39fTc\",\"SwitchActive\":\"Buttons_SwitchActive__2ViHx\",\"SwitchInner\":\"Buttons_SwitchInner__3LnS9\",\"SwitchHandle\":\"Buttons_SwitchHandle__2b8wJ\",\"SwitchOff\":\"Buttons_SwitchOff__3Oaf-\",\"SwitchOn\":\"Buttons_SwitchOn__1_Jsb\",\"SwitchRow\":\"Buttons_SwitchRow__3WA6c\",\"ChoosePageButton\":\"Buttons_ChoosePageButton__1-OpM\",\"ChoosePageButtonActive\":\"Buttons_ChoosePageButtonActive__13GmV\",\"ChoosePageButtonHolder\":\"Buttons_ChoosePageButtonHolder__VfFyz\",\"selectableRow\":\"Buttons_selectableRow__V-YSj\",\"selectableRowSelected\":\"Buttons_selectableRowSelected__AlZEt\",\"iconSelect\":\"Buttons_iconSelect__EU1hH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupRow\":\"Group_GroupRow__1Ew1c\",\"GroupName\":\"Group_GroupName__3G6eX\",\"gameStatsAd\":\"Group_gameStatsAd__2Eob_\",\"logAdmin\":\"Group_logAdmin__1TOK4\",\"logPlayer\":\"Group_logPlayer__1Mapx\",\"logAction\":\"Group_logAction__2UECK\",\"logReason\":\"Group_logReason__8BHZZ\",\"logRow\":\"Group_logRow__YNVWa\",\"BanRow\":\"Group_BanRow__v5SxK\",\"banReasonDetailed\":\"Group_banReasonDetailed__3HFsw\",\"BanDisplayName\":\"Group_BanDisplayName__15HMw\",\"banReason\":\"Group_banReason__1ofIN\",\"globalUnban\":\"Group_globalUnban__v-kk5\",\"serverBadgeErr\":\"Group_serverBadgeErr__1dzxV\",\"serverBadgeOk\":\"Group_serverBadgeOk__2BwfX\",\"serverBadgePending\":\"Group_serverBadgePending__3AuNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLink\":\"Sidebar_PageLink__3fxKj\",\"PageButton\":\"Sidebar_PageButton__3ug-M\",\"PageLinkActive\":\"Sidebar_PageLinkActive___nnPr\",\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"Logo\":\"Sidebar_Logo__2HFo5\",\"TopSidebar\":\"Sidebar_TopSidebar__BQCyG\",\"sideIcon\":\"Sidebar_sideIcon__72aBF\",\"GroupLinks\":\"Sidebar_GroupLinks__8lkHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserRow\":\"User_UserRow__1fzJH\",\"Avatar\":\"User_Avatar__3XgeX\",\"DiscordName\":\"User_DiscordName__j-kJJ\",\"DiscordNum\":\"User_DiscordNum__odqe3\",\"secure\":\"User_secure__ADMpb\",\"UserRowSt\":\"User_UserRowSt__D7e-x\",\"DiscordId\":\"User_DiscordId__CJ0BY\",\"DateAdded\":\"User_DateAdded__1FZZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"CardRow\":\"Card_CardRow__1NbF3\",\"PageCard\":\"Card_PageCard__3UgmB\",\"Tag\":\"Card_Tag__gwAfh\",\"modalDisabled\":\"Card_modalDisabled__1amMq\",\"modal\":\"Card_modal__2zuep\",\"modalContent\":\"Card_modalContent__QUirv\",\"modalBackground\":\"Card_modalBackground__i6ZMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPageCard\":\"MainPage_MainPageCard__20zHQ\",\"MainPage\":\"MainPage_MainPage__2QR_f\",\"titleBlock\":\"MainPage_titleBlock__3Cu7O\",\"listing\":\"MainPage_listing__1JWXi\",\"ListItem\":\"MainPage_ListItem__1n0An\",\"titleContent\":\"MainPage_titleContent__QdrEG\",\"LoginButton\":\"MainPage_LoginButton__3Flzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"TopBar_bar__3bwJz\",\"barWrap\":\"TopBar_barWrap__13cVT\",\"mainPage\":\"TopBar_mainPage__28WNk\",\"logo\":\"TopBar_logo__3pe6W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SmallText\":\"Server_SmallText__3uOYG\",\"ServerInfoColumn\":\"Server_ServerInfoColumn__35hJK\",\"ServerInfoRow\":\"Server_ServerInfoRow__2Aa7V\",\"serverImage\":\"Server_serverImage__3m2nE\",\"ServerName\":\"Server_ServerName__2irVE\",\"GameInfo\":\"Server_GameInfo__X3Hhq\",\"ServerDescriptionColumn\":\"Server_ServerDescriptionColumn__3pNJs\",\"ServerDescriptionRow\":\"Server_ServerDescriptionRow__12wsx\",\"SwitchGame\":\"Server_SwitchGame__3MjHo\",\"SettingsRow\":\"Server_SettingsRow__2yzpg\",\"SmallInput\":\"Server_SmallInput__1fZ_Z\",\"PlayerRow\":\"Server_PlayerRow__29Z8B\",\"PlayerName\":\"Server_PlayerName__3tLfO\",\"PlayerIndex\":\"Server_PlayerIndex__37b5y\",\"PlayerPing\":\"Server_PlayerPing__31qCm\",\"PlayerLevel\":\"Server_PlayerLevel__1Z7Ur\",\"PlayerNone\":\"Server_PlayerNone__2swFS\",\"playerBackgroundInfo\":\"Server_playerBackgroundInfo__27qMt\",\"PlayerButtons\":\"Server_PlayerButtons__3dQvb\",\"PlayerButton\":\"Server_PlayerButton__1b5UO\",\"serverStatus\":\"Server_serverStatus__2bq0e\",\"serverStatusOk\":\"Server_serverStatusOk__g8kKz\",\"serverStatusErr\":\"Server_serverStatusErr__3kLiy\",\"BanRow\":\"Server_BanRow__2CH-s\",\"VipRow\":\"Server_VipRow__11VYU\",\"BanDisplayName\":\"Server_BanDisplayName__1mYLa\",\"VipRowImg\":\"Server_VipRowImg__2uQKq\",\"VipName\":\"Server_VipName__1vh7h\",\"VipHeader\":\"Server_VipHeader__17wNH\",\"logAdmin\":\"Server_logAdmin__h3EXT\",\"logPlayer\":\"Server_logPlayer__3ubbb\",\"logAction\":\"Server_logAction__chE4g\",\"logReason\":\"Server_logReason__1SNMU\",\"logRow\":\"Server_logRow__3r-zZ\",\"logReasonDetailed\":\"Server_logReasonDetailed__uRKTP\",\"logIcon\":\"Server_logIcon__2eNHD\",\"serverBadgeErr\":\"Server_serverBadgeErr__3txr9\",\"serverBadgeOk\":\"Server_serverBadgeOk__1vnEH\",\"serverBadgePending\":\"Server_serverBadgePending__KFlxu\",\"serverBadge\":\"Server_serverBadge__2dEUL\",\"serverStatusArray\":\"Server_serverStatusArray__SklvZ\",\"liveUpdate\":\"Server_liveUpdate__2AkO3\",\"livePulse\":\"Server_livePulse__2PWwz\",\"liveUpdateText\":\"Server_liveUpdateText__3iOfu\",\"statsBlock\":\"Server_statsBlock__14xqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1LWe8\",\"loadingIcon\":\"Status_loadingIcon__3owGX\",\"Loading\":\"Status_Loading__v1uza\",\"errorIcon\":\"Status_errorIcon__2HXFb\",\"Shake\":\"Status_Shake__30h0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Flex_Column__3cQ9_\",\"Row\":\"Flex_Row__3SC-0\",\"Grow\":\"Flex_Grow__f7am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContainer\":\"PageContainer_PageContainer__1PlzU\",\"PageColumn\":\"PageContainer_PageColumn__3Qegy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3VoE2\"};","\nconst MODE = \"prod\";\n\nconst endPoints = {\n    dev: \"https://homedev.gametools.network/api/\",\n    prod: \"https://manager-api.gametools.network/api/\"\n}\n\nexport default class JsonClient {\n    constructor() {\n        this.isWorking = true;\n        this.user = this.getUserInfo();\n    }\n    openLoginPage() {\n        window.location = this.constructApiUrl(\"login\");\n    }\n    constructApiUrl(method, params) {\n        params = params || {};\n        let paramStr = \"\";\n        for (let s in params) {\n            paramStr += s + \"=\" + params[s] + \"&\";\n        }\n        if (paramStr !== \"\") paramStr = \"?\" + paramStr;\n        const apiEP = endPoints[MODE];\n        return apiEP + method + paramStr;\n    }\n    async fetchMethod(method, params) {\n        return fetch(this.constructApiUrl(method, params), {\n            credentials: \"include\"\n        });\n    }\n    async postMethod(method, params) {\n        return fetch(this.constructApiUrl(method, {}), params);\n    }\n    /// Returns Promise\n    postJsonMethod(method, params) {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(params),\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return this.errorHandler(this.postMethod(method, options));\n    }\n    /// Returns Promise\n    getJsonMethod(method, params) {\n        return this.errorHandler(this.fetchMethod(method, params));\n    }\n    async errorHandler(response) {\n        return response.then(\n            result => {\n                return result.json().then(\n                    json => {\n                        if (\"error\" in json) {\n                            throw json.error;\n                        }\n                        if (\"data\" in json) {\n                            if (json.data.length > 0) {\n                                if (\"error\" in json.data[0]) {\n                                    throw json.data[0].error;\n                                }\n                            }\n                        }\n                        return json;\n                    },\n                    error => this.spawnError(error, 600)\n                );\n            },\n            error => this.spawnError(error, response.code)\n        );\n    }\n    spawnError(error, code) {\n        throw {\n            \"error\": {\n                \"message\": error,\n                \"code\": code,\n            }\n        };\n    }\n    async getUserInfo() {\n        const defaultUser = {\n            discord: {\n            name: \"\",\n            discriminator: 0,\n            avatar: \"\"\n            },\n            auth: {\n                inGuild: false,\n                isAdmin: false,\n                isDeveloper: false,\n                isOwner: false,\n                signedIn: false\n            }\n        };\n        let response = await this.getJsonMethod(\"getinfo\");\n        if (!response.hasOwnProperty(\"error\")) {\n            return response;\n        }\n        return defaultUser;\n    }\n}","import JsonClient from \"./JsonApi\";\n\nexport class ApiProvider extends JsonClient {\n\n    logout() {\n        var asyncUser = this.logoutAndChangeUser();\n        this.user = asyncUser;\n    }\n\n    async logoutAndChangeUser() {\n        await this.fetchMethod(\"logout/\");\n        var user = await this.getUserInfo();\n        return user;\n    }\n\n    async kickPlayer({ sid, playername, reason }) {\n        return await this.postJsonMethod(\"changeplayer\", {\n            \"request\": \"kickPlayer\",\n            \"playername\": playername,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async globalBanPlayer({ name, reason, gid}) {\n        return await this.postJsonMethod(\"addautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": reason\n        });\n    }\n\n    async globalUnbanPlayer({ name, gid}) {\n        return await this.postJsonMethod(\"delautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": \"\"\n        });\n    }\n\n    async changeRotation({ sid, map }) {\n        return await this.postJsonMethod(\"changelevel\", {\n            \"mapnumber\": map,\n            \"serverid\": sid\n        });\n    }\n\n    async banPlayer({ name, reason, time, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"bantime\": time.toString(),\n            \"reason\": reason\n        }); \n    }\n\n    async unbanPlayer({ name, reason, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async addVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async removeVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async movePlayer({ sid, team, name }) {\n        return await this.postJsonMethod(\"moveplayer\", {\n            \"teamid\": team,\n            \"playername\": name,\n            \"serverid\": sid\n        });\n    }\n\n    async getBanList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"bannedList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getStarterList({ sid }) {\n        return await this.getJsonMethod(\"firestarters\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getAutoBanList({ gid }) {\n        return await this.getJsonMethod(\"autoban\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getVipList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"vipList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getServerLogs({ sid }) {\n        return await this.getJsonMethod(\"tailserverlog\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getGroupLogs({ gid }) {\n        return await this.getJsonMethod(\"tailuserlog\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getDevGroups() {\n        var devGroups = await this.getJsonMethod(\"devgroups\");\n        if (\"error\" in devGroups) {\n            throw Error(\"Error on server.\");\n        }\n        return devGroups;\n    }\n\n    async addGroup({ groupName, discordId, modRole, adminRole, sid, remid }) {\n        return await this.postJsonMethod(\"addgroup\", {\n            \"groupname\": groupName,\n            \"adminroleid\": adminRole,\n            \"discordid\": discordId,\n            \"modroleid\": modRole,\n            \"remid\": remid,\n            \"sid\": sid,\n        });\n    }\n\n    async removeGroup({ gid }) {\n        return await this.postJsonMethod(\"delgroup\", {\n            \"groupId\": gid,\n        });\n    }\n\n    async editGroup({ gid, type, value }) {\n        var answer = await this.postJsonMethod(\"editgroup\", {\n            \"groupid\": gid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n    async getGroup(gid) {\n        return await this.getJsonMethod(\"groups\", { \"groupid\": gid });\n    }\n\n    async addGroupOwner({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addowner\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupServer({ gid, name, alias }) {\n        return await this.postJsonMethod(\"addserver\", {\n            \"servername\": name,\n            \"serveralias\": alias,\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupAdmin({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addadmin\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupAdmin({ gid, uid }) {\n        return await this.postJsonMethod(\"deladmin\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupOwner({ gid, uid }) {\n        return await this.postJsonMethod(\"delowner\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async setupOps({ server, sid, remid }) {\n        return await this.postJsonMethod(\"makeoperations\", {\n            \"servername\": server,\n            \"sid\": sid,\n            \"remid\": remid,\n        });\n    }\n\n\n    async getServer(sid) {\n        return await this.getJsonMethod(\"server\", { \"serverid\": sid });\n    }\n\n    async getServerGame(sid) {\n        var game = await this.getJsonMethod(\"servers\", { \"serverid\": sid });\n        if (\"error\" in game.data[0]) {\n            throw Error(game.data[0].error);\n        } else {\n            return game;\n        }\n    }\n\n    async removeServer({ gid, sid }) {\n        return await this.postJsonMethod(\"delserver\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n        });\n    }\n\n    async renameServer({ name, sid }) {\n        return await this.postJsonMethod(\"renameserver\", {\n            \"serverid\": sid,\n            \"servername\": name,\n        });\n    }\n\n    async changeServerAlias({ gid, alias, sid }) {\n        return await this.postJsonMethod(\"serveralias\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n            \"serveralias\": alias,\n        });\n    }\n\n    async editServer({ sid, value }) {\n        var answer = await this.postJsonMethod(\"editserver\", {\n            \"serverid\": sid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n\n}\n\nexport const OperationsApi = new ApiProvider();","import React from \"react\";\nimport styles from \"./PageContainer.module.css\";\n\n\nexport function PageContainer(props) {\n    return (\n        <div className={styles.PageContainer}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport function PageColumn(props) {\n    return (\n        <div className={styles.PageColumn}>\n            {props.children}\n        </div>\n    );\n}\n","import rollout from \"../rollout.json\";\n\nconst fixedTest = null;\nconst keys = rollout[\"AB\"];\n\n// Switch for AB testing. Shows user A or B option to test new features\nexport default function ABSwitch(A, B, key) {\n    if (!(key in keys)) {\n        return A;\n    }\n    return switchingTest(A, B, getChannel());\n}\n\n// A or B channel\nexport function getChannel() {\n    const storageKey = 'TestAB';\n    if (fixedTest) {\n        return fixedTest;\n    }\n    if (localStorage) {\n        let storageItemTest = localStorage.getItem(storageKey);\n        if (storageItemTest) {\n            return storageItemTest;\n        } else {\n            const testValue = Math.floor(Math.random() * 10) % 2;\n            localStorage.setItem(storageKey, testValue);\n            return testValue;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction switchingTest(A, B, v) {\n    return (v === 1) ? B : A;\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./Sidebar.module.css\";\n\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\n\nfunction TopSidebar() {\n    return (\n        <div className={styles.TopSidebar}>\n            <Link to=\"/\" title=\"Main page\">\n                <img src=\"/release-logo.png\" className={styles.Logo} />\n            </Link>\n        </div>\n    );\n}\n\nfunction PageLink(props) {\n    return (\n        <div className={styles.PageLink}>\n            <NavLink to={props.to} activeClassName={styles.PageLinkActive} title={props.name}>{props.content || props.name}</NavLink>\n        </div>\n    );\n}\n\nfunction PageButton(props) {\n    return (\n        <a className={styles.PageButton} target=\"_blank\" rel=\"noopener noreferrer\" href={props.href} title={props.name}>\n            <span onClick={props.onClick}>{props.name}</span>\n        </a>\n    );\n}\n\nfunction AddIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>);\n}\n\nfunction WrenchIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M13.78 15.3L19.78 21.3L21.89 19.14L15.89 13.14L13.78 15.3M17.5 10.1C17.11 10.1 16.69 10.05 16.36 9.91L4.97 21.25L2.86 19.14L10.27 11.74L8.5 9.96L7.78 10.66L6.33 9.25V12.11L5.63 12.81L2.11 9.25L2.81 8.55H5.62L4.22 7.14L7.78 3.58C8.95 2.41 10.83 2.41 12 3.58L9.89 5.74L11.3 7.14L10.59 7.85L12.38 9.63L14.2 7.75C14.06 7.42 14 7 14 6.63C14 4.66 15.56 3.11 17.5 3.11C18.09 3.11 18.61 3.25 19.08 3.53L16.41 6.2L17.91 7.7L20.58 5.03C20.86 5.5 21 6 21 6.63C21 8.55 19.45 10.1 17.5 10.1Z\" />\n    </svg>);\n}\n\n\n\nexport function Sidebar(props) {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    var devLink = \"\", accountLink = \"\", logoutLink = \"\", groupLinks = \"\";\n\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                });\n                history.push('/');\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n\n\n    if (!userError && !isLoading && user) {\n        if (user.auth.signedIn) {\n\n            const devOptionsContent = (\n                <>\n                    <span>Developer Options</span>\n                    <WrenchIcon />\n                </>\n            );\n\n            const addGroupContent = (\n                <>\n                    <span>Create Group</span>\n                    <AddIcon />\n                </>\n            );\n\n            if (user.auth.isDeveloper) {\n                devLink = <PageLink to=\"/dev/\" name=\"Developer Options\" content={devOptionsContent} />;\n            }\n\n            accountLink = [\n                ABSwitch(\"\", <PageLink key={0} to=\"/home/\" name=\"Home page\" />, \"homePage\"),\n                <PageLink key={1} to=\"/account/\" name=\"Account\" />,\n                <PageLink key={2} to=\"/group/new/\" name=\"Create Group\" content={addGroupContent} />\n            ];\n            logoutLink = <PageButton onClick={() => { logoutExecutor.mutate({}); }} name=\"Logout\" />;\n            groupLinks = [];\n            for (let i in user.permissions.isAdminOf) {\n                let group = user.permissions.isAdminOf[i];\n                groupLinks.push(<PageLink to={ \"/group/\" + group.id } name={group.groupName} key={i} />);\n            }\n                \n        }\n    }\n\n    \n\n    return (\n        <div className={styles.Sidebar}>\n            <TopSidebar />\n            <div style={{ display: \"flex\", flexGrow: 2, flexDirection: \"column\", overflowY: \"auto\", marginBottom: \"50px\" }}>\n                {accountLink}\n                {devLink}\n                <div className={styles.GroupLinks}>\n                    {groupLinks}\n                </div>\n                <PageButton href=\"https://discord.gametools.network/\" name=\"Need help?\" />\n                {logoutLink}\n                \n            </div>\n            <p style={{ paddingLeft: \"48px\", fontSize: \"12px\" }}>v{APP_VERSION} channel {(getChannel() === 0) ? \"A\" : \"B\"}</p>\n        </div>\n    );\n\n}","import React from \"react\";\nimport styles from \"./Status.module.css\";\n\n\nfunction LoadingIcon() {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.loadingIcon}>\n            <path fill=\"currentColor\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    );\n}\n\nfunction ErrorIcon(props) {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.errorIcon}>\n            <path fill=\"currentColor\" d=\"M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z\" />\n        </svg>\n    );\n}\n\nexport function Status(props) {\n    const notEnabled = (props.status === undefined || props.status === null) ;\n    return (\n        <div className={notEnabled ? \"\" : styles.status}>\n            {(notEnabled) ?  \"\" : (props.status) ? <LoadingIcon /> : <ErrorIcon />}\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Buttons.module.css\";\nimport { Status } from \"./Status\";\n\n\nexport function Button(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}<Status status={props.status} /></button>\n    );\n}\n\nexport function ButtonLink(props) {\n    if (props.disabled) {\n        return <Button name={props.name} disabled={true} />\n    }\n    return (\n        <NavLink style={props.style} className={styles.button} to={props.to} title={props.name}>{props.name}</NavLink>\n    );\n}\n\nexport function ButtonRow(props) {\n    return (\n        <div className={styles.buttonRow}>{props.children}</div>\n    );\n}\n\n\nexport function TextInput(props) {\n    if (props.value === undefined) {\n        return <input defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />;\n    }\n    return <input value={props.value} defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />;\n}\n\nexport function SmallButton(props) {\n    if (props.disabled) {\n        return (\n            \"\"\n        );\n    }\n    return (\n        <div className={styles.SmallButton} onClick={_ => props.callback(props.vars)} title={props.name}>{props.content || props.name}</div>\n    );\n}\n\nexport function Switch(props) {\n\n    const [checkedSwitch, clickSwitch] = useState(false);\n\n    const switchTheSwitch = () => {\n        var newVal = !checkedSwitch;\n        clickSwitch(newVal);\n        if (props.callback) props.callback(newVal);\n    };\n\n    useEffect(() => {\n        if (props.checked !== null) {\n            clickSwitch(props.checked);\n        }\n    }, [props.checked])\n\n    /*  If user uses tabs, make it clickable on Enter key */\n    const SwitchOnenter = (e) => {\n        if (e.charCode === 13) switchTheSwitch();\n    };\n\n    const switchClassName = checkedSwitch ? styles.SwitchActive : styles.Switch;\n\n    return (\n        <div className={styles.SwitchRow}>\n            <div className={switchClassName} onClick={switchTheSwitch} isChecked={checkedSwitch} onKeyPress={SwitchOnenter} role=\"switch\" tabIndex=\"1\">\n                <span className={styles.SwitchInner}>\n                    <span className={styles.SwitchOn}></span>\n                    <span className={styles.SwitchOff}></span>\n                </span>\n                <span className={styles.SwitchHandle}></span>\n            </div>\n            <span>{props.name}</span>\n        </div>\n    );\n}\n\nexport function DropdownButton(props) {\n    const [open, setOpen] = useState(false);\n\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.container} ref={container}>\n            <button type=\"button\" className={styles.button} onClick={() => setOpen(!open)}>{props.name}</button>\n            {open && (<div className={styles.dropdown}>\n                <ul className={styles.ul}>\n                    {\n                        props.options.map(option => <li className={styles.li} onClick={option.callback}>{option.name}</li>)\n                    }\n                </ul>\n            </div>)}\n        </div>\n    );\n}\n\n\nexport function ChoosePageButtons(props) {\n\n    const [active, setActive] = useState(0);\n\n    return (\n        <div className={styles.ChoosePageButtonHolder} >\n            {\n                props.buttons.map((button, i) => (\n                    <div\n                        key={i}\n                        isChecked={i === active}\n                        role=\"switch\"\n                        className={(i === active) ? styles.ChoosePageButtonActive : styles.ChoosePageButton}\n                        onClick={_ => { setActive(i); button.callback() }}\n                        title={button.name}\n                        tabIndex=\"1\" \n                    >\n                        {button.content || button.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n    \n}\n\nfunction IconSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n        </svg>\n    );\n} \n\nfunction IconNotSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\" />\n        </svg>\n    );\n} \n\nexport function SelectableRow(props) {\n    const [selected, setSelcted] = React.useState(false);\n    const select = (p) => {\n        setSelcted(p);\n        props.callback(p);\n    }\n    return (\n        <div className={(selected) ? styles.selectableRowSelected : styles.selectableRow} onClick={() => select(!selected)}>\n            {\n                (selected) ? <IconSelected /> : <IconNotSelected />\n            }\n            {props.children}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport styles from \"./Flex.module.css\";\n\n\nexport function Column(props) {\n    return (\n        <div className={styles.Column}>{props.children}</div>\n    );\n}\n\nexport function Row(props) {\n    return (\n        <div className={styles.Row}>{props.children}</div>\n    );\n}\n\nexport function Grow(props) {\n    return (\n        <div className={styles.Grow}>{props.children}</div>\n    );\n}","import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nimport { ChoosePageButtons } from \"./Buttons.js\";\n\nexport function Card(props) {\n    return (\n        <div className={styles.card} style={props.style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function CardRow(props) {\n    return <span className={styles.CardRow}>{props.children}</span>;\n}\n\nexport function PageCard(props) {\n    return (\n        <>\n            <ChoosePageButtons buttons={props.buttons} />\n            <div className={styles.PageCard} style={props.style}>\n                {props.children}\n             </div>\n        </>\n    );\n}\n\nexport function Tag(props) {\n    return (\n        <span className={styles.Tag}>\n            {props.children}\n        </span>\n    );\n}\n\n\n\nconst ModalControll = {\n    isShown: false,\n    children: \"\",\n    show: (e) => {},\n    close: (e) => {},\n}\n\nconst ModalContext = React.createContext(ModalControll);\n\nexport const useModal = () => React.useContext(ModalContext);\n\nfunction Modal(props) {\n\n    const controller = useModal();\n\n    return (\n        <div className={props.show ? styles.modal : styles.modalDisabled}>\n            <div className={styles.modalBackground} onClick={() => controller.close()}></div>\n            <div className={styles.modalContent}>{props.content}</div>\n        </div>\n    );\n}\n\nexport function ModalProvider(props) {\n\n    const [controllerState, setControllerState] = React.useState({\n        isShown: false,\n        children: \"\",\n    });\n\n    const showModal = (e) => {\n        setControllerState(s => ({\n            ...s,\n            isShown: true,\n            children: e,\n        }));\n    }\n\n    const closeModal = () => {\n        setControllerState(s => ({\n            ...s,\n            isShown: false,\n        }));\n    }\n\n    return (\n        <ModalContext.Provider value={{...controllerState, show: showModal, close: closeModal}}>\n            <Modal show={controllerState.isShown} content={controllerState.children} />\n            {props.children}\n        </ModalContext.Provider>\n    );\n}","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\n\nexport function Header(props) {\n    return (\n        <div className={styles.Header}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport styles from \"./User.module.css\";\nimport { SelectableRow } from \"./Buttons\";\n\nexport function UserRow(props) {\n    var user = props.discord;\n    return (\n        <div className={styles.UserRow}>\n            <img alt=\"\" src={user.avatar} className={styles.Avatar} />\n            <div className={styles.DiscordName}>\n                {user.name}\n                <span className={styles.DiscordNum}>\n                    {user.discriminator}\n                </span>\n            </div>\n            <div className={styles.secure}>\n                <svg viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 12C6.39782 12 6.77935 11.842 7.06066 11.5607C7.34196 11.2794 7.5 10.8978 7.5 10.5C7.5 9.6675 6.825 9 6 9C5.60217 9 5.22064 9.15804 4.93934 9.43934C4.65804 9.72065 4.5 10.1022 4.5 10.5C4.5 10.8978 4.65804 11.2794 4.93934 11.5607C5.22064 11.842 5.60217 12 6 12ZM10.5 5.25C10.8978 5.25 11.2794 5.40804 11.5607 5.68934C11.842 5.97065 12 6.35218 12 6.75V14.25C12 14.6478 11.842 15.0294 11.5607 15.3107C11.2794 15.592 10.8978 15.75 10.5 15.75H1.5C1.10218 15.75 0.720644 15.592 0.43934 15.3107C0.158035 15.0294 0 14.6478 0 14.25V6.75C0 5.9175 0.675 5.25 1.5 5.25H2.25V3.75C2.25 2.75544 2.64509 1.80161 3.34835 1.09835C4.05161 0.395088 5.00544 0 6 0C6.49246 0 6.98009 0.0969967 7.43506 0.285452C7.89003 0.473907 8.30343 0.75013 8.65165 1.09835C8.99987 1.44657 9.27609 1.85997 9.46455 2.31494C9.653 2.76991 9.75 3.25754 9.75 3.75V5.25H10.5ZM6 1.5C5.40326 1.5 4.83097 1.73705 4.40901 2.15901C3.98705 2.58097 3.75 3.15326 3.75 3.75V5.25H8.25V3.75C8.25 3.15326 8.01295 2.58097 7.59099 2.15901C7.16903 1.73705 6.59674 1.5 6 1.5Z\" fill=\"#55F165\" />\n                </svg>\n                Logged in\n            </div>\n        </div>\n    );\n}\n\nexport function UserStRow(props) {\n    var user = props.user;\n    var dateAdded = new Date(Date.parse(user.addedAt));\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var dateString = `${dateAdded.getDate()} ${months[dateAdded.getMonth()]} ${String(dateAdded.getHours()).padStart(2, '0')}:${String(dateAdded.getMinutes()).padStart(2, '0')}`;\n    return (\n        <SelectableRow callback={props.callback}>\n            <div className={styles.DiscordName}>\n                {user.name}\n            </div>\n            <div className={styles.DiscordId}>\n                {user.id}\n            </div>\n            <div className={styles.DateAdded}>\n                {dateString}\n            </div>\n        </SelectableRow>\n    );\n}\n\nexport function FakeUserStRow(props) {\n    return (\n        <div className={styles.UserRowSt} />\n    );\n}\n","import i18n from 'i18next';\nimport translationEN from './languages/en-US.json';\n// import translationRU from './languages/ru-RU.json';\n// import translationCH from './languages/zh-CN.json';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const resources = {\n  \"en-US\": {\n    translation: translationEN,\n//   },\n//   \"ru-RU\": {\n//     translation: translationRU,\n//   },\n//   \"zh-CN\": {\n//     translation: translationCH,\n  }\n}\n\ni18n.use(initReactI18next).use(LanguageDetector).init({\n  resources,\n  fallbackLng: \"en-US\"\n});\n\nexport const apiLanguage = {\n  \"zh-cn\": \"zh-tw\",\n}\n\nexport const getLanguage = () => {\n  let language = window.localStorage.i18nextLng.toLowerCase()\n  if (language in apiLanguage) {\n      language = apiLanguage[language]\n  }\n  return language\n}","import React, { useState } from \"react\";\nimport styles from \"./Group.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { OperationsApi } from \"../api\";\nimport { TextInput } from \"./Buttons\";\nimport { Tag } from \"./Card\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function GroupRow(props) {\n    const { t } = useTranslation();\n    var group = props.group;\n    return (\n        <Link className={styles.GroupRow} to={\"/group/\" + group.id}>\n            <span className={styles.GroupName}>{group.groupName}</span>\n            {t(\"dev.manage\")}\n        </Link>\n    );\n}\n\nexport function ServerRow(props) {\n    var server = props.server;\n    const { t } = useTranslation();\n\n    // If not yet setteled\n    if (server.id === null) {\n        return (\n            <div className={styles.GroupRow}>\n                <span className={styles.GroupName}>\n                    {server.name}\n                    <span className={styles.serverBadgePending}>\n                        {t(\"group.servers.status.pending\")}\n                    </span>\n                </span>\n                {props.button}\n            </div>\n        );\n    }\n\n    const serverStatus = (() => {\n        switch (server.status) {\n            case \"noServer\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"group.servers.status.noServer\")}\n                    </span>\n                )\n            case \"noAdmin\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"group.servers.status.noAdmin\")}\n                    </span>\n                )\n            case \"pending\":\n                return (\n                    <span className={styles.serverBadgePending}>\n                        {t(\"group.servers.status.pending\")}\n                    </span>\n                )\n            default:\n                return (\n                    <span className={styles.serverBadgeOk}>\n                        {t(\"group.servers.status.running\")}\n                    </span>\n                )    \n        }\n    })();\n\n    return (\n        <div className={styles.GroupRow}>\n            <Link className={styles.GroupName} to={\"/server/\" + server.id}>\n                {server.name}\n                {serverStatus}\n            </Link>\n            {props.button}\n        </div>\n    );\n}\n\nexport function GroupAdminAccount(props) {\n\n    var { remid, sid } = props.cookie;\n\n    return (\n        <div className={styles.AdminAccount}>\n        </div>\n    );\n\n}\n\nexport function GameStatsAd(props) {\n    const { t } = useTranslation();\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className={styles.gameStatsAd} href=\"https://discord.com/oauth2/authorize?client_id=714524944783900794&scope=bot&permissions=83968\">\n            <img src=\"./game-stats.png\" />\n            <span>{t(\"group.discord.gamestats\")}</span>\n        </a>\n    );\n}\n\n\nexport function VBanList(props) {\n    const gid = props.gid;\n    const { isError, data: banList, error } = useQuery('globalBanList' + gid, () => OperationsApi.getAutoBanList({ gid }));\n\n    const queryClient = useQueryClient();\n\n    const [searchWord, setSearchWord] = useState(\"\");\n    const { t } = useTranslation();\n\n    const unbanVGlobalBan = useMutation(\n        variables => OperationsApi.globalUnbanPlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('globalBanList' + gid)\n                // Snapshot the previous value\n                const previousBanList = queryClient.getQueryData('globalBanList' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('globalBanList' + gid, old => {\n                    old.data= old.data.filter(player => player.playerName !== name);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousBanList, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('globalBanList' + context.gid, context.previousBanList)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('globalBanList' + context.gid)\n            },\n        }\n    );\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"group.vban.description0\")} <b>{t(\"group.vban.description1\", {number: banList.data.length})}</b>. <Tag>{t(\"eBeta\")}</Tag>\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div className={styles.BanListing}>\n                {\n                    banList.data.filter(p => p.playerName.includes(searchWord)).map(\n                        (player, i) => (<GlobalBanRow player={player} key={i} callback={() => unbanVGlobalBan.mutate({gid, name: player.playerName})}/>)\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\n\nfunction GlobalBanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <div className={styles.BanRow}>\n            <span className={styles.BanDisplayName}>{player.playerName}</span>\n            <span className={styles.banReason}>{\n                ((player.reason === \"\") ? t(\"group.vban.noReason\") : t(\"group.vban.reason\"))\n            }</span>\n            <span className={styles.banReasonDetailed}>{player.reason}</span>\n            <span className={styles.globalUnban} onClick={props.callback}>{t(\"group.vban.unban\")}</span>\n        </div>\n    );\n}\n\nexport function GroupLogs(props) {\n    const gid = props.gid;\n    const { isError, data: logList, error } = useQuery('groupogList' + gid, () => OperationsApi.getGroupLogs({ gid }));\n    const { t } = useTranslation();\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>{t(\"group.logs.description\")}</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const log = props.log;\n\n    const actionIcon = (() => {\n        switch (log.action) {\n            case \"editGroup\":\n                return \"\";\n            case \"addUser\":\n                return \"\";\n            case \"addOwner\":\n                return \"\"\n            case \"addGroup\":\n                return \"\";\n            case \"removeOwner\":\n                return \"\";\n            case \"removeUser\":\n                return \"\"\n            default:\n                return \"\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${datetime.getHours()}:${datetime.getMinutes()}`;\n\n    return (\n        <div className={styles.logRow}>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logReason}>{\n                log.reason\n            }</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}","import React from \"react\";\nimport styles from \"./MainPage.module.css\";\nimport { OperationsApi } from \"../api\";\n\nfunction ListItem(props) {\n    return (\n        <div className={styles.ListItem}>\n            <h2>{props.header}</h2>\n            <p>{props.children}</p>\n        </div>\n    );\n}\n\nfunction LoginButton() {\n    return (\n        <a className={styles.LoginButton} href={OperationsApi.constructApiUrl(\"login\")}>Log in</a>\n    );\n}\n\nexport function MainPageComponent(props) {\n    return (\n        <div className={styles.MainPage}>\n            <div className={styles.MainPageCard}>\n                <div className={styles.titleBlock}>\n                    <div className={styles.titleContent}>\n                        <h1>A new way to manage your Battlefield 1 servers</h1>\n                        <p>Server Manager is a new Gametools & BFBan service created by Community Network</p>\n                        <LoginButton />\n                    </div>\n                </div>\n                <div className={styles.listing}>\n                    <h2>Features</h2>\n                    <ListItem header=\"BFBan Anti Cheat\">Protect your servers against hackers confirmed on www.bfban.com</ListItem>\n                    <ListItem header=\"Unlimited Global V-Ban list\">Ban as many players as you want to on all your servers with virtal ban list.</ListItem>\n                    <ListItem header=\"High ping players kick\">Automaticaly kick players from your servers based on ping threshold.</ListItem>\n                    <ListItem header=\"Discord tools to maintain server\">Contoll your servers right in the Discord based on roles.</ListItem>\n                    <ListItem header=\"Server action logging\">See full logs on every actions made on your servers and groups.</ListItem>\n                    <ListItem header=\"Full controll over your servers\">Admins can controll server with same functions as in game.</ListItem>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Server.module.css\";\nimport { useQuery } from 'react-query';\nimport { Button, ButtonRow, DropdownButton, ButtonLink, TextInput } from \"./Buttons\";\nimport { useModal } from \"./Card\";\nimport { OperationsApi } from \"../api\";\n\n\nexport function SmallText(props) {\n    return (<span className={styles.SmallText}>{props.children}</span>);\n}\n\nfunction PlayerStatsModal(props) {\n    const player = props.player;\n    const { isError, data: stats, isLoading } = useQuery('playerStatsByEAID' + player, () => fetch(\"https://api.gametools.network/bf1/stats/?name=\"+player+\"&lang=en-us&platform=pc&=\").then(r=>r.json()));\n    \n    const statsBlock = (!isLoading && !isError) ? (\n        <div className={styles.statsBlock}>\n            <h5>Skill: {stats.skill}</h5>\n            <h5>Level: {stats.rank}</h5>\n            <h5>KPM: {stats.killsPerMinute}</h5>\n            <h5>Win: {stats.winPercent}</h5>\n            <h5>Accuracy: {stats.Accuracy}</h5>\n            <h5>Headshots: {stats.headshots}</h5>\n            <h5>KD: {stats.killDeath}</h5>\n            <h5>ID: {stats.id}</h5>\n            <a href={\"https://gametools.network/stats/pc/playerid/\"+stats.id+\"?name=\"+player} target=\"_blank\">Full stats..</a>\n        </div>\n    ) : \"Loading stats..\";\n\n    return (   \n        <>\n            <h2>Game stats for {player}</h2>\n            {statsBlock}\n        </>\n    );\n}\n\nexport function EditableText(props) {\n    return (<p>{props.children}</p>);\n}\n\nexport function SettingsRow(props) {\n    return <div className={styles.SettingsRow}>{props.children}</div>;\n}\n\nexport function SmallIntInput(props) {\n    return <input type=\"text\" className={styles.SmallInput} defaultValue={props.value} />;\n}\n\nexport function ServerInfo(props) {\n    var server = props.server;\n    return (\n        <>\n        </>\n    );\n}\n\nexport function ServerRotation(props) {\n    \n    var server = null, game = null;\n    if (props.game && props.game.data && props.game.data.length > 0) {\n        server = props.game.data[0];\n        game = server.info;\n    }\n\n    var server_status = (\n        <span className={styles.serverBadgePending}>\n            Pending status\n        </span>\n    );\n    \n    if (server) {\n        if (server.isAdmin) {\n            server_status = (\n                <span className={styles.serverBadgeOk}>\n                    <span className={styles.liveUpdate}></span>\n                    Running\n                </span>\n            )  \n        } else {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    No admin rights\n                </span>\n            )\n        }\n        if (server.serverStatus === \"noServer\") {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    Status: Server not found\n                </span>\n            )\n        }\n    }\n    var update_timestamp = \"\";\n    if (server) {\n        const timestamp = new Date(server.update_timestamp);\n        update_timestamp =  `${timestamp.getHours()}:${timestamp.getMinutes()}:${timestamp.getSeconds()}`;\n    }\n    var [rotationId, setRotationId] = useState(\"\"); \n    return (\n        <div className={styles.ServerInfoColumn}>\n            <div className={styles.ServerDescriptionRow}>\n                <img className={styles.serverImage} src={(game) ? game.url : \"/no-server-image.png\"} />\n                <div className={styles.GameInfo}>\n                    <span className={styles.ServerName}>{(game) ? game.prefix : \"Loading\" }</span>\n                    <SmallText>{(game) ? `${game.map} - ${game.mode} - ${game.serverInfo} [${game.inQue}] players` : \"-\"}</SmallText>\n                </div>\n            </div>\n            <ButtonRow>\n                <Button name=\"Restart\" disabled={!game} callback={_ => props.rotate((game) ? game.rotationId : null)} />\n                <select className={styles.SwitchGame} value={rotationId} onChange={e => setRotationId(e.target.value)}>\n                    <option value=\"\">Switch game..</option>\n                    {(game) ? game.rotation.map((value, i) =>\n                        <option value={value.index} key={i}>{value.mapname} - {value.mode}</option>\n                    ) : \"\"}\n                </select>\n                {(rotationId !== \"\") ? <Button name=\"Apply\" disabled={!game} callback={_ => { props.rotate((game) ? rotationId : null); setRotationId(\"\"); }} /> : \"\"}\n            </ButtonRow>\n            <div className={styles.serverStatusArray}>\n                <span>{server_status}</span>\n                <span className={styles.serverBadge}>Last update - {update_timestamp}</span>\n            </div>\n            \n        </div>\n    );\n}\n\nexport function PlayerInfo(props) {\n    const modal = useModal();\n    var info = props.game.data[0].players[props.team].players;\n\n    var moveTeam = (props.team === \"0\") ? \"1\" : \"2\";\n\n    let getDropdownOptions = (player) => {\n        return [\n            { name: \"Give VIP\", callback: () => props.giveVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n            { name: \"Remove VIP\", callback: () => props.removeVip.mutate({ sid: props.sid, name: player.name, reason: \"\" }) },\n        ]\n    };\n    return (\n        info.map((player, i) => \n            <div className={styles.PlayerRow} key={i}>\n\n                <span className={styles.PlayerIndex}>\n                    {i + 1}\n                </span>\n                <span className={styles.PlayerLevel}>\n                    {\n                        (player.rank === null) ? \"??\" : player.rank\n                    }\n                </span>\n                <span className={styles.PlayerName} onClick={_=>modal.show(<PlayerStatsModal player={player.name} />)}>\n                    {\n                        (player.platoon === \"\") ? \"\" : `[${player.platoon}] ` \n                    }\n                    {\n                        player.name\n                    }\n                </span>\n                <span className={styles.PlayerNone} />\n\n\n                \n                <div className={styles.PlayerButtons}>\n                    <div className={styles.PlayerButton} onClick={_ => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam})}>\n                        Move\n                    </div>\n                    <div className={styles.PlayerButton} onClick={_ => modal.show(<props.kickModal sid={props.sid} eaid={player.name} />)}>\n                        Kick\n                    </div>\n                    <div className={styles.PlayerButton} onClick={_ => modal.show(<props.banModal sid={props.sid} eaid={player.name} />)}>\n                        Ban\n                    </div>\n                    {/*<ButtonLink name=\"Kick\" to={`/server/${props.sid}/kick/${player.name}/`} />\n                    <ButtonLink name=\"Ban\" to={`/server/${props.sid}/ban/${player.name}/`} />*/}\n                    {/*<DropdownButton options={getDropdownOptions(player)} name=\"☰\"></DropdownButton>*/}\n                    \n                </div>\n\n                <span className={styles.PlayerPing}>\n                    {player.ping}\n                    <svg viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M4,6V4H4.1C12.9,4 20,11.1 20,19.9V20H18V19.9C18,12.2 11.8,6 4,6M4,10V8A12,12 0 0,1 16,20H14A10,10 0 0,0 4,10M4,14V12A8,8 0 0,1 12,20H10A6,6 0 0,0 4,14M4,16A4,4 0 0,1 8,20H4V16Z\" />\n                    </svg>\n                </span>\n                \n            </div>\n        )\n    );\n}\n\nexport function ServerInfoHolder(props) {\n    return (\n        <div className={styles.ServerInfoRow}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function BanList(props) {\n    const sid = props.sid;\n    const { isError, data: banList, error } = useQuery('serverBanList' + sid, () => OperationsApi.getBanList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                List of banned players on this server.<br />\n                Used <b>{banList.data.length} slots out of 200</b>.\n                Use our group-based virtual ban list,<br /> to ban unlimited amount of players.\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>Player name</th>\n                        <th>Player id</th>\n                        <th>Reason</th>\n                        <th>Admin</th>\n                        <th>Until</th>\n                        <th>Timestamp</th>\n                    </thead>\n                    <tbody>\n                        {\n                            banList.data.filter(p => p.displayName.includes(searchWord)).map(\n                                (player, i) => (<BanRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction BanRow(props) {\n    const player = props.player;\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.displayName}</td>\n            <td title=\"Player ID\">{player.id}</td>\n            <td>{player.reason}</td>\n            <td>{player.admin}</td>\n            <td>{player.banned_until}</td>\n            <td>{player.ban_timestamp}</td>\n        </tr>\n    );\n}\n\nexport function FireStarter(props) {\n    const sid = props.sid;\n    const { isError, data: starterList, error } = useQuery('serverStarterList' + sid, () => OperationsApi.getStarterList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!starterList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    starterList.data.sort((a, b) => b.amount - a.amount);\n\n    return (\n        <div>\n            <h5>\n                We measure when your server's preround ended and count all the players that are in the server when it starts,<br />\n                so you can check here who is helping you start your server.\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>Player name</th>\n                        <th>Player id</th>\n                        <th>Amount</th>\n                    </thead>\n                    <tbody>\n                        {\n                            starterList.data.filter(p => p.playerName.includes(searchWord)).map(\n                                (player, i) => (<StarterRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction StarterRow(props) {\n    const player = props.player;\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.platoon !== \"\"? `[${player.platoon}] `: null}{player.playerName}</td>\n            <td title=\"Player ID\">{player.playerId}</td>\n            <td>{player.amount}</td>\n        </tr>\n    );\n}\n\nexport function LogList(props) {\n    \n    const sid = props.sid;\n    const { isError, data: logList, error } = useQuery('serverLogList' + sid, () => OperationsApi.getServerLogs({ sid }));\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>Log list</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const modal = useModal();\n    const log = props.log;\n    const action = (() => {\n        switch (log.action) {\n            case \"addServerBan\":\n                return \"banned\";\n            case \"kickPlayer\":\n                return \"kicked\";\n            case \"removeServerBan\":\n                return \"unbanned\"\n            case \"addServerVip\":\n                return \"gave vip to\";\n            case \"movePlayer\":\n                return \"moved\";\n            case \"removeServerVip\":\n                return \"removed vip of\"\n            default:\n                return \"did magic to\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${String(datetime.getHours()).padStart(2, '0')}:${String(datetime.getMinutes()).padStart(2, '0')}`;\n\n    if (log.action === \"autokick-ping\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M19.5,5.5V18.5H17.5V5.5H19.5M12.5,10.5V18.5H10.5V10.5H12.5M21,4H16V20H21V4M14,9H9V20H14V9M7,14H2V20H7V14Z\" />\n                </svg>\n                <span className={styles.logAdmin}>Ping checker</span>\n                <span className={styles.logAction}>kicked</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-globalBans\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>VBan</span>\n                <span className={styles.logAction}>kicked</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-bfban\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>BFBAN</span>\n                <span className={styles.logAction}>kicked</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (action === \"moved\" && log.toPlayer === \"server\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z\" />                </svg>\n                <span className={styles.logAdmin}>{log.adminName}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n    return (\n        <div className={styles.logRow}>\n            <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n            </svg>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logAction}>{action}</span>\n            <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n            <span className={styles.logReason}>{\n                ((log.reason === \"\") ? \"without any reason\" : \"with reason\")\n            }</span>\n            <span className={styles.logReasonDetailed}>{log.reason}</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}\n\nexport function VipList(props) {\n    const sid = props.sid;\n    const { isError, data: vipList, error } = useQuery('serverVipList' + sid, () => OperationsApi.getVipList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n\n    if (!vipList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n    \n\n    return (\n        <div>\n            <div className={styles.VipHeader}>\n                <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <h5 style={{ marginBottom: 0 }}>\n                        List of VIP players on this server.<br />\n                        Used <b>{vipList.data.length} slots out of 50</b>.\n                    </h5>\n                </div>\n            </div>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <tr>\n                            <th>Player name</th>\n                            <th>Player id</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            vipList.data.filter(p => p.displayName.includes(searchWord)).map(\n                                (player, i) => (<VipRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction VipRow(props) {\n    const player = props.player;\n    return (\n        <tr className={styles.VipRow}>\n            <td title={player.displayName} className={styles.VipName}>\n                <div className={styles.VipRowImg}><img src={player.avatar} alt=\"\" /></div>\n                <span>{player.displayName}</span>\n            </td>\n            <td title=\"Player ID\">{player.id}</td>\n        </tr>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, CardRow, UserRow, Row } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Account() {\n    const { t } = useTranslation();\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var userLine = \"\";\n\n    if (!userError && !isLoading && user) {\n        if (!user.auth.signedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            userLine = <UserRow discord={user.discord} />;\n        }\n    } else if (userError && !isLoading) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"account.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"account.discordProfile\")}</h2>\n                    {userLine}\n                </Card>\n            </Column>\n            <Column>\n                <Header />\n                <Card>\n                    <h2>{t(\"account.permissions.main\")}</h2>\n                    <CardRow>{t(\"account.permissions.admin\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.server\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.system\")}</CardRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, GroupRow, Row } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function Developer() {\n    const { t } = useTranslation();\n    const { isLoading, isError, data } = useQuery('devGroups', () => OperationsApi.getDevGroups())\n    \n    var groups = [];\n\n    if (!isLoading && !isError && data) {\n        data.data.map((g, i) => {\n            groups.push(<GroupRow key={i} group={g} />);\n        });\n    } else if (isError) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"dev.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"dev.listGroups\")}</h2>\n                    {groups}\n                    <ButtonRow>\n                        <ButtonLink name={t(\"dev.addGroup\")} to=\"/group/new/\" />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, Switch, BanList, Column, Card, Header, ServerRotation, ServerInfoHolder, ButtonLink, ButtonRow, Button, PageCard, Row, VipList, LogList, TextInput, PlayerInfo, FireStarter } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function Server(props) {\n    var sid = props.match.params.sid;\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n    const modal = useModal();\n\n    const { isError: serverError, data: server } = useQuery('server' + sid, () => OperationsApi.getServer(sid));\n    const { isError: gameError, data: runningGame } = useQuery('serverGame' + sid, () => OperationsApi.getServerGame(sid));\n\n    var serverCard = \"\";\n    var playerList = \"\";\n    var playerInGame = false;\n    var playerNicknameTeam;\n\n    var [playerName, setPlayerName] = useState(\"\");\n\n    var [addVipStatus, changeAddVipStatus] = useState({ name: \"Add Vip\", status: false });\n    var [removeVipStatus, changeRemoveVipStatus] = useState({ name: \"Remove Vip\", status: false });\n    var [unbanStatus, changeUnbanStatus] = useState({ name: \"Unban\", status: false });\n    \n    var [tabsListing, setTabsListing] = useState(\"info\");\n\n    const UnbanPlayer = useMutation(\n        v => OperationsApi.unbanPlayer(v), {\n        onMutate: async () => {\n            changeUnbanStatus({ name: \"Pending..\", status: true });\n            return { status: unbanStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeUnbanStatus(context.status);\n        },\n    }\n    );\n\n    const RemoveVip = useMutation(\n        v => OperationsApi.removeVip(v), {\n        onMutate: async () => {\n            changeRemoveVipStatus({ name: \"Pending..\", status: true });\n            return { status: removeVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeRemoveVipStatus(context.status);\n        },\n    }\n    );\n\n    const AddVip = useMutation(\n        v => OperationsApi.addVip(v), {\n        onMutate: async () => {\n            changeAddVipStatus({ name: \"Pending..\", status: true });\n            return { status: addVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeAddVipStatus(context.status);\n        },\n    }\n    );\n\n    const movePlayer = useMutation(\n        variables => OperationsApi.movePlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, team, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    if (team === \"1\") {\n                        old.data[0].players[1].players.push(old.data[0].players[0].players.find(e => e.name === name));\n                        old.data[0].players[0].players = old.data[0].players[0].players.filter(p => p.name !== name);\n                    } else {\n                        old.data[0].players[0].players.push(old.data[0].players[1].players.find(e => e.name === name));\n                        old.data[0].players[1].players = old.data[0].players[1].players.filter(p => p.name !== name);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const serverTabs = [\n        {\n            name: t(\"server.game.main\"),\n            callback: () => setTabsListing(\"info\"),\n        },\n        {\n            name: t(\"server.banList.main\"),\n            callback: () => setTabsListing(\"banlist\"),\n        },\n        {\n            name: t(\"server.vipList.main\"),\n            callback: () => setTabsListing(\"viplist\"),\n        },\n        {\n            name: t(\"server.firestarterList.main\"),\n            callback: () => setTabsListing(\"firestarter\"),\n        },\n        {\n            name: t(\"server.logs.main\"),\n            callback: () => setTabsListing(\"loglist\"),\n        },\n        {\n            name: t(\"server.protection.main\"),\n            callback: () => setTabsListing(\"protection\"),\n        },\n        {\n            name: t(\"server.settings.main\"),\n            callback: () => setTabsListing(\"settings\"),\n        }\n    ];\n\n    const catTabs = {\n        info: (\n            <ServerInfoHolder>\n                <ServerRotation game={runningGame} rotate={id => OperationsApi.changeRotation({ sid, map: id })} />\n            </ServerInfoHolder>\n        ),\n        banlist: <BanList sid={sid} />,\n        viplist: <VipList sid={sid} />,\n        firestarter: <FireStarter sid={sid} />,\n        loglist: <LogList sid={sid} />,\n        protection: (\n            <>\n                <ServerAutomation server={server} sid={sid} />\n            </>\n        ),\n        settings: ( \n            <>\n                <ServerSettings server={server} sid={sid} />\n            </>\n        )\n    }\n\n    //if (!serverError && server && !gameError && runningGame) {\n    serverCard = (\n        <Row>\n            <Column>\n                <PageCard buttons={serverTabs} >\n                    {catTabs[tabsListing]}\n                </PageCard>\n            </Column>\n        </Row>\n    );\n    //}\n\n    var isOpsMode = false;\n\n    if (!gameError && runningGame && !(\"error\" in runningGame.data[0].players[0])) {\n\n        isOpsMode = runningGame.data[0].info.mode === \"Operations\";\n\n        var f1 = runningGame.data[0].players[0].players.find(e => e.name === playerName);\n        var f2 = runningGame.data[0].players[1].players.find(e => e.name === playerName);\n\n        if (f1 !== undefined) {\n            playerNicknameTeam = \"1\";\n        } else if(f2 !== undefined) {\n            playerNicknameTeam = \"2\";\n        }\n\n        var playerInGame = (playerName !== \"\") &&\n            (\n                (f1 !== undefined) || (f2 !== undefined)\n            );\n\n        playerList = (\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamOne\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"0\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamTwo\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"1\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer}  giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n            </Row>\n        )\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"server.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            {serverCard}\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.console.main\")}</h2>\n                        <Row>\n                            <TextInput name=\"Player name\" callback={e => setPlayerName(e.target.value)} style={{\n                                marginRight: 12,\n                            }}/>\n                            <ButtonRow>\n                                <Button disabled={playerName === \"\"} name=\"Kick\" callback={_ => modal.show(<ServerKickPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={!playerInGame} name=\"Move\" callback={_ => movePlayer.mutate({ sid, team: playerNicknameTeam, name: playerName })} />\n                                <Button disabled={playerName === \"\"} name=\"Ban\" callback={_ => modal.show(<ServerBanPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\" || unbanStatus.status} name={unbanStatus.name} callback={_ => UnbanPlayer.mutate({ sid, name: playerName, reason: \"\" })} />\n                                <Button disabled={playerName === \"\" || addVipStatus.status || isOpsMode} name={addVipStatus.name} callback={_ => AddVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                                <Button disabled={playerName === \"\" || removeVipStatus.status || isOpsMode} name={removeVipStatus.name} callback={_ => RemoveVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                            </ButtonRow>\n                        </Row>\n                    </Card>\n                </Column>\n            </Row>\n            {playerList}\n        </>\n    );\n\n}\n\nfunction ServerAutomation(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n\n    const [kickOnPingDisabled, setKickOnPingDisabled] = useState(false);\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n\n        if (props.server) {\n            const { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage } = props.server;\n            const originalServerState = { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage };\n            if (serverState === null) {\n                setServerState(originalServerState);\n                setKickOnPingDisabled(autoPingKick !== 0);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                if (serverState.autoPingKick === 0) setKickOnPingDisabled(false);\n                setCanApply(newCanApply);\n            }\n           \n        }\n        \n\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>Auto server protection</h2>\n            <h5 style={{ marginTop: \"8px\" }}>\n                Introducing new tools developed to protect your servers against hackers.<br />\n                Global Virtual Ban list auto-kicks players on <b>all group servers</b> providing<br />\n                infinity amount of ban slots and synchronized ban list.\n            </h5>\n            <Switch checked={getServerValue(\"autoBanKick\")} name=\"Enable Global V-Ban\" callback={(v) => changeSrerverState({ autoBanKick: v })}/>\n            <h5 style={{ marginTop: \"8px\" }}>This msg appear to users who got <br />auto-kicked by V-Ban Global system.</h5>\n            \n            <TextInput\n                disabled={!allowedTo || (serverState && !serverState.autoBanKick)}\n                callback={(e) => changeSrerverState({ autoGlobalBanMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoGlobalBanMessage\")}\n                name={\"V-Ban message\"}\n            />\n            <h5 style={{ marginTop: \"30px\" }}>Protect server agains known cheaters in <i>bfban.com</i></h5>\n            <Switch checked={getServerValue(\"autoBfbanKick\")} name=\"Enable BFBan Anti Cheat\" callback={(v) => changeSrerverState({ autoBfbanKick: v })} />\n            <h5 style={{ marginTop: \"30px\" }}>Auto kick players with constant high ping</h5>\n            <Switch checked={kickOnPingDisabled} name=\"Kick on high ping\" callback={(v) => { setKickOnPingDisabled(v); (!v) ?changeSrerverState({ autoPingKick: 0 }) : changeSrerverState({ autoPingKick: 200 })  }} />\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") changeSrerverState({ autoPingKick: parseInt(e.target.value) })\n                        }\n                    }\n                }\n                value={(serverState) ? serverState.autoPingKick : \"\" }\n                name={\"High ping value\"}\n            />\n            <TextInput\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={(e) => changeSrerverState({ autoPingKickMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoPingKickMessage\")}\n                name={\"Auto ping msg\"}\n            />\n            <h5 style={{ marginTop: \"8px\" }}>Mimimum amount of players for autokick to start working (0 for always)</h5>\n            <TextInput\n                type=\"number\"\n                disabled={true/*!allowedTo || !kickOnPingDisabled*/}\n                callback={\n                    (e) => {\n                        console.log(e.target.value < 0);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") {\n                                changeSrerverState({ minAutoPingKick: parseInt(e.target.value) })\n                            }\n                        }\n                    }\n                }\n                defaultValue={getServerValue(\"minAutoPingKick\")}\n                value={(serverState) ? serverState.minAutoPingKick : \"\" }\n                name={\"Minimum amount of players\"}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply changes\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\nfunction ServerSettings(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    useEffect(() => {\n        if (props.server) {\n            const { serverName, serverAlias } = props.server;\n            const originalServerState = { serverName, serverAlias };\n            if (serverState === null) {\n                setServerState(originalServerState);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                setCanApply(newCanApply);\n            }\n\n        }\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>Server settings</h2>\n\n            <h5 style={{ marginTop: \"8px\" }}>Change Server Name</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverName: e.target.value })}\n                defaultValue={getServerValue(\"serverName\")}\n                name={\"Server Name\"}\n            />\n\n            <h5 style={{ marginTop: \"8px\" }}>Alias to use with a Discord bot. (Can be a server number, for example)</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverAlias: e.target.value })}\n                defaultValue={getServerValue(\"serverAlias\")}\n                name={\"Alias\"}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name=\"Apply changes\" disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction ServerKickPlayer(props) {\n\n    var { sid, eaid } = props;\n    const modal = useModal();\n\n    var [reason, setReason] = useState(\"\");\n    var [kickApplyStatus, setKickApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n\n    const KickPlayer = useMutation(\n        v => OperationsApi.kickPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid, reason }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                setKickApplyStatus(true);\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            onSuccess: () => {\n                setKickApplyStatus(null);\n                modal.close();\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (error, newTodo, context) => {\n                setKickApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setKickApplyStatus(null), 3000);\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>You are going to kick player {props.eaid}</h2>\n            <TextInput name=\"Reason\" callback={(e) => setReason(e.target.value)} />\n            <ButtonRow>\n                <Button status={kickApplyStatus} name=\"Kick him!\" disabled={reason === \"\"} callback={() => { KickPlayer.mutate({ sid, eaid, reason, playername: props.eaid }); history.push(`/server/${props.sid}/`); }} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (kickApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}\n\nfunction ServerBanPlayer(props) {\n    const modal = useModal();\n    var { sid, eaid } = props;\n\n    const history = useHistory();\n    const [reason, setReason] = useState(\"\");\n    const [banTime, setBanTime] = useState(0);\n    const [globalVsClassicBan, setGlobalVsClassicBan] = useState(false);\n\n    var [banApplyStatus, setBanApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    const { isError: userGettingError, data: user } = useQuery('user', () => OperationsApi.user);\n\n    const BanPlayer = useMutation(\n        v => OperationsApi.banPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n                modal.close();\n            },\n        }\n    );\n\n    const GlobalBanPlayer = useMutation(\n        v => OperationsApi.globalBanPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n\n            },\n        }\n    );\n\n    var gid = null;\n\n    if (user) {\n        user.permissions.isAdminOf.map(\n            group => {\n                for (let someSid of group.servers) {\n                    if (someSid === sid) {\n                        gid = group.id;\n                    }\n                }\n            }\n        )\n    }\n\n    const isDisabled =\n        reason === \"\" ||\n        banTime < 0 ||\n        banApplyStatus !== null ||\n        userGettingError || !user || gid == null;\n\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>You are going to ban player {props.eaid}</h2>\n            <h5>Enter a reason to ban this player.</h5>\n            <TextInput name=\"Reason\" callback={(e) => setReason(e.target.value)} />\n            <Switch value={globalVsClassicBan} name=\"Use Virtual Ban instead of classic ban list\" callback={ (v) => setGlobalVsClassicBan(v) } />\n            <h5>If you want to temporary ban him, specify time in<br /> hours below, or leave it 0 to make permament ban.<br />Not supported yet by V-Ban.</h5>\n            <TextInput type=\"number\" name=\"Ban time\" defaultValue={0} callback={(e) => setBanTime(e.target.value)} disabled={globalVsClassicBan} />\n            <ButtonRow>\n                <Button\n                    name=\"Ban!\"\n                    style={{ maxWidth: \"144px\" }}\n                    disabled={isDisabled}\n                    callback={() => {\n                        if (globalVsClassicBan) {\n                            GlobalBanPlayer.mutate({ gid, reason, name: props.eaid });\n                        } else {\n                            BanPlayer.mutate({ sid, eaid, reason, name: props.eaid, time: banTime });\n                        }\n                    }}\n                    status={banApplyStatus} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (banApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, GroupLogs, VBanList, GameStatsAd, Column, Card, Header, ButtonLink, ButtonRow, Button, UserStRow, Row, ServerRow, FakeUserStRow, TextInput, SmallButton, PageCard } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nconst deleteIcon = (\n    <svg viewBox=\"0 0 24 24\" style={{ width: '16px' }}>\n        <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n    </svg>\n);\n\n\nexport function Group(props) {\n\n    var gid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n\n    const { error: groupError, data: groups } = useQuery('groupId' + gid, () => OperationsApi.getGroup(gid), { staleTime: 30000 });\n    const { error: userError, data: user } = useQuery('user', () => OperationsApi.user);\n\n\n    const removeAdmin = useMutation(\n        variables => OperationsApi.removeGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins = old.data[0].admins.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const removeServer = useMutation(\n        variables => OperationsApi.removeServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, sid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers = old.data[0].servers.filter(server => server.id !== sid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n\n    const removeOwner = useMutation(\n        variables => OperationsApi.removeGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners = old.data[0].owners.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n    var group = (groups && groups.data && groups.data.length > 0) ? groups.data[0] : null;\n    const [listing, setListing] = useState(\"servers\");\n    const [settingsListing, setSettingsListing] = useState(\"account\");\n    const { t } = useTranslation();\n\n    const catListing = {\n        owners: <GroupOwners group={group} user={user} gid={gid} onDelete={removeOwner} />,\n        admins: <GroupAdmins group={group} user={user} gid={gid} onDelete={removeAdmin} />,\n        servers: <GroupServers group={group} user={user} gid={gid} onDelete={removeServer} />,\n        vbanlist: <VBanList user={user} gid={gid} />,\n        grouplogs: <GroupLogs gid={gid} />,\n    }\n\n\n    const catSettings = {\n        account: <GroupServerAccount gid={gid} user={user} group={group} />,\n        discord: <GroupDiscordSettings gid={gid} user={user} group={group} />,\n        danger: <GroupDangerZone gid={gid} user={user} group={group} />,\n    }\n\n    const pageCycle = [\n        {\n            name: t(\"group.servers.main\"),\n            callback: () => setListing(\"servers\"),\n        },\n        {\n            name: t(\"group.admins.main\"),\n            callback: () => setListing(\"admins\"),\n        },\n        {\n            name: t(\"group.owners.main\"),\n            callback: () => setListing(\"owners\"),\n        },\n        {\n            name: t(\"group.vban.main\"),\n            callback: () => setListing(\"vbanlist\"),\n        },\n        {\n            name: t(\"group.logs.main\"),\n            callback: () => setListing(\"grouplogs\"),\n        }\n    ]\n\n    const settingsCycle = [\n        {\n            name: t(\"group.account.main\"),\n            callback: () => setSettingsListing(\"account\"),\n        },\n        {\n            name: t(\"group.discord.main\"),\n            callback: () => setSettingsListing(\"discord\"),\n        },\n        {\n            name: t(\"group.danger.main\"),\n            callback: () => setSettingsListing(\"danger\"),\n        },\n    ];\n\n    if (groupError || userError || (groups && groups.data && groups.data.length === 0)) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"group.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"group.name\")} - {(group) ? group.groupName : t(\"pending\")}</h2>\n                        <p style={{ marginBottom: 0 }}>{t(\"group.id\")} {gid}</p>\n                    </Card>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={settingsCycle} >\n                        {catSettings[settingsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={pageCycle} >\n                        {catListing[listing]}\n                    </PageCard>\n                 </Column>\n            </Row>\n        </>\n    );\n\n\n}\n\nfunction GroupAdmins(props) {\n\n    const modal = useModal();\n\n    var hasRights = false;\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let adminList;\n    if (props.group) {\n        adminList = [...props.group.admins];\n        adminList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeAdmins = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.admins.description0\")}<br />{t(\"group.admins.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.admins.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.admins.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.admins.add\")} callback={() => modal.show(<AddGroupAdmin gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.admins.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.admins.removeSelected\")} callback={removeAdmins} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.admins.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (props.group) ? (\n                adminList.map((admin, i) => (\n                    <UserStRow user={admin} callback={(v) => changeSelected(v, admin.id)} key={admin.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n    </>;\n}\n\n\nfunction GroupServers(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n    const { t } = useTranslation();\n\n    return <>\n        <h5>{t(\"group.servers.description0\")}<br />{t(\"group.servers.description1\")}</h5>\n        {\n            (props.group) ? (\n                props.group.servers.map((server, i) => (\n                    <ServerRow server={server} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, sid: server.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name={t(\"group.servers.add\")} to={\"/group/\" + props.gid + \"/add/server\"} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.servers.add\")} />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\nfunction GroupOwners(props) {\n\n    const modal = useModal();\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    var hasRights = false;\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let ownerList;\n    if (props.group) {\n        ownerList = [...props.group.owners];\n        ownerList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeOwners = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.owners.description0\")}<br />{t(\"group.owners.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.owners.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.owners.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.owners.add\")} callback={() => modal.show(<AddGroupOwner gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.owners.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.owners.removeSelected\")} callback={removeOwners} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.owners.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (ownerList) ? (\n                ownerList.map((owner, i) => (\n                    <UserStRow user={owner} callback={(v) => changeSelected(v, owner.id)} key={owner.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        \n    </>;\n}\n\n\nfunction GroupServerAccount(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [sid, setSid] = useState(\"\");\n    const [remid, setRemid] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n            if (remid !== props.group.cookie.remid)\n                setRemid(props.group.cookie.remid);\n            if (sid !== props.group.cookie.sid)\n                setSid(props.group.cookie.sid);\n        } \n    }, [props.group]);\n\n    const editCookies = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>\n                {t(\"group.account.description0\")}<br />{t(\"group.account.description1\")}<i>accounts.ea.com</i>\n            </h5>\n            {(props.group && !props.group.validCookie) ? (\n                <p style={{ marginTop: \"0px\", border: \"1px solid var(--color-second)\", padding: \"10px 22px\", borderRadius: \"8px\", color: \"#FF7575\", background: \"var(--color-container-v2)\" }}>\n                    {t(\"cookie.invalid\")}\n                </p>\n            ) : \"\"}\n            \n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setRemid(e.target.value)} defaultValue={remid} name={\"Remid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.remid\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setSid(e.target.value)} defaultValue={sid} name={\"Sid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.sid\")}\n                </p>\n            </Row>\n            {\n                (props.group && (sid !== props.group.cookie.sid || remid !== props.group.cookie.remid)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editCookies.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        cookie: { sid, remid }\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ): \"\"\n            }\n        </>\n    );\n}\n\nfunction GroupDiscordSettings(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [adminId, setAdminId] = useState(\"\");\n    const [modId, setModId] = useState(\"\");\n    const [serverId, setServerId] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n\n            if (serverId !== props.group.discordGroupId)\n                setServerId(props.group.discordGroupId);\n\n            if (modId !== props.group.discordModRoleId)\n                setModId(props.group.discordModRoleId);\n\n            if (adminId !== props.group.discordAdminRoleId)\n                setAdminId(props.group.discordAdminRoleId);\n\n        }\n    }, [props.group]);\n\n    const editDiscordDetails = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <> \n            <GameStatsAd />\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.description0\")}<br />{t(\"group.discord.description1\")}\n            </h5>\n            <h5>\n                {t(\"group.discord.commandList\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setServerId(e.target.value)} defaultValue={serverId} name={t(\"discord.id\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.idDescription\")}\n                </p>\n            </Row>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.permDescription0\")}<br />{t(\"group.discord.permDescription1\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setAdminId(e.target.value)} defaultValue={adminId} name={t(\"discord.adminId\")}  />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.adminIdDescription\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setModId(e.target.value)} defaultValue={modId} name={t(\"discord.modId\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.modIdDescription\")}\n                </p>\n            </Row>\n            {\n                (props.group && (serverId !== props.group.discordGroupId || modId !== props.group.discordModRoleId || adminId !== props.group.discordAdminRoleId)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editDiscordDetails.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        discordGroupId: serverId,\n                                        discordModRoleId: modId,\n                                        discordAdminRoleId: adminId\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction GroupDangerZone(props) {\n\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [groupName, setGroupName] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n\n        if (props.group && groupName !== props.group.groupName) {\n            setGroupName(props.group.groupName);    \n        }\n\n    }, [props.group]);\n\n    const editGroupName = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>{t(\"group.danger.nameChange\")}</h5>\n            <TextInput disabled={!allowedTo} callback={(e) => setGroupName(e.target.value)} defaultValue={groupName} name={t(\"group.name\")} />\n            {\n                (props.group && (groupName !== props.group.groupName)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editGroupName.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        groupName,\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"group.danger.deleteInfo0\")}<br />{t(\"group.danger.deleteInfo1\")}</h5>\n            <ButtonRow>\n                <ButtonLink style={{ color: \"#FF7575\"}} name={t(\"group.danger.delete\")} to={`/group/${props.gid}/delete/`} disabled={!allowedTo} />\n            </ButtonRow>\n        </>\n    );\n}\n\nexport function AddGroupOwner(props) {\n    var gid = props.gid;\n\n    const [nickname, setNickname] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupOwnerExecute = useMutation(\n        variables => OperationsApi.addGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n                \n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n\n            <h2>{t(\"group.owners.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e)=>setNickname(e.target.value)}/>\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => setUid(e.target.value) }/>\n            <ButtonRow>\n                <Button name={t(\"group.owners.add\")} callback={() => { AddGroupOwnerExecute.mutate({ gid, uid, nickname }); props.callback();  }} />\n            </ButtonRow>\n\n        </>\n    );\n\n}\n\nexport function AddGroupAdmin(props) {\n    var gid = props.gid;\n\n    const [addAdminState, changeState] = useState({ uid: \"\", nickname: \"\", canAdd: false });\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupAdminExecute = useMutation(\n        variables => OperationsApi.addGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const updateState = (values) => {\n        var newState = {\n            ...addAdminState,\n            ...values\n        };\n        newState.canAdd = newState.uid !== \"\";\n        changeState(newState);\n    }\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>{t(\"group.admins.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e) => updateState({nickname: e.target.value}) } />\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => updateState({uid: e.target.value}) } />\n            <ButtonRow>\n                <Button name={t(\"group.admins.add\")} disabled={!addAdminState.canAdd} callback={() => { AddGroupAdminExecute.mutate({ gid, uid: addAdminState.uid, nickname: addAdminState.nickname }); props.callback(); }} />\n            </ButtonRow>\n        </>\n    );\n\n}\n\n\nexport function AddGroup(props) {\n\n    const [addGroupState, changeState] = useState({\n        variables: {\n            groupName: \"\",\n            discordId: \"\",\n            adminRole: \"\",\n            modRole: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        roleDisplay: false,\n        canAdd: false\n    });\n    const { t } = useTranslation();\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const AddNewGroupExecute = useMutation(\n        variables => OperationsApi.addGroup(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                await queryClient.cancelQueries('devGroups');\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n                history.push(\"/\");\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.refetchQueries('devGroups');\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.roleDisplay = (newVars.discordId !== \"\");\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.groupName.length > 2);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"createGroup.main\")}</h2>\n                    \n                </Header>\n                <Card>\n                    <h5>{t(\"createGroup.description\")}</h5>\n                    <TextInput name=\"Name\" callback={(e) => { checkInputVariables({ groupName: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.discordDescription\")}\n                    </h5>\n                    <TextInput name={t(\"discord.id\")} callback={(e) => { checkInputVariables({ discordId: e.target.value }) }} />\n                    <TextInput name={t(\"discord.modId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ modRole: e.target.value }) }} />\n                    <TextInput name={t(\"discord.adminId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ adminRole: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.cookieDescription0\")}<br />\n                        {t(\"createGroup.cookieDescription1\")}<br />\n                        {t(\"createGroup.cookieDescription2\")}<br />\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                    {t(\"createGroup.acceptDescription0\")}<br />{t(\"createGroup.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"createGroup.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => AddNewGroupExecute.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function DeleteGroup(props) {\n\n    var thisGid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const DeleteGroupExecute = useMutation(\n        variables => OperationsApi.removeGroup(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('devGroups')\n                // Snapshot the previous value\n                const previousGroups = queryClient.getQueryData('devGroups')\n                // Optimistically update to the new value\n                queryClient.setQueryData('devGroups', old => {\n                    if (old) {\n                        old.data = old.data.filter(group => group.id !== gid);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroups, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('devGroups', context.previousGroups)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('devGroups')\n            },\n        }\n    );\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.danger.delete\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.danger.main\")}</h2>\n                    <p>{t(\"group.danger.check\")}</p>\n                    <ButtonRow>\n                        <ButtonLink name={t(\"group.danger.back\")} to={\"/group/\" + thisGid} />\n                        <Button name={t(\"group.danger.confirm\")} callback={() => { DeleteGroupExecute.mutate({ gid: thisGid }); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function AddGroupServer(props) {\n    var gid = props.match.params.gid;\n\n    var name = \"\", alias = \"\";\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n\n    const AddGroupServerExecute = useMutation(\n        variables => OperationsApi.addGroupServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async({ gid, name, alias }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers.push({\n                        \"addedAt\": UTCNow,\n                        \"id\": null,\n                        \"name\": name\n                    });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.serverAddMenu.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.serverAddMenu.description\")}</h2>\n                    <TextInput name={t(\"group.serverAddMenu.name\")} callback={(e) => { name = e.target.value }} />\n                    <TextInput name={t(\"group.serverAddMenu.alias\")} callback={(e) => { alias = e.target.value; }} />\n                    <ButtonRow>\n                        <Button name={t(\"group.servers.add\")} callback={() => { AddGroupServerExecute.mutate({ gid, alias, name }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function EditGroup(props) {\n    return (<></>);\n}\n\nexport function MakeOps(props) {\n   \n    const [addGroupState, changeState] = useState({\n        variables: {\n            server: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        canAdd: false\n    });\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const SetupOperations = useMutation(\n        variables => OperationsApi.setupOps(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.server.length > 1);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"operations.main\")}</h2>\n                </Header>\n                <Card>\n                    <h5>\n                        {t(\"operations.description0\")}<br />\n                        {t(\"operations.description1\")}<br /> \n                        {t(\"operations.description2\")}\n                    </h5>\n                    <TextInput name=\"Server name\" callback={(e) => { checkInputVariables({ server: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.server\")}<b>{t(\"operations.owner\")}</b>{t(\"operations.cookies\")}\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.acceptDescription0\")}<br />{t(\"operations.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"operations.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => SetupOperations.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport Account from \"./Account\";\nimport { Developer } from \"./Developer\";\nimport { Server } from \"./Server\";\nimport { Group, AddGroupOwner, EditGroup, AddGroupAdmin, AddGroup, DeleteGroup, AddGroupServer, MakeOps } from \"./Group\";\n\n//import ABSwitch from \"../testing/ABtesting\";\n\nexport default function Views(props) {\n    return (\n        <Switch>\n\n            <Route exact path=\"/account/\" component={Account} />\n\n            <Route exact path=\"/server/:sid/\" component={Server} />\n\n            <Route exact path=\"/group/new/\" component={AddGroup} />\n            <Route exact path=\"/group/:gid/\" component={Group} />\n\n            <Route exact path=\"/group/:gid/add/server\" component={AddGroupServer} />\n            <Route exact path=\"/group/:gid/add/admin/\" component={AddGroupAdmin} />\n            <Route exact path=\"/group/:gid/add/owner/\" component={AddGroupOwner} />\n\n            <Route exact path=\"/group/:gid/edit/\" component={EditGroup} />\n            <Route exact path=\"/group/:gid/delete\" component={DeleteGroup} />\n\n            <Route exact path=\"/dev/\" component={Developer} />\n\n            <Route exact path=\"/makeops/\" component={MakeOps} />\n\n        </Switch>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\n\nimport { MainPageComponent } from \"../components\";\n\nexport default function Main() {\n\n    const { isError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    if (!isLoading && !isError && user && user.auth.signedIn) {\n        return <Redirect to=\"/account/\" />\n    }\n\n    return (\n        <MainPageComponent />\n    );\n}","\nimport React from \"react\";\nimport { HashRouter, useLocation, Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './App.css';\nimport './fade.css';\n\nimport Views from \"./views\";\nimport Main from \"./views/Main\";\nimport { createHashHistory } from 'history';\nimport { Sidebar, PageContainer, PageColumn, ModalProvider } from \"./components\";\n\n\nexport const history = createHashHistory();\n\nexport const APP_VERSION = \"1.0.3\";\n\nfunction App() {\n\n    let location = useLocation();\n\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <ModalProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Main} />\n                        <Route>\n                            \n                            {/*<TopBar />*/}\n                            <Sidebar />\n                            <TransitionGroup component={PageContainer}>\n                                <CSSTransition key={location.hash} classNames=\"fade\" timeout={200}>\n                                    <PageColumn>\n                                        <Views />\n                                    </PageColumn>\n                                </CSSTransition>\n                            </TransitionGroup>\n                            \n                        </Route>\n                    </Switch>\n                </ModalProvider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\n// Browser rendering\n\nReactDOM.render(\n\n    <React.StrictMode> \n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}