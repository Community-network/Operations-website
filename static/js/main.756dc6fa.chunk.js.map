{"version":3,"sources":["components/Group.module.css","components/Sidebar.module.css","components/User.module.css","components/Card.module.css","components/TopBar.module.css","components/MainPage.module.css","components/Flex.module.css","components/Server.module.css","components/Status.module.css","components/PageContainer.module.css","components/Header.module.css","components/Buttons.module.css","JsonApi.js","api.js","components/PageContainer.js","testing/ABtesting.js","locales/config.js","components/Sidebar.js","components/Status.js","components/Buttons.js","components/Flex.js","components/Card.js","components/Header.js","components/User.js","components/Group.js","components/MainPage.js","components/Server.js","components/TopBar.js","views/Account.js","views/Developer.js","views/Server.js","views/Group.js","views/index.js","views/Main.js","App.js","index.js"],"names":["module","exports","endPoints","dev","prod","OperationsApi","asyncUser","this","logoutAndChangeUser","user","a","fetchMethod","getUserInfo","sid","playername","reason","playerId","postJsonMethod","name","gid","map","time","toString","team","getJsonMethod","devGroups","Error","groupName","discordId","modRole","adminRole","remid","type","value","answer","error","message","uid","nickname","alias","server","game","data","isWorking","window","location","constructApiUrl","method","params","paramStr","s","fetch","credentials","options","body","JSON","stringify","headers","errorHandler","postMethod","response","then","result","json","length","spawnError","code","defaultUser","discord","discriminator","avatar","auth","inGuild","isAdmin","isDeveloper","isOwner","signedIn","hasOwnProperty","PageContainer","props","className","styles","children","PageColumn","fixedTest","keys","rollout","ABSwitch","A","B","key","v","switchingTest","storageKey","localStorage","storageItemTest","getItem","testValue","Math","floor","random","setItem","getChannel","resources","translation","translationEN","translationCH","i18n","use","initReactI18next","LanguageDetector","init","fallbackLng","PageLink","to","activeClassName","PageLinkActive","title","content","AddIcon","viewBox","sideIcon","fill","d","WrenchIcon","Sidebar","useQuery","retry","userError","isLoading","devLink","accountLink","groupLinks","t","useTranslation","devOptionsContent","addGroupContent","i","permissions","isAdminOf","group","push","id","visible","HiddenSidebar","style","display","flexGrow","flexDirection","overflowY","GroupLinks","LoadingIcon","loadingIcon","ErrorIcon","errorIcon","Status","notEnabled","undefined","status","Button","background_color","width","button","disabled","onClick","callback","ButtonUrl","href","target","rel","ButtonLink","ButtonRow","buttonRow","TextInput","inputField","defaultValue","placeholder","onReset","onChange","TextInputWrapper","SmallButton","_","vars","Switch","useState","checkedSwitch","clickSwitch","switchTheSwitch","newVal","useEffect","checked","switchClassName","SwitchActive","SwitchRow","isChecked","onKeyPress","e","charCode","role","tabIndex","SwitchInner","SwitchOn","SwitchOff","SwitchHandle","maxWidth","PlayerDropdownButton","open","setOpen","container","React","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","ref","PlayerButton","dropdown","ul","option","li","ChoosePageButtons","active","setActive","useMeasure","pageCardRef","ChoosePageButtonHolder","ChoosePageButtonActive","buttons","ChoosePageButton","IconSelected","iconSelect","IconNotSelected","SelectableRow","selected","setSelcted","selectableRowSelected","selectableRow","p","Column","Row","TopRow","topRow","Card","card","CardRow","PageCard","Tag","ModalControll","isShown","show","close","ModalContext","createContext","useModal","useContext","Modal","controller","modal","modalDisabled","modalBackground","modalContent","ModalProvider","controllerState","setControllerState","Provider","Header","UserRow","alt","src","Avatar","DiscordName","DiscordNum","secure","xmlns","UserStRow","dateAdded","Date","parse","addedAt","dateString","getDate","getMonth","String","getHours","padStart","getMinutes","DiscordId","DateAdded","FakeUserStRow","UserRowSt","GroupRow","groupListRef","GroupName","manageDev","ServerRow","serverBadgePending","serverStatus","serverBadgeErr","serverBadgeOk","GameStatsAd","gameStatsAd","VBanList","getAutoBanList","isError","banList","queryClient","useQueryClient","searchWord","setSearchWord","unbanVGlobalBan","useMutation","variables","globalUnbanPlayer","onMutate","cancelQueries","previousBanList","getQueryData","setQueryData","old","filter","player","playerName","onError","err","newTodo","context","onSettled","invalidateQueries","number","BanListing","includes","GlobalBanRow","mutate","BanRow","BanDisplayName","banReason","banReasonDetailed","globalUnban","GroupLogs","getGroupLogs","logList","logs","sort","b","timeStamp","maxHeight","marginTop","log","LogRow","Array","from","EmptyLogRow","datetime","action","getUTCDate","getFullYear","logRow","logAdmin","adminName","logReason","logTime","ListItem","header","LoginButton","MainPageComponent","MainPage","MainPageCard","titleBlock","titleContent","listing","SmallText","PlayerStatsModal","r","stats","statsBlock","skill","rank","killsPerMinute","winPercent","Accuracy","headshots","killDeath","ServerRotation","info","server_status","liveUpdate","update_timestamp","timestamp","getSeconds","rotationId","setRotationId","ServerInfoColumn","ServerDescriptionRow","serverImage","url","GameInfo","ServerName","prefix","mode","serverInfo","inQue","rotate","SwitchGame","rotation","index","mapname","serverStatusArray","serverBadge","PlayerInfo","playerListRef","players","moveTeam","getDropdownOptions","onMove","kickModal","eaid","banModal","PlayerRow","PlayerIndex","PlayerLevel","PlayerName","platoon","PlayerNone","PlayerButtons","PlayerPing","ping","ServerInfoHolder","ServerInfoRow","BanList","getBanList","borderCollapse","position","top","displayName","toLowerCase","admin","banned_until","ban_timestamp","FireStarter","getStarterList","starterList","amount","StarterRow","LogList","getServerLogs","logIcon","logAction","logPlayer","toPlayer","logReasonDetailed","VipList","getVipList","vipList","VipHeader","alignItems","marginBottom","VipRow","VipName","VipRowImg","TopBar","accountPage","accountText","bar","showBar","hideSidebar","mainPage","logo","filler","Account","history","useHistory","logoutExecutor","logout","prevUser","userLine","Developer","getDevGroups","groups","g","checkGameString","l","Server","serverCard","playerNicknameTeam","match","getServer","getServerGame","gameError","runningGame","playerList","setPlayerName","addVipStatus","changeAddVipStatus","removeVipStatus","changeRemoveVipStatus","unbanStatus","changeUnbanStatus","tabsListing","setTabsListing","UnbanPlayer","unbanPlayer","RemoveVip","removeVip","AddVip","addVip","movePlayer","previousGroup","serverTabs","teamId","setTeamId","catTabs","changeRotation","banlist","viplist","firestarter","loglist","protection","ServerAutomation","settings","ServerSettings","isOpsMode","isMovableModal","f1","find","f2","ServerBanPlayer","ServerKickPlayer","giveVip","marginRight","margin","allowedTo","kickOnPingDisabled","setKickOnPingDisabled","serverState","setServerState","canApply","setCanApply","applyStatus","setApplyStatus","autoBanKick","autoBfbanKick","autoGlobalBanMessage","autoPingKick","originalServerState","autoPingKickMessage","minAutoPingKick","newCanApply","changeSrerverState","editServerSettings","editServer","onSuccess","setTimeout","getServerValue","marginLeft","console","parseInt","errorUpdating","setError","serverName","serverAlias","alignSelf","opacity","setReason","kickApplyStatus","setKickApplyStatus","KickPlayer","kickPlayer","banTime","setBanTime","globalVsClassicBan","setGlobalVsClassicBan","banApplyStatus","setBanApplyStatus","userGettingError","BanPlayer","banPlayer","GlobalBanPlayer","globalBanPlayer","servers","isDisabled","deleteIcon","Group","getGroup","staleTime","groupError","removeAdmin","removeGroupAdmin","now","toUTCString","admins","removeServer","removeOwner","removeGroupOwner","owners","setListing","settingsListing","setSettingsListing","catListing","GroupOwners","onDelete","GroupAdmins","GroupServers","vbanlist","grouplogs","catSettings","account","GroupServerAccount","GroupDiscordSettings","danger","GroupDangerZone","pageCycle","settingsCycle","hasRights","setSelected","adminList","isSelected","AddGroupAdmin","o","item","changeSelected","ownerList","AddGroupOwner","owner","setSid","setRemid","cookie","editCookies","editGroup","validCookie","border","padding","borderRadius","color","background","adminId","setAdminId","modId","setModId","serverId","setServerId","discordGroupId","discordModRoleId","discordAdminRoleId","editDiscordDetails","setGroupName","editGroupName","setNickname","setUid","AddGroupOwnerExecute","addGroupOwner","UTCNow","canAdd","addAdminState","changeState","AddGroupAdminExecute","addGroupAdmin","updateState","values","newState","AddGroup","roleDisplay","addGroupState","AddNewGroupExecute","addGroup","refetchQueries","checkInputVariables","newVariables","newGroupState","newVars","DeleteGroup","thisGid","DeleteGroupExecute","removeGroup","previousGroups","AddGroupServer","AddGroupServerExecute","addGroupServer","EditGroup","MakeOps","SetupOperations","setupOps","Views","exact","path","component","Main","createHashHistory","App","useLocation","sidebarVisisble","TransitionGroup","CSSTransition","classNames","timeout","hash","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.756dc6fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupRow\":\"Group_GroupRow__1Ew1c\",\"GroupName\":\"Group_GroupName__3G6eX\",\"gameStatsAd\":\"Group_gameStatsAd__2Eob_\",\"logAdmin\":\"Group_logAdmin__1TOK4\",\"logPlayer\":\"Group_logPlayer__1Mapx\",\"logAction\":\"Group_logAction__2UECK\",\"logReason\":\"Group_logReason__8BHZZ\",\"logRow\":\"Group_logRow__YNVWa\",\"BanRow\":\"Group_BanRow__v5SxK\",\"banReasonDetailed\":\"Group_banReasonDetailed__3HFsw\",\"BanDisplayName\":\"Group_BanDisplayName__15HMw\",\"banReason\":\"Group_banReason__1ofIN\",\"globalUnban\":\"Group_globalUnban__v-kk5\",\"serverBadgeErr\":\"Group_serverBadgeErr__1dzxV\",\"serverBadgeOk\":\"Group_serverBadgeOk__2BwfX\",\"serverBadgePending\":\"Group_serverBadgePending__3AuNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLink\":\"Sidebar_PageLink__3fxKj\",\"PageButton\":\"Sidebar_PageButton__3ug-M\",\"PageLinkActive\":\"Sidebar_PageLinkActive___nnPr\",\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"HiddenSidebar\":\"Sidebar_HiddenSidebar__2UYKR\",\"Logo\":\"Sidebar_Logo__2HFo5\",\"TopSidebar\":\"Sidebar_TopSidebar__BQCyG\",\"sideIcon\":\"Sidebar_sideIcon__72aBF\",\"GroupLinks\":\"Sidebar_GroupLinks__8lkHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserRow\":\"User_UserRow__1fzJH\",\"Avatar\":\"User_Avatar__3XgeX\",\"DiscordName\":\"User_DiscordName__j-kJJ\",\"DiscordNum\":\"User_DiscordNum__odqe3\",\"secure\":\"User_secure__ADMpb\",\"UserRowSt\":\"User_UserRowSt__D7e-x\",\"DiscordId\":\"User_DiscordId__CJ0BY\",\"DateAdded\":\"User_DateAdded__1FZZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"CardRow\":\"Card_CardRow__1NbF3\",\"PageCard\":\"Card_PageCard__3UgmB\",\"Tag\":\"Card_Tag__gwAfh\",\"modalDisabled\":\"Card_modalDisabled__1amMq\",\"modal\":\"Card_modal__2zuep\",\"modalContent\":\"Card_modalContent__QUirv\",\"modalBackground\":\"Card_modalBackground__i6ZMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"TopBar_bar__3bwJz\",\"Avatar\":\"TopBar_Avatar__3wQH5\",\"accountText\":\"TopBar_accountText__1651g\",\"barWrap\":\"TopBar_barWrap__13cVT\",\"mainPage\":\"TopBar_mainPage__28WNk\",\"logo\":\"TopBar_logo__3pe6W\",\"showBar\":\"TopBar_showBar__28SUF\",\"filler\":\"TopBar_filler__3ie_h\",\"accountPage\":\"TopBar_accountPage__3E8XS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPageCard\":\"MainPage_MainPageCard__20zHQ\",\"MainPage\":\"MainPage_MainPage__2QR_f\",\"titleBlock\":\"MainPage_titleBlock__3Cu7O\",\"listing\":\"MainPage_listing__1JWXi\",\"ListItem\":\"MainPage_ListItem__1n0An\",\"titleContent\":\"MainPage_titleContent__QdrEG\",\"LoginButton\":\"MainPage_LoginButton__3Flzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Flex_Column__3cQ9_\",\"Row\":\"Flex_Row__3SC-0\",\"topRow\":\"Flex_topRow__30giJ\",\"Grow\":\"Flex_Grow__f7am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SmallText\":\"Server_SmallText__3uOYG\",\"ServerInfoColumn\":\"Server_ServerInfoColumn__35hJK\",\"ServerInfoRow\":\"Server_ServerInfoRow__2Aa7V\",\"serverImage\":\"Server_serverImage__3m2nE\",\"ServerName\":\"Server_ServerName__2irVE\",\"GameInfo\":\"Server_GameInfo__X3Hhq\",\"ServerDescriptionColumn\":\"Server_ServerDescriptionColumn__3pNJs\",\"ServerDescriptionRow\":\"Server_ServerDescriptionRow__12wsx\",\"SwitchGame\":\"Server_SwitchGame__3MjHo\",\"SettingsRow\":\"Server_SettingsRow__2yzpg\",\"SmallInput\":\"Server_SmallInput__1fZ_Z\",\"PlayerRow\":\"Server_PlayerRow__29Z8B\",\"PlayerName\":\"Server_PlayerName__3tLfO\",\"PlayerIndex\":\"Server_PlayerIndex__37b5y\",\"PlayerPing\":\"Server_PlayerPing__31qCm\",\"PlayerLevel\":\"Server_PlayerLevel__1Z7Ur\",\"PlayerNone\":\"Server_PlayerNone__2swFS\",\"playerBackgroundInfo\":\"Server_playerBackgroundInfo__27qMt\",\"PlayerButtons\":\"Server_PlayerButtons__3dQvb\",\"PlayerButton\":\"Server_PlayerButton__1b5UO\",\"serverStatus\":\"Server_serverStatus__2bq0e\",\"serverStatusOk\":\"Server_serverStatusOk__g8kKz\",\"serverStatusErr\":\"Server_serverStatusErr__3kLiy\",\"BanRow\":\"Server_BanRow__2CH-s\",\"VipRow\":\"Server_VipRow__11VYU\",\"BanDisplayName\":\"Server_BanDisplayName__1mYLa\",\"VipRowImg\":\"Server_VipRowImg__2uQKq\",\"VipName\":\"Server_VipName__1vh7h\",\"VipHeader\":\"Server_VipHeader__17wNH\",\"logAdmin\":\"Server_logAdmin__h3EXT\",\"logPlayer\":\"Server_logPlayer__3ubbb\",\"logAction\":\"Server_logAction__chE4g\",\"logReason\":\"Server_logReason__1SNMU\",\"logRow\":\"Server_logRow__3r-zZ\",\"logReasonDetailed\":\"Server_logReasonDetailed__uRKTP\",\"logIcon\":\"Server_logIcon__2eNHD\",\"serverBadgeErr\":\"Server_serverBadgeErr__3txr9\",\"serverBadgeOk\":\"Server_serverBadgeOk__1vnEH\",\"serverBadgePending\":\"Server_serverBadgePending__KFlxu\",\"serverBadge\":\"Server_serverBadge__2dEUL\",\"serverStatusArray\":\"Server_serverStatusArray__SklvZ\",\"liveUpdate\":\"Server_liveUpdate__2AkO3\",\"livePulse\":\"Server_livePulse__2PWwz\",\"liveUpdateText\":\"Server_liveUpdateText__3iOfu\",\"statsBlock\":\"Server_statsBlock__14xqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1LWe8\",\"loadingIcon\":\"Status_loadingIcon__3owGX\",\"Loading\":\"Status_Loading__v1uza\",\"errorIcon\":\"Status_errorIcon__2HXFb\",\"Shake\":\"Status_Shake__30h0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContainer\":\"PageContainer_PageContainer__1PlzU\",\"PageColumn\":\"PageContainer_PageColumn__3Qegy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3VoE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRow\":\"Buttons_buttonRow__dKjZj\",\"button\":\"Buttons_button__1VKNK\",\"PlayerButton\":\"Buttons_PlayerButton__3mZnu\",\"container\":\"Buttons_container__np2ep\",\"dropdown\":\"Buttons_dropdown__13J8f\",\"ul\":\"Buttons_ul__3tJo8\",\"li\":\"Buttons_li__1sX4Q\",\"TextInput\":\"Buttons_TextInput__35GbL\",\"TextInputWrapper\":\"Buttons_TextInputWrapper__3RxVL\",\"SmallButton\":\"Buttons_SmallButton__3rzhd\",\"Switch\":\"Buttons_Switch__39fTc\",\"SwitchActive\":\"Buttons_SwitchActive__2ViHx\",\"SwitchInner\":\"Buttons_SwitchInner__3LnS9\",\"SwitchHandle\":\"Buttons_SwitchHandle__2b8wJ\",\"SwitchOff\":\"Buttons_SwitchOff__3Oaf-\",\"SwitchOn\":\"Buttons_SwitchOn__1_Jsb\",\"SwitchRow\":\"Buttons_SwitchRow__3WA6c\",\"ChoosePageButton\":\"Buttons_ChoosePageButton__1-OpM\",\"ChoosePageButtonActive\":\"Buttons_ChoosePageButtonActive__13GmV\",\"ChoosePageButtonHolder\":\"Buttons_ChoosePageButtonHolder__VfFyz\",\"selectableRow\":\"Buttons_selectableRow__V-YSj\",\"selectableRowSelected\":\"Buttons_selectableRowSelected__AlZEt\",\"iconSelect\":\"Buttons_iconSelect__EU1hH\"};","\nconst MODE = \"prod\";\n\nconst endPoints = {\n    dev: \"https://homedev.gametools.network/api/\",\n    prod: \"https://manager-api.gametools.network/api/\"\n}\n\nexport default class JsonClient {\n    constructor() {\n        this.isWorking = true;\n        this.user = this.getUserInfo();\n    }\n    openLoginPage() {\n        window.location = this.constructApiUrl(\"login\");\n    }\n    constructApiUrl(method, params) {\n        params = params || {};\n        let paramStr = \"\";\n        for (let s in params) {\n            paramStr += s + \"=\" + params[s] + \"&\";\n        }\n        if (paramStr !== \"\") paramStr = \"?\" + paramStr;\n        const apiEP = endPoints[MODE];\n        return apiEP + method + paramStr;\n    }\n    async fetchMethod(method, params) {\n        return fetch(this.constructApiUrl(method, params), {\n            credentials: \"include\"\n        });\n    }\n    async postMethod(method, params) {\n        return fetch(this.constructApiUrl(method, {}), params);\n    }\n    /// Returns Promise\n    postJsonMethod(method, params) {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(params),\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return this.errorHandler(this.postMethod(method, options));\n    }\n    /// Returns Promise\n    getJsonMethod(method, params) {\n        return this.errorHandler(this.fetchMethod(method, params));\n    }\n    async errorHandler(response) {\n        return response.then(\n            result => {\n                return result.json().then(\n                    json => {\n                        if (\"error\" in json) {\n                            throw json.error;\n                        }\n                        if (\"data\" in json) {\n                            if (json.data.length > 0) {\n                                if (\"error\" in json.data[0]) {\n                                    throw json.data[0].error;\n                                }\n                            }\n                        }\n                        return json;\n                    },\n                    error => this.spawnError(error, 600)\n                );\n            },\n            error => this.spawnError(error, response.code)\n        );\n    }\n    spawnError(error, code) {\n        throw {\n            \"error\": {\n                \"message\": error,\n                \"code\": code,\n            }\n        };\n    }\n    async getUserInfo() {\n        const defaultUser = {\n            discord: {\n            name: \"\",\n            discriminator: 0,\n            avatar: \"\"\n            },\n            auth: {\n                inGuild: false,\n                isAdmin: false,\n                isDeveloper: false,\n                isOwner: false,\n                signedIn: false\n            }\n        };\n        let response = await this.getJsonMethod(\"getinfo\");\n        if (!response.hasOwnProperty(\"error\")) {\n            return response;\n        }\n        return defaultUser;\n    }\n}","import JsonClient from \"./JsonApi\";\n\nexport class ApiProvider extends JsonClient {\n\n    logout() {\n        var asyncUser = this.logoutAndChangeUser();\n        this.user = asyncUser;\n    }\n\n    async logoutAndChangeUser() {\n        await this.fetchMethod(\"logout/\");\n        var user = await this.getUserInfo();\n        return user;\n    }\n\n    async kickPlayer({ sid, playername, reason, playerId }) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"changeplayer\", {\n                \"request\": \"kickPlayer\",\n                \"playername\": playername,\n                \"playerid\": playerId,\n                \"serverid\": sid,\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"changeplayer\", {\n            \"request\": \"kickPlayer\",\n            \"playername\": playername,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async globalBanPlayer({ name, reason, gid, playerId}) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"addautoban\", {\n                \"playername\": name,\n                \"playerid\": playerId,\n                \"groupid\": gid,\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"addautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": reason\n        });\n    }\n\n    async globalUnbanPlayer({ name, gid}) {\n        return await this.postJsonMethod(\"delautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": \"\"\n        });\n    }\n\n    async changeRotation({ sid, map }) {\n        return await this.postJsonMethod(\"changelevel\", {\n            \"mapnumber\": map,\n            \"serverid\": sid\n        });\n    }\n\n    async banPlayer({ name, reason, time, sid, playerId }) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"changeserver\", {\n                \"request\": \"addServerBan\",\n                \"playername\": name,\n                \"playerid\": playerId,\n                \"serverid\": sid,\n                \"bantime\": time.toString(),\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"bantime\": time.toString(),\n            \"reason\": reason\n        }); \n    }\n\n    async unbanPlayer({ name, reason, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async addVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async removeVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async movePlayer({ sid, team, name }) {\n        return await this.postJsonMethod(\"moveplayer\", {\n            \"teamid\": team,\n            \"playername\": name,\n            \"serverid\": sid\n        });\n    }\n\n    async getBanList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"bannedList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getStarterList({ sid }) {\n        return await this.getJsonMethod(\"firestarters\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getAutoBanList({ gid }) {\n        return await this.getJsonMethod(\"autoban\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getVipList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"vipList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getServerLogs({ sid }) {\n        return await this.getJsonMethod(\"tailserverlog\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getGroupLogs({ gid }) {\n        return await this.getJsonMethod(\"tailuserlog\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getDevGroups() {\n        var devGroups = await this.getJsonMethod(\"devgroups\");\n        if (\"error\" in devGroups) {\n            throw Error(\"Error on server.\");\n        }\n        return devGroups;\n    }\n\n    async addGroup({ groupName, discordId, modRole, adminRole, sid, remid }) {\n        return await this.postJsonMethod(\"addgroup\", {\n            \"groupname\": groupName,\n            \"adminroleid\": adminRole,\n            \"discordid\": discordId,\n            \"modroleid\": modRole,\n            \"remid\": remid,\n            \"sid\": sid,\n        });\n    }\n\n    async removeGroup({ gid }) {\n        return await this.postJsonMethod(\"delgroup\", {\n            \"groupId\": gid,\n        });\n    }\n\n    async editGroup({ gid, type, value }) {\n        var answer = await this.postJsonMethod(\"editgroup\", {\n            \"groupid\": gid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n    async getGroup(gid) {\n        return await this.getJsonMethod(\"groups\", { \"groupid\": gid });\n    }\n\n    async addGroupOwner({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addowner\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupServer({ gid, name, alias }) {\n        return await this.postJsonMethod(\"addserver\", {\n            \"servername\": name,\n            \"serveralias\": alias,\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupAdmin({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addadmin\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupAdmin({ gid, uid }) {\n        return await this.postJsonMethod(\"deladmin\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupOwner({ gid, uid }) {\n        return await this.postJsonMethod(\"delowner\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async setupOps({ server, sid, remid }) {\n        return await this.postJsonMethod(\"makeoperations\", {\n            \"servername\": server,\n            \"sid\": sid,\n            \"remid\": remid,\n        });\n    }\n\n\n    async getServer(sid) {\n        return await this.getJsonMethod(\"server\", { \"serverid\": sid });\n    }\n\n    async getServerGame(sid) {\n        var game = await this.getJsonMethod(\"servers\", { \"serverid\": sid });\n        if (\"error\" in game.data[0]) {\n            throw Error(game.data[0].error);\n        } else {\n            return game;\n        }\n    }\n\n    async removeServer({ gid, sid }) {\n        return await this.postJsonMethod(\"delserver\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n        });\n    }\n\n    async renameServer({ name, sid }) {\n        return await this.postJsonMethod(\"renameserver\", {\n            \"serverid\": sid,\n            \"servername\": name,\n        });\n    }\n\n    async changeServerAlias({ gid, alias, sid }) {\n        return await this.postJsonMethod(\"serveralias\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n            \"serveralias\": alias,\n        });\n    }\n\n    async editServer({ sid, value }) {\n        var answer = await this.postJsonMethod(\"editserver\", {\n            \"serverid\": sid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n\n}\n\nexport const OperationsApi = new ApiProvider();","import React from \"react\";\nimport styles from \"./PageContainer.module.css\";\n\n\nexport function PageContainer(props) {\n    return (\n        <div className={styles.PageContainer}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport function PageColumn(props) {\n    return (\n        <div className={styles.PageColumn}>\n            {props.children}\n        </div>\n    );\n}\n","import rollout from \"../rollout.json\";\n\nconst fixedTest = null;\nconst keys = rollout[\"AB\"];\n\n// Switch for AB testing. Shows user A or B option to test new features\nexport default function ABSwitch(A, B, key) {\n    if (!(key in keys)) {\n        return A;\n    }\n    return switchingTest(A, B, getChannel());\n}\n\n// A or B channel\nexport function getChannel() {\n    const storageKey = 'TestAB';\n    if (fixedTest) {\n        return fixedTest;\n    }\n    if (localStorage) {\n        let storageItemTest = localStorage.getItem(storageKey);\n        if (storageItemTest) {\n            return storageItemTest;\n        } else {\n            const testValue = Math.floor(Math.random() * 10) % 2;\n            localStorage.setItem(storageKey, testValue);\n            return testValue;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction switchingTest(A, B, v) {\n    return (v === 1) ? B : A;\n}","import i18n from 'i18next';\nimport translationEN from './languages/en-US.json';\n// import translationTR from './languages/tr-TR.json';\n// import translationRU from './languages/ru-RU.json';\nimport translationCH from './languages/zh-CN.json';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const resources = {\n  \"en-US\": {\n    translation: translationEN,\n  },\n  // \"tr-TR\": {\n  //   translation: translationTR,\n  // },\n//   \"ru-RU\": {\n//     translation: translationRU,\n//   },\n  \"zh-CN\": {\n    translation: translationCH,\n  }\n}\n\ni18n.use(initReactI18next).use(LanguageDetector).init({\n  resources,\n  fallbackLng: \"en-US\"\n});\n\nexport const apiLanguage = {\n  \"zh-cn\": \"zh-tw\",\n}\n\nexport const getLanguage = () => {\n  let language = window.localStorage.i18nextLng.toLowerCase()\n  if (language in apiLanguage) {\n      language = apiLanguage[language]\n  }\n  return language\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory, Redirect } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./Sidebar.module.css\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\n\nfunction TopSidebar() {\n    const { t } = useTranslation();\n    return (\n        <div className={styles.TopSidebar}>\n            <Link to=\"/\" title={t(\"sidebar.main\")}>\n                <img src=\"/release-logo.png\" className={styles.Logo} />\n            </Link>\n        </div>\n    );\n}\n\nfunction PageLink(props) {\n    return (\n        <div className={styles.PageLink}>\n            <NavLink to={props.to} activeClassName={styles.PageLinkActive} title={props.name}>{props.content || props.name}</NavLink>\n        </div>\n    );\n}\n\nfunction PageButton(props) {\n    return (\n        <a className={styles.PageButton} target=\"_blank\" rel=\"noopener noreferrer\" href={props.href} title={props.name}>\n            <span onClick={props.onClick}>{props.name}</span>\n        </a>\n    );\n}\n\nfunction AddIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>);\n}\n\nfunction WrenchIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M13.78 15.3L19.78 21.3L21.89 19.14L15.89 13.14L13.78 15.3M17.5 10.1C17.11 10.1 16.69 10.05 16.36 9.91L4.97 21.25L2.86 19.14L10.27 11.74L8.5 9.96L7.78 10.66L6.33 9.25V12.11L5.63 12.81L2.11 9.25L2.81 8.55H5.62L4.22 7.14L7.78 3.58C8.95 2.41 10.83 2.41 12 3.58L9.89 5.74L11.3 7.14L10.59 7.85L12.38 9.63L14.2 7.75C14.06 7.42 14 7 14 6.63C14 4.66 15.56 3.11 17.5 3.11C18.09 3.11 18.61 3.25 19.08 3.53L16.41 6.2L17.91 7.7L20.58 5.03C20.86 5.5 21 6 21 6.63C21 8.55 19.45 10.1 17.5 10.1Z\" />\n    </svg>);\n}\n\n\n\nexport function Sidebar(props) {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user, {\n\n        retry: 0,\n     \n      });\n\n    var devLink = \"\", accountLink = \"\", groupLinks = \"\";\n    const { t } = useTranslation();\n\n    if (!isLoading) {\n        if (!userError && user && user.auth.signedIn) {\n\n            const devOptionsContent = (\n                <>\n                    <span>{t(\"sidebar.devOptions\")}</span>\n                    <WrenchIcon />\n                </>\n            );\n\n            const addGroupContent = (\n                <>\n                    <span>{t(\"sidebar.createGroup\")}</span>\n                    <AddIcon />\n                </>\n            );\n\n            if (user.auth.isDeveloper) {\n                devLink = <PageLink to=\"/dev/\" name={t(\"sidebar.devOptions\")} content={devOptionsContent} />;\n            }\n\n            accountLink = [\n                ABSwitch(\"\", <PageLink key={0} to=\"/home/\" name=\"Home page\" />, \"homePage\"),\n                //<PageLink key={1} to=\"/account/\" name=\"Account\" />,\n                <PageLink key={2} to=\"/group/new/\" name=\"Create Group\" content={addGroupContent} />,\n                <PageLink key={3} to=\"/makeops/\" name=\"Make Operations\" />,\n            ];\n            groupLinks = [];\n            for (let i in user.permissions.isAdminOf) {\n                let group = user.permissions.isAdminOf[i];\n                groupLinks.push(<PageLink to={ \"/group/\" + group.id } name={group.groupName} key={i} />);\n            }\n                \n        } else {\n            return <Redirect to=\"/\" />;\n        }\n    }\n\n    \n\n    return (\n        <div className={props.visible ? styles.Sidebar : styles.HiddenSidebar }>\n            {/*<TopSidebar />*/}\n            <div style={{ display: \"flex\", flexGrow: 2, flexDirection: \"column\", overflowY: \"auto\" }}>\n                {accountLink}\n                {devLink}\n                <div className={styles.GroupLinks}>\n                    {groupLinks}\n                </div>\n            </div>\n            {/* <p style={{ paddingLeft: \"48px\", fontSize: \"12px\" }}>v{APP_VERSION} channel {(getChannel() === 0) ? \"A\" : \"B\"}</p> */}\n        </div>\n    );\n\n}","import React from \"react\";\nimport styles from \"./Status.module.css\";\n\n\nfunction LoadingIcon() {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.loadingIcon}>\n            <path fill=\"currentColor\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    );\n}\n\nfunction ErrorIcon(props) {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.errorIcon}>\n            <path fill=\"currentColor\" d=\"M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z\" />\n        </svg>\n    );\n}\n\nexport function Status(props) {\n    const notEnabled = (props.status === undefined || props.status === null) ;\n    return (\n        <div className={notEnabled ? \"\" : styles.status}>\n            {(notEnabled) ?  \"\" : (props.status) ? <LoadingIcon /> : <ErrorIcon />}\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Buttons.module.css\";\nimport { Status } from \"./Status\";\nimport { useMeasure } from 'react-use';\n\n\nexport function Button(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}<Status status={props.status} /></button>\n    );\n}\n\nexport function ButtonUrl(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\"><button value={props.value} onClick={props.onClick} className={styles.button} disabled={props.disabled} title={props.name} style={style}>{props.name}<Status status={props.status} /></button></a>\n    );\n}\nexport function ButtonLink(props) {\n    if (props.disabled) {\n        return <Button name={props.name} disabled={true} />\n    }\n    return (\n        <NavLink style={props.style} className={styles.button} to={props.to} title={props.name}>{props.name}</NavLink>\n    );\n}\n\nexport function ButtonRow(props) {\n    return (\n        <div className={styles.buttonRow}>{props.children}</div>\n    );\n}\n\n\nexport function TextInput(props) {\n\n    var inputField = (props.value === undefined) ? \n    (<input defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />) : \n    (<input value={props.value} defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />)\n    \n    return (\n        <div className={styles.TextInputWrapper}>\n            {inputField}\n        </div>\n    );\n}\n\nexport function SmallButton(props) {\n    if (props.disabled) {\n        return (\n            \"\"\n        );\n    }\n    return (\n        <div className={styles.SmallButton} onClick={_ => props.callback(props.vars)} title={props.name}>{props.content || props.name}</div>\n    );\n}\n\nexport function Switch(props) {\n\n    const [checkedSwitch, clickSwitch] = useState(false);\n\n    const switchTheSwitch = () => {\n        var newVal = !checkedSwitch;\n        clickSwitch(newVal);\n        if (props.callback) props.callback(newVal);\n    };\n\n    useEffect(() => {\n        if (props.checked !== null) {\n            clickSwitch(props.checked);\n        }\n    }, [props.checked])\n\n    /*  If user uses tabs, make it clickable on Enter key */\n    const SwitchOnenter = (e) => {\n        if (e.charCode === 13) switchTheSwitch();\n    };\n\n    const switchClassName = checkedSwitch ? styles.SwitchActive : styles.Switch;\n\n    return (\n        <div className={styles.SwitchRow}>\n            <div className={switchClassName} onClick={switchTheSwitch} isChecked={checkedSwitch} onKeyPress={SwitchOnenter} role=\"switch\" tabIndex=\"1\">\n                <span className={styles.SwitchInner}>\n                    <span className={styles.SwitchOn}></span>\n                    <span className={styles.SwitchOff}></span>\n                </span>\n                <span className={styles.SwitchHandle}></span>\n            </div>\n            <span style={{maxWidth: \"300px\"}}>{props.name}</span>\n        </div>\n    );\n}\n\nexport function PlayerDropdownButton(props) {\n    const [open, setOpen] = useState(false);\n\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.container} ref={container}>\n            <button type=\"button\" className={styles.PlayerButton} onClick={() => setOpen(!open)}>{props.name}</button>\n            {open && (<div className={styles.dropdown}>\n                <ul className={styles.ul}>\n                    {\n                        props.options.map(option => <li className={styles.li} onClick={() => {setOpen(!open); return option.callback()}}>{option.name}</li>)\n                    }\n                </ul>\n            </div>)}\n        </div>\n    );\n}\n\n\nexport function ChoosePageButtons(props) {\n\n    const [active, setActive] = useState(0);\n    const [pageCardRef, { width }] = useMeasure();\n    let maxWidth = props.maxWidth || 900\n\n    const [open, setOpen] = useState(false);\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.ChoosePageButtonHolder} ref={pageCardRef}>\n            {width < maxWidth ? \n                <>\n                    <div \n                        className={styles.ChoosePageButtonActive}\n                        title={props.buttons[active].name}\n                    >\n                        {props.buttons[active].content || props.buttons[active].name}\n                    </div>\n                    <div\n                        className={styles.ChoosePageButton}\n                        onClick={() => setOpen(!open)}\n                        ref={container}\n                    >☰\n                    {open && (<div className={styles.dropdown}>\n                        <ul className={styles.ul}>\n                            {\n                                \n                                props.buttons.map((button, i) => {\n                                    return (\n                                <li \n                                    key={i}\n                                    className={styles.li}\n                                    onClick={_ => { setActive(i); button.callback() }}\n                                    title={button.name}\n                                    tabIndex=\"1\" \n                                >\n                                    {button.name}\n                                </li>)\n                            })\n                            }\n                        </ul>\n                    </div>)}\n                    </div>\n                    \n                </>\n            :\n                props.buttons.map((button, i) => (\n                    <div\n                        key={i}\n                        isChecked={i === active}\n                        role=\"switch\"\n                        className={(i === active) ? styles.ChoosePageButtonActive : styles.ChoosePageButton}\n                        onClick={_ => { setActive(i); button.callback() }}\n                        title={button.name}\n                        tabIndex=\"1\" \n                    >\n                        {button.content || button.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n    \n}\n\nfunction IconSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n        </svg>\n    );\n} \n\nfunction IconNotSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\" />\n        </svg>\n    );\n} \n\nexport function SelectableRow(props) {\n    const [selected, setSelcted] = React.useState(false);\n    const select = (p) => {\n        setSelcted(p);\n        props.callback(p);\n    }\n    return (\n        <div className={(selected) ? styles.selectableRowSelected : styles.selectableRow} onClick={() => select(!selected)}>\n            {\n                (selected) ? <IconSelected /> : <IconNotSelected />\n            }\n            {props.children}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport styles from \"./Flex.module.css\";\n\n\nexport function Column(props) {\n    return (\n        <div className={styles.Column}>{props.children}</div>\n    );\n}\n\nexport function Row(props) {\n    return (\n        <div className={styles.Row}>{props.children}</div>\n    );\n}\n\nexport function TopRow(props) {\n    return (\n        <div className={styles.topRow}>{props.children}</div>\n    );\n}\n\nexport function Grow(props) {\n    return (\n        <div className={styles.Grow}>{props.children}</div>\n    );\n}","import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nimport { ChoosePageButtons } from \"./Buttons.js\";\n\nexport function Card(props) {\n    return (\n        <div className={styles.card} style={props.style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function CardRow(props) {\n    return <span className={styles.CardRow}>{props.children}</span>;\n}\n\nexport function PageCard(props) {\n    return (\n        <div>\n            <ChoosePageButtons buttons={props.buttons} maxWidth={props.maxWidth} />\n            <div className={styles.PageCard} style={props.style}>\n                {props.children}\n             </div>\n        </div>\n    );\n}\n\nexport function Tag(props) {\n    return (\n        <span className={styles.Tag}>\n            {props.children}\n        </span>\n    );\n}\n\n\n\nconst ModalControll = {\n    isShown: false,\n    children: \"\",\n    show: (e) => {},\n    close: (e) => {},\n}\n\nconst ModalContext = React.createContext(ModalControll);\n\nexport const useModal = () => React.useContext(ModalContext);\n\nfunction Modal(props) {\n\n    const controller = useModal();\n\n    return (\n        <div className={props.show ? styles.modal : styles.modalDisabled}>\n            <div className={styles.modalBackground} onClick={() => controller.close()}></div>\n            <div className={styles.modalContent}>{props.content}</div>\n        </div>\n    );\n}\n\nexport function ModalProvider(props) {\n\n    const [controllerState, setControllerState] = React.useState({\n        isShown: false,\n        children: \"\",\n    });\n\n    const showModal = (e) => {\n        setControllerState(s => ({\n            ...s,\n            isShown: true,\n            children: e,\n        }));\n    }\n\n    const closeModal = () => {\n        setControllerState(s => ({\n            ...s,\n            isShown: false,\n        }));\n    }\n\n    return (\n        <ModalContext.Provider value={{...controllerState, show: showModal, close: closeModal}}>\n            <Modal show={controllerState.isShown} content={controllerState.children} />\n            {props.children}\n        </ModalContext.Provider>\n    );\n}","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\n\nexport function Header(props) {\n    return (\n        <div className={styles.Header}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport styles from \"./User.module.css\";\nimport { SelectableRow } from \"./Buttons\";\n\nexport function UserRow(props) {\n    var user = props.discord;\n    return (\n        <div className={styles.UserRow}>\n            <img alt=\"\" src={user.avatar} className={styles.Avatar} />\n            <div className={styles.DiscordName}>\n                {user.name}\n                <span className={styles.DiscordNum}>\n                    {user.discriminator}\n                </span>\n            </div>\n            <div className={styles.secure}>\n                <svg viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 12C6.39782 12 6.77935 11.842 7.06066 11.5607C7.34196 11.2794 7.5 10.8978 7.5 10.5C7.5 9.6675 6.825 9 6 9C5.60217 9 5.22064 9.15804 4.93934 9.43934C4.65804 9.72065 4.5 10.1022 4.5 10.5C4.5 10.8978 4.65804 11.2794 4.93934 11.5607C5.22064 11.842 5.60217 12 6 12ZM10.5 5.25C10.8978 5.25 11.2794 5.40804 11.5607 5.68934C11.842 5.97065 12 6.35218 12 6.75V14.25C12 14.6478 11.842 15.0294 11.5607 15.3107C11.2794 15.592 10.8978 15.75 10.5 15.75H1.5C1.10218 15.75 0.720644 15.592 0.43934 15.3107C0.158035 15.0294 0 14.6478 0 14.25V6.75C0 5.9175 0.675 5.25 1.5 5.25H2.25V3.75C2.25 2.75544 2.64509 1.80161 3.34835 1.09835C4.05161 0.395088 5.00544 0 6 0C6.49246 0 6.98009 0.0969967 7.43506 0.285452C7.89003 0.473907 8.30343 0.75013 8.65165 1.09835C8.99987 1.44657 9.27609 1.85997 9.46455 2.31494C9.653 2.76991 9.75 3.25754 9.75 3.75V5.25H10.5ZM6 1.5C5.40326 1.5 4.83097 1.73705 4.40901 2.15901C3.98705 2.58097 3.75 3.15326 3.75 3.75V5.25H8.25V3.75C8.25 3.15326 8.01295 2.58097 7.59099 2.15901C7.16903 1.73705 6.59674 1.5 6 1.5Z\" fill=\"#55F165\" />\n                </svg>\n                Logged in\n            </div>\n        </div>\n    );\n}\n\nexport function UserStRow(props) {\n    var user = props.user;\n    var dateAdded = new Date(Date.parse(user.addedAt));\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var dateString = `${dateAdded.getDate()} ${months[dateAdded.getMonth()]} ${String(dateAdded.getHours()).padStart(2, '0')}:${String(dateAdded.getMinutes()).padStart(2, '0')}`;\n    return (\n        <SelectableRow callback={props.callback}>\n            <div className={styles.DiscordName}>\n                {user.name}\n            </div>\n            <div className={styles.DiscordId}>\n                {user.id}\n            </div>\n            <div className={styles.DateAdded}>\n                {dateString}\n            </div>\n        </SelectableRow>\n    );\n}\n\nexport function FakeUserStRow(props) {\n    return (\n        <div className={styles.UserRowSt} />\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Group.module.css\";\nimport { useMeasure } from 'react-use';\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { OperationsApi } from \"../api\";\nimport { TextInput } from \"./Buttons\";\nimport { Tag } from \"./Card\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function GroupRow(props) {\n    const { t } = useTranslation();\n    var group = props.group;\n\n    const [groupListRef, { width }] = useMeasure();\n    return (\n        <Link ref={groupListRef} className={styles.GroupRow} to={\"/group/\" + group.id}>\n            <span className={styles.GroupName}>{group.groupName}</span>\n            {width < 350? <span></span>:\n                <span className={styles.manageDev}>{t(\"dev.manage\")}</span>}\n        </Link>\n    );\n}\n\nexport function ServerRow(props) {\n    var server = props.server;\n    const { t } = useTranslation();\n\n    // If not yet setteled\n    if (server.id === null) {\n        return (\n            <div className={styles.GroupRow}>\n                <span className={styles.GroupName}>\n                    {server.name}\n                    <span className={styles.serverBadgePending}>\n                        {t(\"serverStatus.pending\")}\n                    </span>\n                </span>\n                {props.button}\n            </div>\n        );\n    }\n\n    const serverStatus = (() => {\n        switch (server.status) {\n            case \"noServer\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"serverStatus.noServer\")}\n                    </span>\n                )\n            case \"noAdmin\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"serverStatus.noAdmin\")}\n                    </span>\n                )\n            case \"pending\":\n                return (\n                    <span className={styles.serverBadgePending}>\n                        {t(\"serverStatus.pending\")}\n                    </span>\n                )\n            default:\n                return (\n                    <span className={styles.serverBadgeOk}>\n                        {t(\"serverStatus.running\")}\n                    </span>\n                )    \n        }\n    })();\n\n    return (\n        <div className={styles.GroupRow}>\n            <Link className={styles.GroupName} to={\"/server/\" + server.id}>\n                {server.name}\n                {serverStatus}\n            </Link>\n            {props.button}\n        </div>\n    );\n}\n\nexport function GroupAdminAccount(props) {\n\n    var { remid, sid } = props.cookie;\n\n    return (\n        <div className={styles.AdminAccount}>\n        </div>\n    );\n\n}\n\nexport function GameStatsAd(props) {\n    const { t } = useTranslation();\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className={styles.gameStatsAd} href=\"https://discord.com/oauth2/authorize?client_id=714524944783900794&scope=bot&permissions=83968\">\n            <img src=\"./game-stats.png\" />\n            <span>{t(\"group.discord.gamestats\")}</span>\n        </a>\n    );\n}\n\n\nexport function VBanList(props) {\n    const gid = props.gid;\n    const { isError, data: banList, error } = useQuery('globalBanList' + gid, () => OperationsApi.getAutoBanList({ gid }));\n\n    const queryClient = useQueryClient();\n\n    const [searchWord, setSearchWord] = useState(\"\");\n    const { t } = useTranslation();\n\n    const unbanVGlobalBan = useMutation(\n        variables => OperationsApi.globalUnbanPlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('globalBanList' + gid)\n                // Snapshot the previous value\n                const previousBanList = queryClient.getQueryData('globalBanList' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('globalBanList' + gid, old => {\n                    old.data= old.data.filter(player => player.playerName !== name);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousBanList, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('globalBanList' + context.gid, context.previousBanList)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('globalBanList' + context.gid)\n            },\n        }\n    );\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"group.vban.description0\")} <b>{t(\"group.vban.description1\", {number: banList.data.length})}</b>. <Tag>{t(\"eBeta\")}</Tag>\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div className={styles.BanListing}>\n                {\n                    banList.data.filter(p => p.playerName.includes(searchWord)).map(\n                        (player, i) => (<GlobalBanRow player={player} key={i} callback={() => unbanVGlobalBan.mutate({gid, name: player.playerName})}/>)\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\n\nfunction GlobalBanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <div className={styles.BanRow}>\n            <span className={styles.BanDisplayName}>{player.playerName}</span>\n            <span className={styles.banReason}>{\n                ((player.reason === \"\") ? t(\"group.vban.noReason\") : t(\"group.vban.reason\"))\n            }</span>\n            <span className={styles.banReasonDetailed}>{player.reason}</span>\n            <span className={styles.globalUnban} onClick={props.callback}>{t(\"group.vban.unban\")}</span>\n        </div>\n    );\n}\n\nexport function GroupLogs(props) {\n    const gid = props.gid;\n    const { isError, data: logList, error } = useQuery('groupogList' + gid, () => OperationsApi.getGroupLogs({ gid }));\n    const { t } = useTranslation();\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>{t(\"group.logs.description\")}</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const log = props.log;\n\n    const actionIcon = (() => {\n        switch (log.action) {\n            case \"editGroup\":\n                return \"\";\n            case \"addUser\":\n                return \"\";\n            case \"addOwner\":\n                return \"\"\n            case \"addGroup\":\n                return \"\";\n            case \"removeOwner\":\n                return \"\";\n            case \"removeUser\":\n                return \"\"\n            default:\n                return \"\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${datetime.getHours()}:${datetime.getMinutes()}`;\n\n    return (\n        <div className={styles.logRow}>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logReason}>{\n                log.reason\n            }</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}","import React from \"react\";\nimport styles from \"./MainPage.module.css\";\nimport { OperationsApi } from \"../api\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nfunction ListItem(props) {\n    return (\n        <div className={styles.ListItem}>\n            <h2>{props.header}</h2>\n            <p>{props.children}</p>\n        </div>\n    );\n}\n\nfunction LoginButton() {\n    const { t } = useTranslation();\n    return (\n        <a className={styles.LoginButton} href={OperationsApi.constructApiUrl(\"login\")}>{t(\"mainPage.login\")}</a>\n    );\n}\n\nexport function MainPageComponent(props) {\n    const { t } = useTranslation();\n    return (\n        <div className={styles.MainPage}>\n            <div className={styles.MainPageCard}>\n                <div className={styles.titleBlock}>\n                    <div className={styles.titleContent}>\n                        <h1>{t(\"mainPage.main\")}</h1>\n                        <p>{t(\"mainPage.description\")}</p>\n                        <LoginButton />\n                    </div>\n                </div>\n                <div className={styles.listing}>\n                    <h2>{t(\"mainPage.featureList.main\")}</h2>\n                    <ListItem header={t(\"mainPage.featureList.0.heading\")}>{t(\"mainPage.featureList.0.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.1.heading\")}>{t(\"mainPage.featureList.1.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.2.heading\")}>{t(\"mainPage.featureList.2.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.3.heading\")}>{t(\"mainPage.featureList.3.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.4.heading\")}>{t(\"mainPage.featureList.4.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.5.heading\")}>{t(\"mainPage.featureList.5.body\")}</ListItem>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Server.module.css\";\nimport { useQuery } from 'react-query';\nimport { Button, ButtonRow, PlayerDropdownButton, ButtonLink, TextInput } from \"./Buttons\";\nimport { useModal } from \"./Card\";\nimport { OperationsApi } from \"../api\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\nimport { useMeasure } from 'react-use';\n\nexport function SmallText(props) {\n    return (<span className={styles.SmallText}>{props.children}</span>);\n}\n\nfunction PlayerStatsModal(props) {\n    const player = props.player;\n    const { isError, data: stats, isLoading } = useQuery('playerStatsByEAID' + player, () => fetch(\"https://api.gametools.network/bf1/stats/?name=\"+player+\"&lang=en-us&platform=pc&=\").then(r=>r.json()));\n    const { t } = useTranslation();\n    \n    const statsBlock = (!isLoading && !isError) ? (\n        <div className={styles.statsBlock}>\n            <h5>{t(\"server.playerStats.skill\")}{stats.skill}</h5>\n            <h5>{t(\"server.playerStats.rank\")}{stats.rank}</h5>\n            <h5>{t(\"server.playerStats.killsPerMinute\")}{stats.killsPerMinute}</h5>\n            <h5>{t(\"server.playerStats.winPercent\")}{stats.winPercent}</h5>\n            <h5>{t(\"server.playerStats.accuracy\")}{stats.Accuracy}</h5>\n            <h5>{t(\"server.playerStats.headshots\")}{stats.headshots}</h5>\n            <h5>{t(\"server.playerStats.killDeath\")}{stats.killDeath}</h5>\n            <h5>{t(\"server.playerStats.id\")}{stats.id}</h5>\n            <a href={\"https://gametools.network/stats/pc/playerid/\"+stats.id+\"?name=\"+player} target=\"_blank\">{t(\"server.playerStats.toStatsPage\")}</a>\n        </div>\n    ) : t(\"server.playerStats.loading\");\n\n    return (   \n        <>\n            <h2>{t(\"server.playerStats.main\", {player: player})}</h2>\n            {statsBlock}\n        </>\n    );\n}\n\nexport function EditableText(props) {\n    return (<p>{props.children}</p>);\n}\n\nexport function SettingsRow(props) {\n    return <div className={styles.SettingsRow}>{props.children}</div>;\n}\n\nexport function SmallIntInput(props) {\n    return <input type=\"text\" className={styles.SmallInput} defaultValue={props.value} />;\n}\n\nexport function ServerInfo(props) {\n    var server = props.server;\n    return (\n        <>\n        </>\n    );\n}\n\nexport function ServerRotation(props) {\n    const { t } = useTranslation();\n    var server = null, game = null;\n    if (props.game && props.game.data && props.game.data.length > 0) {\n        server = props.game.data[0];\n        game = server.info;\n    }\n\n    var server_status = (\n        <span className={styles.serverBadgePending}>\n            {t(\"serverStatus.pending\")}\n        </span>\n    );\n    \n    if (server) {\n        if (server.isAdmin) {\n            server_status = (\n                <span className={styles.serverBadgeOk}>\n                    <span className={styles.liveUpdate}></span>\n                    {t(\"serverStatus.running\")}\n                </span>\n            )  \n        } else {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    {t(\"serverStatus.noAdmin\")}\n                </span>\n            )\n        }\n        if (server.serverStatus === \"noServer\") {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    {t(\"serverStatus.noServer\")}\n                </span>\n            )\n        }\n    }\n    var update_timestamp = \"\";\n    if (server) {\n        const timestamp = new Date(server.update_timestamp);\n        update_timestamp =  `${timestamp.getHours()}:${timestamp.getMinutes()}:${timestamp.getSeconds()}`;\n    }\n    var [rotationId, setRotationId] = useState(\"\"); \n    return (\n        <div className={styles.ServerInfoColumn}>\n            <div className={styles.ServerDescriptionRow}>\n                <img className={styles.serverImage} src={(game) ? game.url : \"/no-server-image.png\"} />\n                <div className={styles.GameInfo}>\n                    <span className={styles.ServerName}>{(game) ? game.prefix : t(\"loading\") }</span>\n                    <SmallText>{(game) ? `${game.map} - ${game.mode} - ${game.serverInfo} ${t(\"server.game.info\", {inQue: game.inQue})}` : \"-\"}</SmallText>\n                </div>\n            </div>\n            <ButtonRow>\n                <Button name={t(\"server.game.restart\")} disabled={!game} callback={_ => props.rotate((game) ? game.rotationId : null)} />\n                <select className={styles.SwitchGame} value={rotationId} onChange={e => setRotationId(e.target.value)}>\n                    <option value=\"\">{t(\"server.game.mapSwitch\")}</option>\n                    {(game) ? game.rotation.map((value, i) =>\n                        <option value={value.index} key={i}>{value.mapname} - {value.mode}</option>\n                    ) : \"\"}\n                </select>\n                {(rotationId !== \"\") ? <Button name={t(\"apply\")} disabled={!game} callback={_ => { props.rotate((game) ? rotationId : null); setRotationId(\"\"); }} /> : \"\"}\n            </ButtonRow>\n            <div className={styles.serverStatusArray}>\n                <span>{server_status}</span>\n                <span className={styles.serverBadge}>{t(\"server.game.playerlistUpdate\")} - {update_timestamp}</span>\n            </div>\n            \n        </div>\n    );\n}\n\nexport function PlayerInfo(props) {\n    const { t } = useTranslation();\n    const modal = useModal();\n    const [playerListRef, { width }] = useMeasure();\n    var info = props.game.data[0].players[props.team].players;\n\n    var moveTeam = (props.team === \"0\") ? \"1\" : \"2\";\n\n    let getDropdownOptions = (player) => {\n        return [\n            { name: t(\"server.action.move\"), callback: () => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam, playerId: player.playerId}) },\n            { name: t(\"server.action.kick\"), callback: () => modal.show(<props.kickModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>) },\n            { name: t(\"server.action.ban\"), callback: () => modal.show(<props.banModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>) },\n        ]\n    };\n\n    if (info.length > 0 && info[0] === undefined) return \"\";\n\n    return (\n        <div ref={playerListRef}>\n        {info.map((player, i) => \n            <div className={styles.PlayerRow} key={i}>\n\n                <span className={styles.PlayerIndex}>\n                    {i + 1}\n                </span>\n                <span className={styles.PlayerLevel}>\n                    {\n                        (player.rank === null) ? \"??\" : player.rank\n                    }\n                </span>\n                <span className={styles.PlayerName} onClick={_=>modal.show(<PlayerStatsModal player={player.name} />)}>\n                    {\n                        (player.platoon === \"\") ? \"\" : `[${player.platoon}] ` \n                    }\n                    {\n                        player.name\n                    }\n                </span>\n                <span className={styles.PlayerNone} />\n\n\n                {width < 600 ? \n                    <div>\n                        <PlayerDropdownButton options={getDropdownOptions(player)} name=\"☰\"></PlayerDropdownButton>\n                    </div>:\n                <>\n                    <div className={styles.PlayerButtons}>\n                        <div className={styles.PlayerButton} onClick={_ => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam, playerId: player.playerId})}>\n                            {t(\"server.action.move\")}\n                        </div>\n                        <div className={styles.PlayerButton} onClick={_ => modal.show(<props.kickModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>)}>\n                            {t(\"server.action.kick\")}\n                        </div>\n                        <div className={styles.PlayerButton} onClick={_ => modal.show(<props.banModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>)}>\n                            {t(\"server.action.ban\")}\n                        </div>\n                    </div>\n\n                    <span className={styles.PlayerPing}>\n                        {player.ping}\n                        <svg viewBox=\"0 0 24 24\">\n                            <path fill=\"currentColor\" d=\"M4,6V4H4.1C12.9,4 20,11.1 20,19.9V20H18V19.9C18,12.2 11.8,6 4,6M4,10V8A12,12 0 0,1 16,20H14A10,10 0 0,0 4,10M4,14V12A8,8 0 0,1 12,20H10A6,6 0 0,0 4,14M4,16A4,4 0 0,1 8,20H4V16Z\" />\n                        </svg>\n                    </span>\n                </>\n                }\n                \n            </div>\n        )}\n    </div>\n    )}\n\nexport function ServerInfoHolder(props) {\n    return (\n        <div className={styles.ServerInfoRow}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function BanList(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: banList, error } = useQuery('serverBanList' + sid, () => OperationsApi.getBanList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"server.banList.description0\")}<br />\n                {t(\"server.banList.description1\")} <b>{t(\"server.banList.description2\", {number: banList.data.length})}</b>.\n                {t(\"server.banList.description3\")}<br />{t(\"server.banList.description4\")}\n            </h5>\n            <TextInput name={t(\"search\")} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>{t(\"server.banList.table.playerName\")}</th>\n                        <th>{t(\"server.banList.table.playerId\")}</th>\n                        <th>{t(\"server.banList.table.reason\")}</th>\n                        <th>{t(\"server.banList.table.admin\")}</th>\n                        <th>{t(\"server.banList.table.until\")}</th>\n                        <th>{t(\"server.banList.table.timestamp\")}</th>\n                    </thead>\n                    <tbody>\n                        {\n                            banList.data.filter(p => p.displayName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<BanRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction BanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.displayName}</td>\n            <td title={t(\"server.banList.table.playerId\")}>{player.id}</td>\n            <td>{player.reason}</td>\n            <td>{player.admin}</td>\n            <td>{player.banned_until}</td>\n            <td>{player.ban_timestamp}</td>\n        </tr>\n    );\n}\n\nexport function FireStarter(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: starterList, error } = useQuery('serverStarterList' + sid, () => OperationsApi.getStarterList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!starterList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    starterList.data.sort((a, b) => b.amount - a.amount);\n\n    return (\n        <div>\n            <h5>\n                {t(\"server.firestarterList.description0\")}<br />{t(\"server.firestarterList.description1\")}\n            </h5>\n            <TextInput name={t(\"search\")} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>{t(\"server.firestarterList.table.playerName\")}</th>\n                        <th>{t(\"server.firestarterList.table.playerId\")}</th>\n                        <th>{t(\"server.firestarterList.table.amount\")}</th>\n                    </thead>\n                    <tbody>\n                        {\n                            starterList.data.filter(p => p.playerName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<StarterRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction StarterRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.platoon !== \"\"? `[${player.platoon}] `: null}{player.playerName}</td>\n            <td title={t(\"server.firestarterList.table.playerId\")}>{player.playerId}</td>\n            <td>{player.amount}</td>\n        </tr>\n    );\n}\n\nexport function LogList(props) {\n    \n    const sid = props.sid;\n    const { isError, data: logList, error } = useQuery('serverLogList' + sid, () => OperationsApi.getServerLogs({ sid }));\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>Log list</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const { t } = useTranslation();\n    const modal = useModal();\n    const log = props.log;\n    const action = (() => {\n        switch (log.action) {\n            case \"addServerBan\":\n                return t(\"server.logs.reasons.addServerBan\");\n            case \"kickPlayer\":\n                return t(\"server.logs.reasons.kickPlayer\");\n            case \"removeServerBan\":\n                return t(\"server.logs.reasons.removeServerBan\");\n            case \"addServerVip\":\n                return t(\"server.logs.reasons.addServerVip\");\n            case \"movePlayer\":\n                return t(\"server.logs.reasons.movePlayer\");\n            case \"removeServerVip\":\n                return t(\"server.logs.reasons.removeServerVip\");\n            default:\n                return t(\"server.logs.reasons.magic\");\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${String(datetime.getHours()).padStart(2, '0')}:${String(datetime.getMinutes()).padStart(2, '0')}`;\n\n    if (log.action === \"autokick-ping\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M19.5,5.5V18.5H17.5V5.5H19.5M12.5,10.5V18.5H10.5V10.5H12.5M21,4H16V20H21V4M14,9H9V20H14V9M7,14H2V20H7V14Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.pingChecker\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-globalBans\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.vBan\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-bfban\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.bfban\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>{t(\"server.logs.reason\")}</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (action === \"moved\" && log.toPlayer === \"server\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z\" />                </svg>\n                <span className={styles.logAdmin}>{log.adminName}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n    return (\n        <div className={styles.logRow}>\n            <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n            </svg>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logAction}>{action}</span>\n            <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n            <span className={styles.logReason}>{\n                ((log.reason === \"\") ? t(\"server.logs.noReason\") : t(\"server.logs.reason\"))\n            }</span>\n            <span className={styles.logReasonDetailed}>{log.reason}</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}\n\nexport function VipList(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: vipList, error } = useQuery('serverVipList' + sid, () => OperationsApi.getVipList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n\n    if (!vipList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n    \n\n    return (\n        <div>\n            <div className={styles.VipHeader}>\n                <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <h5 style={{ marginBottom: 0 }}>\n                        {t(\"server.vipList.description0\")}<br />\n                        {t(\"server.vipList.description1\")}<b>{t(\"server.vipList.description2\", {number: vipList.data.length})}</b>.\n                    </h5>\n                </div>\n            </div>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <tr>\n                            <th>{t(\"server.vipList.table.playerName\")}</th>\n                            <th>{t(\"server.vipList.table.playerId\")}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            vipList.data.filter(p => p.displayName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<VipRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction VipRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <tr className={styles.VipRow}>\n            <td title={player.displayName} className={styles.VipName}>\n                <div className={styles.VipRowImg}><img src={player.avatar} alt=\"\" /></div>\n                <span>{player.displayName}</span>\n            </td>\n            <td title={t(\"server.vipList.table.playerId\")}>{player.id}</td>\n        </tr>\n    );\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./TopBar.module.css\";\nimport { useTranslation } from 'react-i18next';\n\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\nexport function TopBar(props) {\n    const { t } = useTranslation();\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var accountPage = \"\";\n    \n    if (!userError && !isLoading && user && user.auth.signedIn) {\n        accountPage = (\n            <Link to=\"/account/\" title={user.discord.name} className={styles.accountPage}>\n                {/*<span>{user.discord.name}</span>*/}\n                <img src={user.discord.avatar} className={styles.Avatar} />\n                <span className={styles.accountText}>{t(\"account.main\")}</span>\n            </Link>\n        );\n    }\n\n\n    return (\n        <>\n            <div className={styles.bar}>\n\n\n\n                <button className={styles.showBar} onClick={props.hideSidebar}>\n                    <svg viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\" />\n                    </svg>\n                </button>\n                <Link to=\"/\" title=\"Main page\" className={styles.mainPage}>\n                    <img src=\"/logo-release.png\" className={styles.logo} />\n                </Link>\n                <div className={styles.filler} ></div>\n\n                {accountPage}\n\n            </div>\n\n        </>\n    );\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { Redirect, useHistory} from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, CardRow, UserRow, TopRow, Button, ButtonRow, ButtonUrl } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Account() {\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                });\n                history.push('/');\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n    \n    const { t } = useTranslation();\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var userLine = \"\";\n\n    if (!userError && !isLoading && user) {\n        if (!user.auth.signedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            userLine = <UserRow discord={user.discord} />;\n        }\n    } else if (userError && !isLoading) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <TopRow>\n            <Column>\n                <Header>\n                    <h2>{t(\"account.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"account.discordProfile\")}</h2>\n                    {userLine}\n                    <p></p>\n                    <ButtonRow>\n                        <ButtonUrl name={t(\"sidebar.logout\")} onClick={() => { logoutExecutor.mutate({}); }} name={t(\"sidebar.logout\")} />\n                        <ButtonUrl href=\"https://discord.gametools.network/\" name={t(\"sidebar.help\")} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n                <Header />\n                <Card>\n                    <h2>{t(\"account.permissions.main\")}</h2>\n                    <CardRow>{t(\"account.permissions.admin\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.server\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.system\")}</CardRow>\n                </Card>\n            </Column>\n        </TopRow>\n    );\n\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, GroupRow, Row } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function Developer() {\n    const { t } = useTranslation();\n    const { isLoading, isError, data } = useQuery('devGroups', () => OperationsApi.getDevGroups())\n    \n    var groups = [];\n\n    if (!isLoading && !isError && data) {\n        data.data.map((g, i) => {\n            groups.push(<GroupRow key={i} group={g} />);\n        });\n    } else if (isError) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"dev.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"dev.listGroups\")}</h2>\n                    {groups}\n                    <ButtonRow>\n                        <ButtonLink name={t(\"dev.addGroup\")} to=\"/group/new/\" />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, Switch, BanList, Column, Card, Header, ServerRotation, ServerInfoHolder, TopRow, ButtonRow, Button, PageCard, Row, VipList, LogList, TextInput, PlayerInfo, FireStarter } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\n\n/*\n    Checks string to not have special characters and be les or 30 symbols in length\n*/\nfunction checkGameString(v) {\n    // Not sure wich ones should work, this seems right, maybe some else\n    const allowed_keys = \"abcdefghijklmnopqrstuvwxyz0123456789_-.: &?!\";\n    for (let l of v) {\n        if (!allowed_keys.includes(l.toLowerCase())) return false;\n    }\n    return (v.length <= 30);\n}\n\nexport function Server(props) {\n    var sid = props.match.params.sid;\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n    const modal = useModal();\n\n    const { isError: serverError, data: server } = useQuery('server' + sid, () => OperationsApi.getServer(sid));\n    const { isError: gameError, data: runningGame } = useQuery('serverGame' + sid, () => OperationsApi.getServerGame(sid));\n\n    var serverCard = \"\";\n    var playerList = \"\";\n    var playerInGame = false;\n    var playerNicknameTeam;\n\n    var [playerName, setPlayerName] = useState(\"\");\n\n    var [addVipStatus, changeAddVipStatus] = useState({ name: \"Add Vip\", status: false });\n    var [removeVipStatus, changeRemoveVipStatus] = useState({ name: \"Remove Vip\", status: false });\n    var [unbanStatus, changeUnbanStatus] = useState({ name: \"Unban\", status: false });\n    \n    var [tabsListing, setTabsListing] = useState(\"info\");\n\n    const UnbanPlayer = useMutation(\n        v => OperationsApi.unbanPlayer(v), {\n        onMutate: async () => {\n            changeUnbanStatus({ name: \"Pending..\", status: true });\n            return { status: unbanStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeUnbanStatus(context.status);\n        },\n    }\n    );\n\n    const RemoveVip = useMutation(\n        v => OperationsApi.removeVip(v), {\n        onMutate: async () => {\n            changeRemoveVipStatus({ name: \"Pending..\", status: true });\n            return { status: removeVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeRemoveVipStatus(context.status);\n        },\n    }\n    );\n\n    const AddVip = useMutation(\n        v => OperationsApi.addVip(v), {\n        onMutate: async () => {\n            changeAddVipStatus({ name: \"Pending..\", status: true });\n            return { status: addVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeAddVipStatus(context.status);\n        },\n    }\n    );\n\n    const movePlayer = useMutation(\n        variables => OperationsApi.movePlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, team, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                //await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                // queryClient.setQueryData('serverGame' + sid, old => {\n                //     if (team === \"1\") {\n                //         old.data[0].players[1].players.push(old.data[0].players[0].players.find(e => (!e) ? false : e.name === name));\n                //         old.data[0].players[0].players = old.data[0].players[0].players.filter(p => (!p) ? false : p.name !== name);\n                //     } else {\n                //         old.data[0].players[0].players.push(old.data[0].players[1].players.find(e => (!e) ? false : e.name === name));\n                //         old.data[0].players[1].players = old.data[0].players[1].players.filter(p => (!p) ? false : p.name !== name);\n                //     }\n                //     return old;\n                // })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                //queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const serverTabs = [\n        {\n            name: t(\"server.game.main\"),\n            callback: () => setTabsListing(\"info\"),\n        },\n        {\n            name: t(\"server.banList.main\"),\n            callback: () => setTabsListing(\"banlist\"),\n        },\n        {\n            name: t(\"server.vipList.main\"),\n            callback: () => setTabsListing(\"viplist\"),\n        },\n        {\n            name: t(\"server.firestarterList.main\"),\n            callback: () => setTabsListing(\"firestarter\"),\n        },\n        {\n            name: t(\"server.logs.main\"),\n            callback: () => setTabsListing(\"loglist\"),\n        },\n        {\n            name: t(\"server.protection.main\"),\n            callback: () => setTabsListing(\"protection\"),\n        },\n        {\n            name: t(\"server.settings.main\"),\n            callback: () => setTabsListing(\"settings\"),\n        }\n    ];\n\n    const [teamId, setTeamId] = useState(false);\n\n    const catTabs = {\n        info: (\n            <ServerInfoHolder>\n                <ServerRotation game={runningGame} rotate={id => OperationsApi.changeRotation({ sid, map: id })} />\n            </ServerInfoHolder>\n        ),\n        banlist: <BanList sid={sid} />,\n        viplist: <VipList sid={sid} />,\n        firestarter: <FireStarter sid={sid} />,\n        loglist: <LogList sid={sid} />,\n        protection: (\n            <>\n                <ServerAutomation server={server} sid={sid} />\n            </>\n        ),\n        settings: ( \n            <>\n                <ServerSettings server={server} sid={sid} />\n            </>\n        )\n    }\n\n    //if (!serverError && server && !gameError && runningGame) {\n    serverCard = (\n        <Row>\n            <Column>\n                <PageCard buttons={serverTabs} >\n                    {catTabs[tabsListing]}\n                </PageCard>\n            </Column>\n        </Row>\n    );\n    //}\n\n    var isOpsMode = false;\n    var isMovableModal = !gameError && runningGame && !(\"error\" in runningGame.data[0].players[0]) && (runningGame.data[0].players[0].players.length > 0 || runningGame.data[0].players[1].players.length > 0) && (runningGame.data[0].players[0].players !== undefined || runningGame.data[0].players[1].players.players !== undefined );\n    //console.log(runningGame.data[0].players[0].players.length)\n    if (!gameError && runningGame && isMovableModal) {\n\n        isOpsMode = runningGame.data[0].info.mode === \"Operations\";\n\n        var f1 = runningGame.data[0].players[0].players.find(e => (!e) ? false : e.name === playerName);\n        var f2 = runningGame.data[0].players[1].players.find(e => (!e) ? false : e.name === playerName);\n\n        if (f1 !== undefined) {\n            playerNicknameTeam = \"1\";\n        } else if(f2 !== undefined) {\n            playerNicknameTeam = \"2\";\n        } else {\n            isMovableModal = false;\n        }\n\n        var playerInGame = (playerName !== \"\") &&\n            (\n                (f1 !== undefined) || (f2 !== undefined)\n            );\n\n        playerList = (\n            <TopRow>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamOne\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"0\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamTwo\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"1\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer}  giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n            </TopRow>\n        )\n    }\n\n    const movePlayerPopup = (vars) => {\n        if (isMovableModal) {\n            movePlayer.mutate(vars);\n        } else {\n            modal.show(\n                <>\n                    <h2>Player is not found on the server!</h2>\n                    <p>Choose a side to move player to, if you think it is an error.</p>\n                    <ButtonRow>\n                        <h5 style={{margin: \"0 6px 0 12px\"}}>Team 1</h5>\n                        <Switch checked={teamId} callback={(v) => setTeamId(v)}/>\n                        <h5 style={{margin: \"0\"}}>Team 2</h5>\n                    </ButtonRow>\n                    <Button disabled={playerName === \"\"} name=\"Move\" callback={_ => {movePlayer.mutate({ sid, team: teamId ? \"1\" : \"2\", name: playerName }); modal.close()}} />\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"server.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            {serverCard}\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.console.main\")}</h2>\n                        <Row>\n                            <TextInput name=\"Player name\" callback={e => setPlayerName(e.target.value)} style={{\n                                marginRight: 12,\n                            }}/>\n                            <ButtonRow>\n                                <Button disabled={playerName === \"\"} name=\"Kick\" callback={_ => modal.show(<ServerKickPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\"} name=\"Move\" callback={_ => movePlayerPopup({ sid, team: playerNicknameTeam, name: playerName })} />\n                                <Button disabled={playerName === \"\"} name=\"Ban\" callback={_ => modal.show(<ServerBanPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\" || unbanStatus.status} name={unbanStatus.name} callback={_ => UnbanPlayer.mutate({ sid, name: playerName, reason: \"\" })} />\n                                <Button disabled={playerName === \"\" || addVipStatus.status || isOpsMode} name={addVipStatus.name} callback={_ => AddVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                                <Button disabled={playerName === \"\" || removeVipStatus.status || isOpsMode} name={removeVipStatus.name} callback={_ => RemoveVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                            </ButtonRow>\n                        </Row>\n                    </Card>\n                </Column>\n            </Row>\n            {playerList}\n        </>\n    );\n\n}\n\nfunction ServerAutomation(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n    const [kickOnPingDisabled, setKickOnPingDisabled] = useState(false);\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n\n        if (props.server) {\n            const { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage, minAutoPingKick } = props.server;\n            const originalServerState = { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage, minAutoPingKick };\n            if (serverState === null) {\n                setServerState(originalServerState);\n                setKickOnPingDisabled(autoPingKick !== 0);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                if (serverState.autoPingKick === 0) setKickOnPingDisabled(false);\n                setCanApply(newCanApply);\n            }\n           \n        }\n        \n\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.protection.title\")}</h2>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"server.protection.vBanDescription0\")}<br />\n                {t(\"server.protection.vBanDescription1\")}\n                <b>{t(\"server.protection.vBanDescription2\")}</b>\n                {t(\"server.protection.vBanDescription3\")}<br />\n                {t(\"server.protection.vBanDescription4\")}\n            </h5>\n            <Switch checked={getServerValue(\"autoBanKick\")} name={t(\"server.protection.vBanEnable\")} callback={(v) => changeSrerverState({ autoBanKick: v })}/>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"server.protection.vbanReasonDesc0\")}<br />\n                {t(\"server.protection.vbanReasonDesc1\")}\n            </h5>\n            \n            <TextInput\n                disabled={!allowedTo || (serverState && !serverState.autoBanKick)}\n                callback={(e) => changeSrerverState({ autoGlobalBanMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoGlobalBanMessage\")}\n                name={t(\"server.protection.vBanMsg\")}\n            />\n            <h5 style={{ marginTop: \"30px\" }}>{t(\"server.protection.bfbanDescription\")}<i>bfban.com</i></h5>\n            <Switch checked={getServerValue(\"autoBfbanKick\")} name={t(\"server.protection.bfbanEnable\")} callback={(v) => changeSrerverState({ autoBfbanKick: v })} />\n            <h5 style={{ marginTop: \"30px\" }}>{t(\"server.protection.pingKickDescription\")}</h5>\n            <Switch checked={kickOnPingDisabled} name={t(\"server.protection.pingKickEnable\")} callback={(v) => { setKickOnPingDisabled(v); (!v) ?changeSrerverState({ autoPingKick: 0 }) : changeSrerverState({ autoPingKick: 200 })  }} />\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") changeSrerverState({ autoPingKick: parseInt(e.target.value) })\n                        }\n                    }\n                }\n                value={(serverState) ? serverState.autoPingKick : \"\" }\n                name={t(\"server.protection.pingKickAmount\")}\n            />\n            <TextInput\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={(e) => changeSrerverState({ autoPingKickMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoPingKickMessage\")}\n                name={t(\"server.protection.pingKickMsg\")}\n            />\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.protection.pingKickMinDesc\")}</h5>\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value < 0);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") {\n                                changeSrerverState({ minAutoPingKick: parseInt(e.target.value) })\n                            }\n                        }\n                    }\n                }\n                defaultValue={getServerValue(\"minAutoPingKick\")}\n                value={(serverState) ? serverState.minAutoPingKick : \"\" }\n                name={t(\"server.protection.minAutoPingKick\")}\n            />\n            {   \n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\nfunction ServerSettings(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    useEffect(() => {\n        if (props.server) {\n            const { serverName, serverAlias } = props.server;\n            const originalServerState = { serverName, serverAlias };\n            if (serverState === null) {\n                setServerState(originalServerState);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                setCanApply(newCanApply);\n            }\n\n        }\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.settings.title\")}</h2>\n\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.settings.nameDescription\")}</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverName: e.target.value })}\n                defaultValue={getServerValue(\"serverName\")}\n                name={t(\"server.settings.name\")}\n            />\n\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.settings.aliasDescription\")}</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverAlias: e.target.value })}\n                defaultValue={getServerValue(\"serverAlias\")}\n                name={t(\"server.settings.alias\")}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction ServerKickPlayer(props) {\n\n    var { sid, eaid } = props;\n    const modal = useModal();\n    const { t } = useTranslation();\n    var [reason, setReason] = useState(\"\");\n    var [kickApplyStatus, setKickApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n\n    const KickPlayer = useMutation(\n        v => OperationsApi.kickPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid, reason }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                setKickApplyStatus(true);\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            onSuccess: () => {\n                setKickApplyStatus(null);\n                modal.close();\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (error, newTodo, context) => {\n                setKickApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setKickApplyStatus(null), 3000);\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    const checkReason = (v) => (checkGameString(v)) ? setReason(v) : false;\n\n    return (\n        <>\n            <h2>{t(\"server.kickMenu.main\", {name: props.eaid})}</h2>\n            <h5 style={{maxWidth: \"400px\", margin: \"6px 0\"}}>{t(\"server.kickMenu.reasonDescription\")}</h5>\n            <TextInput name={t(\"server.kickMenu.reason\")} value={reason} callback={(e) => checkReason(e.target.value)} />\n            <ButtonRow>\n                <Button status={kickApplyStatus} name={t(\"server.kickMenu.confirm\")} disabled={reason === \"\"} callback={() => { KickPlayer.mutate({ sid, eaid, reason, playername: props.eaid, playerId: props.playerId }); history.push(`/server/${props.sid}/`); }} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (kickApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}\n\n\nfunction ServerBanPlayer(props) {\n    const modal = useModal();\n    var { sid, eaid } = props;\n    const { t } = useTranslation();\n\n    const history = useHistory();\n    const [reason, setReason] = useState(\"\");\n    const [banTime, setBanTime] = useState(0);\n    const [globalVsClassicBan, setGlobalVsClassicBan] = useState(false);\n\n    var [banApplyStatus, setBanApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    const { isError: userGettingError, data: user } = useQuery('user', () => OperationsApi.user);\n\n    const BanPlayer = useMutation(\n        v => OperationsApi.banPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n                modal.close();\n            },\n        }\n    );\n\n    const GlobalBanPlayer = useMutation(\n        v => OperationsApi.globalBanPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n\n            },\n        }\n    );\n\n    var gid = null;\n\n    if (user) {\n        user.permissions.isAdminOf.map(\n            group => {\n                for (let someSid of group.servers) {\n                    if (someSid === sid) {\n                        gid = group.id;\n                    }\n                }\n            }\n        )\n    }\n\n    const isDisabled =\n        reason === \"\" ||\n        banTime < 0 ||\n        banApplyStatus !== null ||\n        userGettingError || !user || gid == null;\n\n    const checkReason = (v) => (checkGameString(v)) ? setReason(v) : false;\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.banMenu.main\", {name: props.eaid})} </h2>\n            <h5 style={{maxWidth: \"300px\"}} >{t(\"server.banMenu.reasonDescription\")}</h5>\n            <TextInput value={reason} name={t(\"server.banMenu.reason\")} callback={(e) => checkReason(e.target.value)} />\n            <Switch value={globalVsClassicBan} name={t(\"server.banMenu.vBanOption\")} callback={ (v) => setGlobalVsClassicBan(v) } />\n            <h5 style={{maxWidth: \"300px\"}} >{t(\"server.banMenu.tempbanDesc0\")}<br />{t(\"server.banMenu.tempbanDesc1\")}<br />{t(\"server.banMenu.tempbanDesc2\")}</h5>\n            <TextInput type={t(\"server.banMenu.tempbanAmount\")} name=\"Ban time\" defaultValue={0} callback={(e) => setBanTime(e.target.value)} disabled={globalVsClassicBan} />\n            <ButtonRow>\n                <Button\n                    name={t(\"server.banMenu.confirm\")}\n                    style={{ maxWidth: \"144px\" }}\n                    disabled={isDisabled}\n                    callback={() => {\n                        if (globalVsClassicBan) {\n                            GlobalBanPlayer.mutate({ gid, reason, name: props.eaid, playerId: props.playerId });\n                        } else {\n                            BanPlayer.mutate({ sid, eaid, reason, name: props.eaid, time: banTime, playerId: props.playerId });\n                        }\n                    }}\n                    status={banApplyStatus} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (banApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, GroupLogs, VBanList, GameStatsAd, Column, Card, Header, ButtonLink, ButtonRow, Button, UserStRow, Row, ServerRow, FakeUserStRow, TextInput, SmallButton, PageCard } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nconst deleteIcon = (\n    <svg viewBox=\"0 0 24 24\" style={{ width: '16px' }}>\n        <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n    </svg>\n);\n\n\nexport function Group(props) {\n\n    var gid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n\n    const { error: groupError, data: groups } = useQuery('groupId' + gid, () => OperationsApi.getGroup(gid), { staleTime: 30000 });\n    const { error: userError, data: user } = useQuery('user', () => OperationsApi.user);\n\n\n    const removeAdmin = useMutation(\n        variables => OperationsApi.removeGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins = old.data[0].admins.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const removeServer = useMutation(\n        variables => OperationsApi.removeServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, sid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers = old.data[0].servers.filter(server => server.id !== sid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n\n    const removeOwner = useMutation(\n        variables => OperationsApi.removeGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners = old.data[0].owners.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n    var group = (groups && groups.data && groups.data.length > 0) ? groups.data[0] : null;\n    const [listing, setListing] = useState(\"servers\");\n    const [settingsListing, setSettingsListing] = useState(\"account\");\n    const { t } = useTranslation();\n\n    const catListing = {\n        owners: <GroupOwners group={group} user={user} gid={gid} onDelete={removeOwner} />,\n        admins: <GroupAdmins group={group} user={user} gid={gid} onDelete={removeAdmin} />,\n        servers: <GroupServers group={group} user={user} gid={gid} onDelete={removeServer} />,\n        vbanlist: <VBanList user={user} gid={gid} />,\n        grouplogs: <GroupLogs gid={gid} />,\n    }\n\n\n    const catSettings = {\n        account: <GroupServerAccount gid={gid} user={user} group={group} />,\n        discord: <GroupDiscordSettings gid={gid} user={user} group={group} />,\n        danger: <GroupDangerZone gid={gid} user={user} group={group} />,\n    }\n\n    const pageCycle = [\n        {\n            name: t(\"group.servers.main\"),\n            callback: () => setListing(\"servers\"),\n        },\n        {\n            name: t(\"group.admins.main\"),\n            callback: () => setListing(\"admins\"),\n        },\n        {\n            name: t(\"group.owners.main\"),\n            callback: () => setListing(\"owners\"),\n        },\n        {\n            name: t(\"group.vban.main\"),\n            callback: () => setListing(\"vbanlist\"),\n        },\n        {\n            name: t(\"group.logs.main\"),\n            callback: () => setListing(\"grouplogs\"),\n        }\n    ]\n\n    const settingsCycle = [\n        {\n            name: t(\"group.account.main\"),\n            callback: () => setSettingsListing(\"account\"),\n        },\n        {\n            name: t(\"group.discord.main\"),\n            callback: () => setSettingsListing(\"discord\"),\n        },\n        {\n            name: t(\"group.danger.main\"),\n            callback: () => setSettingsListing(\"danger\"),\n        },\n    ];\n\n    if (groupError || userError || (groups && groups.data && groups.data.length === 0)) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"group.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"group.name\")} - {(group) ? group.groupName : t(\"pending\")}</h2>\n                        <p style={{ marginBottom: 0 }}>{t(\"group.id\")} {gid}</p>\n                    </Card>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={settingsCycle} maxWidth=\"500\" >\n                        {catSettings[settingsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={pageCycle} maxWidth=\"560\" >\n                        {catListing[listing]}\n                    </PageCard>\n                 </Column>\n            </Row>\n        </>\n    );\n\n\n}\n\nfunction GroupAdmins(props) {\n\n    const modal = useModal();\n\n    var hasRights = false;\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let adminList;\n    if (props.group) {\n        adminList = [...props.group.admins];\n        adminList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeAdmins = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.admins.description0\")}<br />{t(\"group.admins.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.admins.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.admins.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.admins.add\")} callback={() => modal.show(<AddGroupAdmin gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.admins.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.admins.removeSelected\")} callback={removeAdmins} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.admins.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (props.group) ? (\n                adminList.map((admin, i) => (\n                    <UserStRow user={admin} callback={(v) => changeSelected(v, admin.id)} key={admin.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n    </>;\n}\n\n\nfunction GroupServers(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n    const { t } = useTranslation();\n\n    return <>\n        <h5>{t(\"group.servers.description0\")}<br />{t(\"group.servers.description1\")}</h5>\n        {\n            (props.group) ? (\n                props.group.servers.map((server, i) => (\n                    <ServerRow server={server} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, sid: server.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name={t(\"group.servers.add\")} to={\"/group/\" + props.gid + \"/add/server\"} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.servers.add\")} />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\nfunction GroupOwners(props) {\n\n    const modal = useModal();\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    var hasRights = false;\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let ownerList;\n    if (props.group) {\n        ownerList = [...props.group.owners];\n        ownerList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeOwners = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.owners.description0\")}<br />{t(\"group.owners.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.owners.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.owners.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.owners.add\")} callback={() => modal.show(<AddGroupOwner gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.owners.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.owners.removeSelected\")} callback={removeOwners} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.owners.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (ownerList) ? (\n                ownerList.map((owner, i) => (\n                    <UserStRow user={owner} callback={(v) => changeSelected(v, owner.id)} key={owner.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        \n    </>;\n}\n\n\nfunction GroupServerAccount(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [sid, setSid] = useState(\"\");\n    const [remid, setRemid] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n            if (remid !== props.group.cookie.remid)\n                setRemid(props.group.cookie.remid);\n            if (sid !== props.group.cookie.sid)\n                setSid(props.group.cookie.sid);\n        } \n    }, [props.group]);\n\n    const editCookies = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>\n                {t(\"group.account.description0\")}<br />{t(\"group.account.description1\")}<i>accounts.ea.com</i>\n            </h5>\n            {(props.group && !props.group.validCookie) ? (\n                <p style={{ marginTop: \"0px\", border: \"1px solid var(--color-second)\", padding: \"10px 22px\", borderRadius: \"8px\", color: \"#FF7575\", background: \"var(--color-container-v2)\" }}>\n                    {t(\"cookie.invalid\")}\n                </p>\n            ) : \"\"}\n            \n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setRemid(e.target.value)} defaultValue={remid} name={\"Remid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.remid\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setSid(e.target.value)} defaultValue={sid} name={\"Sid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.sid\")}\n                </p>\n            </Row>\n            {\n                (props.group && (sid !== props.group.cookie.sid || remid !== props.group.cookie.remid)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editCookies.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        cookie: { sid, remid }\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ): \"\"\n            }\n        </>\n    );\n}\n\nfunction GroupDiscordSettings(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [adminId, setAdminId] = useState(\"\");\n    const [modId, setModId] = useState(\"\");\n    const [serverId, setServerId] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n\n            if (serverId !== props.group.discordGroupId)\n                setServerId(props.group.discordGroupId);\n\n            if (modId !== props.group.discordModRoleId)\n                setModId(props.group.discordModRoleId);\n\n            if (adminId !== props.group.discordAdminRoleId)\n                setAdminId(props.group.discordAdminRoleId);\n\n        }\n    }, [props.group]);\n\n    const editDiscordDetails = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <> \n            <GameStatsAd />\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.description0\")}<br />{t(\"group.discord.description1\")}\n            </h5>\n            <h5>\n                {t(\"group.discord.commandList\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setServerId(e.target.value)} defaultValue={serverId} name={t(\"discord.id\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.idDescription\")}\n                </p>\n            </Row>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.permDescription0\")}<br />{t(\"group.discord.permDescription1\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setAdminId(e.target.value)} defaultValue={adminId} name={t(\"discord.adminId\")}  />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.adminIdDescription\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setModId(e.target.value)} defaultValue={modId} name={t(\"discord.modId\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.modIdDescription\")}\n                </p>\n            </Row>\n            {\n                (props.group && (serverId !== props.group.discordGroupId || modId !== props.group.discordModRoleId || adminId !== props.group.discordAdminRoleId)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editDiscordDetails.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        discordGroupId: serverId,\n                                        discordModRoleId: modId,\n                                        discordAdminRoleId: adminId\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction GroupDangerZone(props) {\n\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [groupName, setGroupName] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n\n        if (props.group && groupName !== props.group.groupName) {\n            setGroupName(props.group.groupName);    \n        }\n\n    }, [props.group]);\n\n    const editGroupName = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>{t(\"group.danger.nameChange\")}</h5>\n            <TextInput disabled={!allowedTo} callback={(e) => setGroupName(e.target.value)} defaultValue={groupName} name={t(\"group.name\")} />\n            {\n                (props.group && (groupName !== props.group.groupName)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editGroupName.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        groupName,\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"group.danger.deleteInfo0\")}<br />{t(\"group.danger.deleteInfo1\")}</h5>\n            <ButtonRow>\n                <ButtonLink style={{ color: \"#FF7575\"}} name={t(\"group.danger.delete\")} to={`/group/${props.gid}/delete/`} disabled={!allowedTo} />\n            </ButtonRow>\n        </>\n    );\n}\n\nexport function AddGroupOwner(props) {\n    var gid = props.gid;\n\n    const [nickname, setNickname] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupOwnerExecute = useMutation(\n        variables => OperationsApi.addGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n                \n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n\n            <h2>{t(\"group.owners.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e)=>setNickname(e.target.value)}/>\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => setUid(e.target.value) }/>\n            <ButtonRow>\n                <Button name={t(\"group.owners.add\")} callback={() => { AddGroupOwnerExecute.mutate({ gid, uid, nickname }); props.callback();  }} />\n            </ButtonRow>\n\n        </>\n    );\n\n}\n\nexport function AddGroupAdmin(props) {\n    var gid = props.gid;\n\n    const [addAdminState, changeState] = useState({ uid: \"\", nickname: \"\", canAdd: false });\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupAdminExecute = useMutation(\n        variables => OperationsApi.addGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const updateState = (values) => {\n        var newState = {\n            ...addAdminState,\n            ...values\n        };\n        newState.canAdd = newState.uid !== \"\";\n        changeState(newState);\n    }\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>{t(\"group.admins.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e) => updateState({nickname: e.target.value}) } />\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => updateState({uid: e.target.value}) } />\n            <ButtonRow>\n                <Button name={t(\"group.admins.add\")} disabled={!addAdminState.canAdd} callback={() => { AddGroupAdminExecute.mutate({ gid, uid: addAdminState.uid, nickname: addAdminState.nickname }); props.callback(); }} />\n            </ButtonRow>\n        </>\n    );\n\n}\n\n\nexport function AddGroup(props) {\n\n    const [addGroupState, changeState] = useState({\n        variables: {\n            groupName: \"\",\n            discordId: \"\",\n            adminRole: \"\",\n            modRole: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        roleDisplay: false,\n        canAdd: false\n    });\n    const { t } = useTranslation();\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const AddNewGroupExecute = useMutation(\n        variables => OperationsApi.addGroup(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                await queryClient.cancelQueries('devGroups');\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n                history.push(\"/\");\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.refetchQueries('devGroups');\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.roleDisplay = (newVars.discordId !== \"\");\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.groupName.length > 2);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"createGroup.main\")}</h2>\n                    \n                </Header>\n                <Card>\n                    <h5>{t(\"createGroup.description\")}</h5>\n                    <TextInput name=\"Name\" callback={(e) => { checkInputVariables({ groupName: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.discordDescription\")}\n                    </h5>\n                    <TextInput name={t(\"discord.id\")} callback={(e) => { checkInputVariables({ discordId: e.target.value }) }} />\n                    <TextInput name={t(\"discord.modId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ modRole: e.target.value }) }} />\n                    <TextInput name={t(\"discord.adminId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ adminRole: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.cookieDescription0\")}<br />\n                        {t(\"createGroup.cookieDescription1\")}<br />\n                        {t(\"createGroup.cookieDescription2\")}<br />\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                    {t(\"createGroup.acceptDescription0\")}<br />{t(\"createGroup.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"createGroup.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => AddNewGroupExecute.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function DeleteGroup(props) {\n\n    var thisGid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const DeleteGroupExecute = useMutation(\n        variables => OperationsApi.removeGroup(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('devGroups')\n                // Snapshot the previous value\n                const previousGroups = queryClient.getQueryData('devGroups')\n                // Optimistically update to the new value\n                queryClient.setQueryData('devGroups', old => {\n                    if (old) {\n                        old.data = old.data.filter(group => group.id !== gid);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroups, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('devGroups', context.previousGroups)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('devGroups')\n            },\n        }\n    );\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.danger.delete\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.danger.main\")}</h2>\n                    <p>{t(\"group.danger.check\")}</p>\n                    <ButtonRow>\n                        <ButtonLink name={t(\"group.danger.back\")} to={\"/group/\" + thisGid} />\n                        <Button name={t(\"group.danger.confirm\")} callback={() => { DeleteGroupExecute.mutate({ gid: thisGid }); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function AddGroupServer(props) {\n    var gid = props.match.params.gid;\n\n    var name = \"\", alias = \"\";\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n\n    const AddGroupServerExecute = useMutation(\n        variables => OperationsApi.addGroupServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async({ gid, name, alias }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers.push({\n                        \"addedAt\": UTCNow,\n                        \"id\": null,\n                        \"name\": name\n                    });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.serverAddMenu.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.serverAddMenu.description\")}</h2>\n                    <TextInput name={t(\"group.serverAddMenu.name\")} callback={(e) => { name = e.target.value }} />\n                    <TextInput name={t(\"group.serverAddMenu.alias\")} callback={(e) => { alias = e.target.value; }} />\n                    <ButtonRow>\n                        <Button name={t(\"group.servers.add\")} callback={() => { AddGroupServerExecute.mutate({ gid, alias, name }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function EditGroup(props) {\n    return (<></>);\n}\n\nexport function MakeOps(props) {\n   \n    const [addGroupState, changeState] = useState({\n        variables: {\n            server: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        canAdd: false\n    });\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const SetupOperations = useMutation(\n        variables => OperationsApi.setupOps(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.server.length > 1);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"operations.main\")}</h2>\n                </Header>\n                <Card>\n                    <h5>\n                        {t(\"operations.description0\")}<br />\n                        {t(\"operations.description1\")}<br /> \n                        {t(\"operations.description2\")}\n                    </h5>\n                    <TextInput name=\"Server name\" callback={(e) => { checkInputVariables({ server: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.server\")}<b>{t(\"operations.owner\")}</b>{t(\"operations.cookies\")}\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.acceptDescription0\")}<br />{t(\"operations.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"operations.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => SetupOperations.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport Account from \"./Account\";\nimport { Developer } from \"./Developer\";\nimport { Server } from \"./Server\";\nimport { Group, AddGroupOwner, EditGroup, AddGroupAdmin, AddGroup, DeleteGroup, AddGroupServer, MakeOps } from \"./Group\";\n\n//import ABSwitch from \"../testing/ABtesting\";\n\nexport default function Views(props) {\n    return (\n        <Switch>\n\n            <Route exact path=\"/account/\" component={Account} />\n\n            <Route exact path=\"/server/:sid/\" component={Server} />\n\n            <Route exact path=\"/group/new/\" component={AddGroup} />\n            <Route exact path=\"/group/:gid/\" component={Group} />\n\n            <Route exact path=\"/group/:gid/add/server\" component={AddGroupServer} />\n            <Route exact path=\"/group/:gid/add/admin/\" component={AddGroupAdmin} />\n            <Route exact path=\"/group/:gid/add/owner/\" component={AddGroupOwner} />\n\n            <Route exact path=\"/group/:gid/edit/\" component={EditGroup} />\n            <Route exact path=\"/group/:gid/delete\" component={DeleteGroup} />\n\n            <Route exact path=\"/dev/\" component={Developer} />\n\n            <Route exact path=\"/makeops/\" component={MakeOps} />\n\n        </Switch>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\n\nimport { MainPageComponent } from \"../components\";\n\nexport default function Main() {\n\n    const { isError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    if (!isLoading && !isError && user && user.auth.signedIn) {\n        return <Redirect to=\"/account/\" />\n    }\n\n    return (\n        <MainPageComponent />\n    );\n}","\nimport React, { useState } from \"react\";\nimport { HashRouter, useLocation, Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './App.css';\nimport './fade.css';\n\nimport Views from \"./views\";\nimport Main from \"./views/Main\";\nimport { createHashHistory } from 'history';\nimport { Sidebar, PageContainer, PageColumn, ModalProvider, TopBar } from \"./components\";\n\n\nexport const history = createHashHistory();\n\nexport const APP_VERSION = \"1.0.3\";\n\nfunction App() {\n\n    let location = useLocation();\n\n    const [sidebarVisisble, hideSidebar] = useState(true);\n\n    return (\n        <div className=\"App\"style={{display: \"flex\", flexDirection: \"column\"}}>\n            <HashRouter>\n                <ModalProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Main} />\n                        <Route>\n                            <TopBar hideSidebar={_ => hideSidebar(!sidebarVisisble) }/>\n                            <div style={{display: \"flex\", flexDirection: \"row\"}}>\n                                <Sidebar visible={sidebarVisisble} />\n                                <TransitionGroup component={PageContainer}>\n                                    <CSSTransition key={location.hash} classNames=\"fade\" timeout={200}>\n                                        <PageColumn>\n                                            <Views />\n                                        </PageColumn>\n                                    </CSSTransition>\n                                </TransitionGroup>\n                            </div>\n                        </Route>\n                    </Switch>\n                </ModalProvider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\n// Browser rendering\n\nReactDOM.render(\n\n    <React.StrictMode> \n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}