{"version":3,"sources":["components/Group.module.css","components/Sidebar.module.css","components/User.module.css","components/Card.module.css","components/TopBar.module.css","components/MainPage.module.css","components/Flex.module.css","components/Server.module.css","components/Status.module.css","components/PageContainer.module.css","components/Header.module.css","components/Buttons.module.css","JsonApi.js","api.js","components/PageContainer.js","testing/ABtesting.js","locales/config.js","components/Sidebar.js","components/Status.js","components/Buttons.js","components/Flex.js","components/Card.js","components/Header.js","components/User.js","components/Group.js","components/MainPage.js","components/Server.js","components/TopBar.js","views/Account.js","views/Developer.js","views/Server.js","views/Group.js","views/index.js","views/Main.js","App.js","index.js"],"names":["module","exports","endPoints","dev","prod","OperationsApi","asyncUser","this","logoutAndChangeUser","user","a","fetchMethod","getUserInfo","sid","playername","reason","playerId","postJsonMethod","name","gid","map","time","toString","team","getJsonMethod","devGroups","Error","groupName","discordId","modRole","adminRole","remid","type","value","answer","error","message","uid","nickname","alias","server","game","data","isWorking","window","location","constructApiUrl","method","params","paramStr","s","fetch","credentials","options","body","JSON","stringify","headers","errorHandler","postMethod","response","then","result","json","length","spawnError","code","defaultUser","discord","discriminator","avatar","auth","inGuild","isAdmin","isDeveloper","isOwner","signedIn","hasOwnProperty","PageContainer","props","className","styles","children","PageColumn","fixedTest","keys","rollout","ABSwitch","A","B","key","v","switchingTest","storageKey","localStorage","storageItemTest","getItem","testValue","Math","floor","random","setItem","getChannel","resources","translation","translationEN","translationCH","i18n","use","initReactI18next","LanguageDetector","init","fallbackLng","PageLink","to","activeClassName","PageLinkActive","title","content","AddIcon","viewBox","sideIcon","fill","d","WrenchIcon","Sidebar","useQuery","retry","userError","isLoading","devLink","accountLink","groupLinks","t","useTranslation","history","useHistory","queryClient","useQueryClient","useMutation","logout","onMutate","cancelQueries","prevUser","getQueryData","setQueryData","old","push","onSettled","variables","context","invalidateQueries","devOptionsContent","addGroupContent","i","permissions","isAdminOf","group","id","visible","HiddenSidebar","style","display","flexGrow","flexDirection","overflowY","GroupLinks","LoadingIcon","loadingIcon","ErrorIcon","errorIcon","Status","notEnabled","undefined","status","Button","background_color","width","button","disabled","onClick","callback","ButtonUrl","href","ButtonLink","ButtonRow","buttonRow","TextInput","inputField","defaultValue","placeholder","onReset","onChange","TextInputWrapper","SmallButton","_","vars","Switch","useState","checkedSwitch","clickSwitch","switchTheSwitch","newVal","useEffect","checked","switchClassName","SwitchActive","SwitchRow","isChecked","onKeyPress","e","charCode","role","tabIndex","SwitchInner","SwitchOn","SwitchOff","SwitchHandle","maxWidth","PlayerDropdownButton","open","setOpen","container","React","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","PlayerButton","dropdown","ul","option","li","ChoosePageButtons","active","setActive","useMeasure","pageCardRef","ChoosePageButtonHolder","ChoosePageButtonActive","buttons","ChoosePageButton","IconSelected","iconSelect","IconNotSelected","SelectableRow","selected","setSelcted","selectableRowSelected","selectableRow","p","Column","Row","TopRow","topRow","Card","card","CardRow","PageCard","Tag","ModalControll","isShown","show","close","ModalContext","createContext","useModal","useContext","Modal","controller","modal","modalDisabled","modalBackground","modalContent","ModalProvider","controllerState","setControllerState","Provider","Header","UserRow","alt","src","Avatar","DiscordName","DiscordNum","secure","xmlns","UserStRow","dateAdded","Date","parse","addedAt","dateString","getDate","getMonth","String","getHours","padStart","getMinutes","DiscordId","DateAdded","FakeUserStRow","UserRowSt","GroupRow","groupListRef","GroupName","manageDev","ServerRow","serverBadgePending","serverStatus","serverBadgeErr","serverBadgeOk","GameStatsAd","rel","gameStatsAd","VBanList","getAutoBanList","isError","banList","searchWord","setSearchWord","unbanVGlobalBan","globalUnbanPlayer","previousBanList","filter","player","playerName","onError","err","newTodo","number","BanListing","includes","GlobalBanRow","mutate","BanRow","BanDisplayName","banReason","banReasonDetailed","globalUnban","GroupLogs","getGroupLogs","logList","logs","sort","b","timeStamp","maxHeight","marginTop","log","LogRow","Array","from","EmptyLogRow","datetime","action","getUTCDate","getFullYear","logRow","logAdmin","adminName","logReason","logTime","ListItem","header","LoginButton","MainPageComponent","MainPage","MainPageCard","titleBlock","titleContent","listing","SmallText","PlayerStatsModal","r","stats","statsBlock","skill","rank","killsPerMinute","winPercent","Accuracy","headshots","killDeath","ServerRotation","info","server_status","liveUpdate","update_timestamp","timestamp","getSeconds","rotationId","setRotationId","ServerInfoColumn","ServerDescriptionRow","serverImage","url","GameInfo","ServerName","prefix","mode","serverInfo","inQue","rotate","SwitchGame","rotation","index","mapname","serverStatusArray","serverBadge","PlayerInfo","playerListRef","players","moveTeam","getDropdownOptions","onMove","kickModal","eaid","banModal","PlayerRow","PlayerIndex","PlayerLevel","PlayerName","platoon","PlayerNone","PlayerButtons","PlayerPing","ping","ServerInfoHolder","ServerInfoRow","BanList","getBanList","borderCollapse","position","top","displayName","toLowerCase","admin","banned_until","ban_timestamp","FireStarter","getStarterList","starterList","amount","StarterRow","LogList","getServerLogs","logIcon","logAction","logPlayer","toPlayer","logReasonDetailed","VipList","getVipList","vipList","VipHeader","alignItems","marginBottom","VipRow","VipName","VipRowImg","TopBar","accountPage","accountText","bar","showBar","hideSidebar","mainPage","logo","filler","Account","logoutExecutor","userLine","Developer","getDevGroups","groups","g","checkGameString","l","Server","serverCard","playerNicknameTeam","match","getServer","getServerGame","gameError","runningGame","playerList","setPlayerName","addVipStatus","changeAddVipStatus","removeVipStatus","changeRemoveVipStatus","unbanStatus","changeUnbanStatus","tabsListing","setTabsListing","UnbanPlayer","unbanPlayer","RemoveVip","removeVip","AddVip","addVip","movePlayer","previousGroup","serverTabs","teamId","setTeamId","catTabs","changeRotation","banlist","viplist","firestarter","loglist","protection","ServerAutomation","settings","ServerSettings","isOpsMode","isMovableModal","f1","find","f2","ServerBanPlayer","ServerKickPlayer","giveVip","marginRight","margin","allowedTo","kickOnPingDisabled","setKickOnPingDisabled","serverState","setServerState","canApply","setCanApply","applyStatus","setApplyStatus","autoBanKick","autoBfbanKick","autoGlobalBanMessage","autoPingKick","originalServerState","autoPingKickMessage","minAutoPingKick","newCanApply","changeSrerverState","editServerSettings","editServer","onSuccess","setTimeout","getServerValue","marginLeft","console","parseInt","errorUpdating","setError","serverName","serverAlias","alignSelf","opacity","setReason","kickApplyStatus","setKickApplyStatus","KickPlayer","kickPlayer","banTime","setBanTime","globalVsClassicBan","setGlobalVsClassicBan","banApplyStatus","setBanApplyStatus","userGettingError","BanPlayer","banPlayer","GlobalBanPlayer","globalBanPlayer","servers","isDisabled","deleteIcon","Group","getGroup","staleTime","groupError","removeAdmin","removeGroupAdmin","now","toUTCString","admins","removeServer","removeOwner","removeGroupOwner","owners","setListing","settingsListing","setSettingsListing","catListing","GroupOwners","onDelete","GroupAdmins","GroupServers","vbanlist","grouplogs","catSettings","account","GroupServerAccount","GroupDiscordSettings","danger","GroupDangerZone","pageCycle","settingsCycle","hasRights","setSelected","adminList","isSelected","AddGroupAdmin","o","item","changeSelected","ownerList","AddGroupOwner","owner","setSid","setRemid","cookie","editCookies","editGroup","validCookie","border","padding","borderRadius","color","background","adminId","setAdminId","modId","setModId","serverId","setServerId","discordGroupId","discordModRoleId","discordAdminRoleId","editDiscordDetails","setGroupName","editGroupName","setNickname","setUid","AddGroupOwnerExecute","addGroupOwner","UTCNow","canAdd","addAdminState","changeState","AddGroupAdminExecute","addGroupAdmin","updateState","values","newState","AddGroup","roleDisplay","addGroupState","AddNewGroupExecute","addGroup","refetchQueries","checkInputVariables","newVariables","newGroupState","newVars","DeleteGroup","thisGid","DeleteGroupExecute","removeGroup","previousGroups","AddGroupServer","AddGroupServerExecute","addGroupServer","EditGroup","MakeOps","SetupOperations","setupOps","Views","exact","path","component","Main","createHashHistory","App","useLocation","sidebarVisisble","TransitionGroup","CSSTransition","classNames","timeout","hash","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","getElementById"],"mappings":"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","file":"static/js/main.59b3695f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupRow\":\"Group_GroupRow__1Ew1c\",\"GroupName\":\"Group_GroupName__3G6eX\",\"gameStatsAd\":\"Group_gameStatsAd__2Eob_\",\"logAdmin\":\"Group_logAdmin__1TOK4\",\"logPlayer\":\"Group_logPlayer__1Mapx\",\"logAction\":\"Group_logAction__2UECK\",\"logReason\":\"Group_logReason__8BHZZ\",\"logRow\":\"Group_logRow__YNVWa\",\"BanRow\":\"Group_BanRow__v5SxK\",\"banReasonDetailed\":\"Group_banReasonDetailed__3HFsw\",\"BanDisplayName\":\"Group_BanDisplayName__15HMw\",\"banReason\":\"Group_banReason__1ofIN\",\"globalUnban\":\"Group_globalUnban__v-kk5\",\"serverBadgeErr\":\"Group_serverBadgeErr__1dzxV\",\"serverBadgeOk\":\"Group_serverBadgeOk__2BwfX\",\"serverBadgePending\":\"Group_serverBadgePending__3AuNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageLink\":\"Sidebar_PageLink__3fxKj\",\"PageButton\":\"Sidebar_PageButton__3ug-M\",\"PageLinkActive\":\"Sidebar_PageLinkActive___nnPr\",\"Sidebar\":\"Sidebar_Sidebar__c0TTh\",\"HiddenSidebar\":\"Sidebar_HiddenSidebar__2UYKR\",\"Logo\":\"Sidebar_Logo__2HFo5\",\"TopSidebar\":\"Sidebar_TopSidebar__BQCyG\",\"sideIcon\":\"Sidebar_sideIcon__72aBF\",\"GroupLinks\":\"Sidebar_GroupLinks__8lkHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserRow\":\"User_UserRow__1fzJH\",\"Avatar\":\"User_Avatar__3XgeX\",\"DiscordName\":\"User_DiscordName__j-kJJ\",\"DiscordNum\":\"User_DiscordNum__odqe3\",\"secure\":\"User_secure__ADMpb\",\"UserRowSt\":\"User_UserRowSt__D7e-x\",\"DiscordId\":\"User_DiscordId__CJ0BY\",\"DateAdded\":\"User_DateAdded__1FZZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3F8np\",\"CardRow\":\"Card_CardRow__1NbF3\",\"PageCard\":\"Card_PageCard__3UgmB\",\"Tag\":\"Card_Tag__gwAfh\",\"modalDisabled\":\"Card_modalDisabled__1amMq\",\"modal\":\"Card_modal__2zuep\",\"modalContent\":\"Card_modalContent__QUirv\",\"modalBackground\":\"Card_modalBackground__i6ZMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"TopBar_bar__3bwJz\",\"Avatar\":\"TopBar_Avatar__3wQH5\",\"accountText\":\"TopBar_accountText__1651g\",\"barWrap\":\"TopBar_barWrap__13cVT\",\"mainPage\":\"TopBar_mainPage__28WNk\",\"logo\":\"TopBar_logo__3pe6W\",\"showBar\":\"TopBar_showBar__28SUF\",\"filler\":\"TopBar_filler__3ie_h\",\"accountPage\":\"TopBar_accountPage__3E8XS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainPageCard\":\"MainPage_MainPageCard__20zHQ\",\"MainPage\":\"MainPage_MainPage__2QR_f\",\"titleBlock\":\"MainPage_titleBlock__3Cu7O\",\"listing\":\"MainPage_listing__1JWXi\",\"ListItem\":\"MainPage_ListItem__1n0An\",\"titleContent\":\"MainPage_titleContent__QdrEG\",\"LoginButton\":\"MainPage_LoginButton__3Flzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Flex_Column__3cQ9_\",\"Row\":\"Flex_Row__3SC-0\",\"topRow\":\"Flex_topRow__30giJ\",\"Grow\":\"Flex_Grow__f7am0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SmallText\":\"Server_SmallText__3uOYG\",\"ServerInfoColumn\":\"Server_ServerInfoColumn__35hJK\",\"ServerInfoRow\":\"Server_ServerInfoRow__2Aa7V\",\"serverImage\":\"Server_serverImage__3m2nE\",\"ServerName\":\"Server_ServerName__2irVE\",\"GameInfo\":\"Server_GameInfo__X3Hhq\",\"ServerDescriptionColumn\":\"Server_ServerDescriptionColumn__3pNJs\",\"ServerDescriptionRow\":\"Server_ServerDescriptionRow__12wsx\",\"SwitchGame\":\"Server_SwitchGame__3MjHo\",\"SettingsRow\":\"Server_SettingsRow__2yzpg\",\"SmallInput\":\"Server_SmallInput__1fZ_Z\",\"PlayerRow\":\"Server_PlayerRow__29Z8B\",\"PlayerName\":\"Server_PlayerName__3tLfO\",\"PlayerIndex\":\"Server_PlayerIndex__37b5y\",\"PlayerPing\":\"Server_PlayerPing__31qCm\",\"PlayerLevel\":\"Server_PlayerLevel__1Z7Ur\",\"PlayerNone\":\"Server_PlayerNone__2swFS\",\"playerBackgroundInfo\":\"Server_playerBackgroundInfo__27qMt\",\"PlayerButtons\":\"Server_PlayerButtons__3dQvb\",\"PlayerButton\":\"Server_PlayerButton__1b5UO\",\"serverStatus\":\"Server_serverStatus__2bq0e\",\"serverStatusOk\":\"Server_serverStatusOk__g8kKz\",\"serverStatusErr\":\"Server_serverStatusErr__3kLiy\",\"BanRow\":\"Server_BanRow__2CH-s\",\"VipRow\":\"Server_VipRow__11VYU\",\"BanDisplayName\":\"Server_BanDisplayName__1mYLa\",\"VipRowImg\":\"Server_VipRowImg__2uQKq\",\"VipName\":\"Server_VipName__1vh7h\",\"VipHeader\":\"Server_VipHeader__17wNH\",\"logAdmin\":\"Server_logAdmin__h3EXT\",\"logPlayer\":\"Server_logPlayer__3ubbb\",\"logAction\":\"Server_logAction__chE4g\",\"logReason\":\"Server_logReason__1SNMU\",\"logRow\":\"Server_logRow__3r-zZ\",\"logReasonDetailed\":\"Server_logReasonDetailed__uRKTP\",\"logIcon\":\"Server_logIcon__2eNHD\",\"serverBadgeErr\":\"Server_serverBadgeErr__3txr9\",\"serverBadgeOk\":\"Server_serverBadgeOk__1vnEH\",\"serverBadgePending\":\"Server_serverBadgePending__KFlxu\",\"serverBadge\":\"Server_serverBadge__2dEUL\",\"serverStatusArray\":\"Server_serverStatusArray__SklvZ\",\"liveUpdate\":\"Server_liveUpdate__2AkO3\",\"livePulse\":\"Server_livePulse__2PWwz\",\"liveUpdateText\":\"Server_liveUpdateText__3iOfu\",\"statsBlock\":\"Server_statsBlock__14xqx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1LWe8\",\"loadingIcon\":\"Status_loadingIcon__3owGX\",\"Loading\":\"Status_Loading__v1uza\",\"errorIcon\":\"Status_errorIcon__2HXFb\",\"Shake\":\"Status_Shake__30h0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PageContainer\":\"PageContainer_PageContainer__1PlzU\",\"PageColumn\":\"PageContainer_PageColumn__3Qegy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3VoE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRow\":\"Buttons_buttonRow__dKjZj\",\"button\":\"Buttons_button__1VKNK\",\"PlayerButton\":\"Buttons_PlayerButton__3mZnu\",\"container\":\"Buttons_container__np2ep\",\"dropdown\":\"Buttons_dropdown__13J8f\",\"ul\":\"Buttons_ul__3tJo8\",\"li\":\"Buttons_li__1sX4Q\",\"TextInput\":\"Buttons_TextInput__35GbL\",\"TextInputWrapper\":\"Buttons_TextInputWrapper__3RxVL\",\"SmallButton\":\"Buttons_SmallButton__3rzhd\",\"Switch\":\"Buttons_Switch__39fTc\",\"SwitchActive\":\"Buttons_SwitchActive__2ViHx\",\"SwitchInner\":\"Buttons_SwitchInner__3LnS9\",\"SwitchHandle\":\"Buttons_SwitchHandle__2b8wJ\",\"SwitchOff\":\"Buttons_SwitchOff__3Oaf-\",\"SwitchOn\":\"Buttons_SwitchOn__1_Jsb\",\"SwitchRow\":\"Buttons_SwitchRow__3WA6c\",\"ChoosePageButton\":\"Buttons_ChoosePageButton__1-OpM\",\"ChoosePageButtonActive\":\"Buttons_ChoosePageButtonActive__13GmV\",\"ChoosePageButtonHolder\":\"Buttons_ChoosePageButtonHolder__VfFyz\",\"selectableRow\":\"Buttons_selectableRow__V-YSj\",\"selectableRowSelected\":\"Buttons_selectableRowSelected__AlZEt\",\"iconSelect\":\"Buttons_iconSelect__EU1hH\"};","\nconst MODE = \"prod\";\n\nconst endPoints = {\n    dev: \"https://homedev.gametools.network/api/\",\n    prod: \"https://manager-api.gametools.network/api/\"\n}\n\nexport default class JsonClient {\n    constructor() {\n        this.isWorking = true;\n        this.user = this.getUserInfo();\n    }\n    openLoginPage() {\n        window.location = this.constructApiUrl(\"login\");\n    }\n    constructApiUrl(method, params) {\n        params = params || {};\n        let paramStr = \"\";\n        for (let s in params) {\n            paramStr += s + \"=\" + params[s] + \"&\";\n        }\n        if (paramStr !== \"\") paramStr = \"?\" + paramStr;\n        const apiEP = endPoints[MODE];\n        return apiEP + method + paramStr;\n    }\n    async fetchMethod(method, params) {\n        return fetch(this.constructApiUrl(method, params), {\n            credentials: \"include\"\n        });\n    }\n    async postMethod(method, params) {\n        return fetch(this.constructApiUrl(method, {}), params);\n    }\n    /// Returns Promise\n    postJsonMethod(method, params) {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(params),\n            credentials: \"include\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return this.errorHandler(this.postMethod(method, options));\n    }\n    /// Returns Promise\n    getJsonMethod(method, params) {\n        return this.errorHandler(this.fetchMethod(method, params));\n    }\n    async errorHandler(response) {\n        return response.then(\n            result => {\n                return result.json().then(\n                    json => {\n                        if (\"error\" in json) {\n                            throw json.error;\n                        }\n                        if (\"data\" in json) {\n                            if (json.data.length > 0) {\n                                if (\"error\" in json.data[0]) {\n                                    throw json.data[0].error;\n                                }\n                            }\n                        }\n                        return json;\n                    },\n                    error => this.spawnError(error, 600)\n                );\n            },\n            error => this.spawnError(error, response.code)\n        );\n    }\n    spawnError(error, code) {\n        throw {\n            \"error\": {\n                \"message\": error,\n                \"code\": code,\n            }\n        };\n    }\n    async getUserInfo() {\n        const defaultUser = {\n            discord: {\n            name: \"\",\n            discriminator: 0,\n            avatar: \"\"\n            },\n            auth: {\n                inGuild: false,\n                isAdmin: false,\n                isDeveloper: false,\n                isOwner: false,\n                signedIn: false\n            }\n        };\n        let response = await this.getJsonMethod(\"getinfo\");\n        if (!response.hasOwnProperty(\"error\")) {\n            return response;\n        }\n        return defaultUser;\n    }\n}","import JsonClient from \"./JsonApi\";\n\nexport class ApiProvider extends JsonClient {\n\n    logout() {\n        var asyncUser = this.logoutAndChangeUser();\n        this.user = asyncUser;\n    }\n\n    async logoutAndChangeUser() {\n        await this.fetchMethod(\"logout/\");\n        var user = await this.getUserInfo();\n        return user;\n    }\n\n    async kickPlayer({ sid, playername, reason, playerId }) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"changeplayer\", {\n                \"request\": \"kickPlayer\",\n                \"playername\": playername,\n                \"playerid\": playerId,\n                \"serverid\": sid,\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"changeplayer\", {\n            \"request\": \"kickPlayer\",\n            \"playername\": playername,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async globalBanPlayer({ name, reason, gid, playerId}) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"addautoban\", {\n                \"playername\": name,\n                \"playerid\": playerId,\n                \"groupid\": gid,\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"addautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": reason\n        });\n    }\n\n    async globalUnbanPlayer({ name, gid}) {\n        return await this.postJsonMethod(\"delautoban\", {\n            \"playername\": name,\n            \"groupid\": gid,\n            \"reason\": \"\"\n        });\n    }\n\n    async changeRotation({ sid, map }) {\n        return await this.postJsonMethod(\"changelevel\", {\n            \"mapnumber\": map,\n            \"serverid\": sid\n        });\n    }\n\n    async banPlayer({ name, reason, time, sid, playerId }) {\n        if (playerId !== \"undefined\") {\n            return await this.postJsonMethod(\"changeserver\", {\n                \"request\": \"addServerBan\",\n                \"playername\": name,\n                \"playerid\": playerId,\n                \"serverid\": sid,\n                \"bantime\": time.toString(),\n                \"reason\": reason\n            });\n        }\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"bantime\": time.toString(),\n            \"reason\": reason\n        }); \n    }\n\n    async unbanPlayer({ name, reason, sid }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerBan\",\n            \"playername\": name,\n            \"serverid\": sid,\n            \"reason\": reason\n        });\n    }\n\n    async addVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"addServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async removeVip({ sid, name, reason }) {\n        return await this.postJsonMethod(\"changeserver\", {\n            \"request\": \"removeServerVip\",\n            \"playername\": name,\n            \"serverid\": sid,\n            reason\n        });\n    }\n\n    async movePlayer({ sid, team, name }) {\n        return await this.postJsonMethod(\"moveplayer\", {\n            \"teamid\": team,\n            \"playername\": name,\n            \"serverid\": sid\n        });\n    }\n\n    async getBanList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"bannedList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getStarterList({ sid }) {\n        return await this.getJsonMethod(\"firestarters\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getAutoBanList({ gid }) {\n        return await this.getJsonMethod(\"autoban\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getVipList({ sid }) {\n        return await this.getJsonMethod(\"infolist\", {\n            \"type\": \"vipList\",\n            \"serverid\": sid\n        });\n    }\n\n    async getServerLogs({ sid }) {\n        return await this.getJsonMethod(\"tailserverlog\", {\n            \"serverid\": sid\n        });\n    }\n\n    async getGroupLogs({ gid }) {\n        return await this.getJsonMethod(\"tailuserlog\", {\n            \"groupid\": gid\n        });\n    }\n\n    async getDevGroups() {\n        var devGroups = await this.getJsonMethod(\"devgroups\");\n        if (\"error\" in devGroups) {\n            throw Error(\"Error on server.\");\n        }\n        return devGroups;\n    }\n\n    async addGroup({ groupName, discordId, modRole, adminRole, sid, remid }) {\n        return await this.postJsonMethod(\"addgroup\", {\n            \"groupname\": groupName,\n            \"adminroleid\": adminRole,\n            \"discordid\": discordId,\n            \"modroleid\": modRole,\n            \"remid\": remid,\n            \"sid\": sid,\n        });\n    }\n\n    async removeGroup({ gid }) {\n        return await this.postJsonMethod(\"delgroup\", {\n            \"groupId\": gid,\n        });\n    }\n\n    async editGroup({ gid, type, value }) {\n        var answer = await this.postJsonMethod(\"editgroup\", {\n            \"groupid\": gid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n    async getGroup(gid) {\n        return await this.getJsonMethod(\"groups\", { \"groupid\": gid });\n    }\n\n    async addGroupOwner({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addowner\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupServer({ gid, name, alias }) {\n        return await this.postJsonMethod(\"addserver\", {\n            \"servername\": name,\n            \"serveralias\": alias,\n            \"groupid\": gid,\n        });\n    }\n\n    async addGroupAdmin({ gid, uid, nickname }) {\n        return await this.postJsonMethod(\"addadmin\", {\n            \"userid\": uid, // discord userid\n            \"nickname\": nickname, // will change when the user signs in\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupAdmin({ gid, uid }) {\n        return await this.postJsonMethod(\"deladmin\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async removeGroupOwner({ gid, uid }) {\n        return await this.postJsonMethod(\"delowner\", {\n            \"userid\": uid,\n            \"groupid\": gid,\n        });\n    }\n\n    async setupOps({ server, sid, remid }) {\n        return await this.postJsonMethod(\"makeoperations\", {\n            \"servername\": server,\n            \"sid\": sid,\n            \"remid\": remid,\n        });\n    }\n\n\n    async getServer(sid) {\n        return await this.getJsonMethod(\"server\", { \"serverid\": sid });\n    }\n\n    async getServerGame(sid) {\n        var game = await this.getJsonMethod(\"servers\", { \"serverid\": sid });\n        if (\"error\" in game.data[0]) {\n            throw Error(game.data[0].error);\n        } else {\n            return game;\n        }\n    }\n\n    async removeServer({ gid, sid }) {\n        return await this.postJsonMethod(\"delserver\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n        });\n    }\n\n    async renameServer({ name, sid }) {\n        return await this.postJsonMethod(\"renameserver\", {\n            \"serverid\": sid,\n            \"servername\": name,\n        });\n    }\n\n    async changeServerAlias({ gid, alias, sid }) {\n        return await this.postJsonMethod(\"serveralias\", {\n            \"serverid\": sid,\n            \"groupid\": gid,\n            \"serveralias\": alias,\n        });\n    }\n\n    async editServer({ sid, value }) {\n        var answer = await this.postJsonMethod(\"editserver\", {\n            \"serverid\": sid,\n            \"values\": value\n        });\n        if (\"error\" in answer) {\n            throw new Error(answer.error.message)\n        }\n    }\n\n\n}\n\nexport const OperationsApi = new ApiProvider();","import React from \"react\";\nimport styles from \"./PageContainer.module.css\";\n\n\nexport function PageContainer(props) {\n    return (\n        <div className={styles.PageContainer}>\n            {props.children}\n        </div>\n    );\n\n}\n\nexport function PageColumn(props) {\n    return (\n        <div className={styles.PageColumn}>\n            {props.children}\n        </div>\n    );\n}\n","import rollout from \"../rollout.json\";\n\nconst fixedTest = null;\nconst keys = rollout[\"AB\"];\n\n// Switch for AB testing. Shows user A or B option to test new features\nexport default function ABSwitch(A, B, key) {\n    if (!(key in keys)) {\n        return A;\n    }\n    return switchingTest(A, B, getChannel());\n}\n\n// A or B channel\nexport function getChannel() {\n    const storageKey = 'TestAB';\n    if (fixedTest) {\n        return fixedTest;\n    }\n    if (localStorage) {\n        let storageItemTest = localStorage.getItem(storageKey);\n        if (storageItemTest) {\n            return storageItemTest;\n        } else {\n            const testValue = Math.floor(Math.random() * 10) % 2;\n            localStorage.setItem(storageKey, testValue);\n            return testValue;\n        }\n    } else {\n        return 0;\n    }\n}\n\nfunction switchingTest(A, B, v) {\n    return (v === 1) ? B : A;\n}","import i18n from 'i18next';\nimport translationEN from './languages/en-US.json';\n// import translationTR from './languages/tr-TR.json';\n// import translationRU from './languages/ru-RU.json';\nimport translationCH from './languages/zh-CN.json';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nexport const resources = {\n  \"en-US\": {\n    translation: translationEN,\n  },\n  // \"tr-TR\": {\n  //   translation: translationTR,\n  // },\n//   \"ru-RU\": {\n//     translation: translationRU,\n//   },\n  \"zh-CN\": {\n    translation: translationCH,\n  }\n}\n\ni18n.use(initReactI18next).use(LanguageDetector).init({\n  resources,\n  fallbackLng: \"en-US\"\n});\n\nexport const apiLanguage = {\n  \"zh-cn\": \"zh-tw\",\n}\n\nexport const getLanguage = () => {\n  let language = window.localStorage.i18nextLng.toLowerCase()\n  if (language in apiLanguage) {\n      language = apiLanguage[language]\n  }\n  return language\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory, Redirect } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./Sidebar.module.css\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\n\nfunction TopSidebar() {\n    const { t } = useTranslation();\n    return (\n        <div className={styles.TopSidebar}>\n            <Link to=\"/\" title={t(\"sidebar.main\")}>\n                <img src=\"/release-logo.png\" className={styles.Logo} />\n            </Link>\n        </div>\n    );\n}\n\nfunction PageLink(props) {\n    return (\n        <div className={styles.PageLink}>\n            <NavLink to={props.to} activeClassName={styles.PageLinkActive} title={props.name}>{props.content || props.name}</NavLink>\n        </div>\n    );\n}\n\nfunction PageButton(props) {\n    return (\n        <a className={styles.PageButton} target=\"_blank\" rel=\"noopener noreferrer\" href={props.href} title={props.name}>\n            <span onClick={props.onClick}>{props.name}</span>\n        </a>\n    );\n}\n\nfunction AddIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n    </svg>);\n}\n\nfunction WrenchIcon() {\n    return (<svg viewBox=\"0 0 24 24\" className={styles.sideIcon}>\n        <path fill=\"currentColor\" d=\"M13.78 15.3L19.78 21.3L21.89 19.14L15.89 13.14L13.78 15.3M17.5 10.1C17.11 10.1 16.69 10.05 16.36 9.91L4.97 21.25L2.86 19.14L10.27 11.74L8.5 9.96L7.78 10.66L6.33 9.25V12.11L5.63 12.81L2.11 9.25L2.81 8.55H5.62L4.22 7.14L7.78 3.58C8.95 2.41 10.83 2.41 12 3.58L9.89 5.74L11.3 7.14L10.59 7.85L12.38 9.63L14.2 7.75C14.06 7.42 14 7 14 6.63C14 4.66 15.56 3.11 17.5 3.11C18.09 3.11 18.61 3.25 19.08 3.53L16.41 6.2L17.91 7.7L20.58 5.03C20.86 5.5 21 6 21 6.63C21 8.55 19.45 10.1 17.5 10.1Z\" />\n    </svg>);\n}\n\n\n\nexport function Sidebar(props) {\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user, {\n\n        retry: 0,\n     \n      });\n\n    var devLink = \"\", accountLink = \"\", groupLinks = \"\";\n    const { t } = useTranslation();\n\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                });\n                history.push('/');\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n\n    if (!isLoading) {\n        if (!userError && user && user.auth.signedIn) {\n\n            const devOptionsContent = (\n                <>\n                    <span>{t(\"sidebar.devOptions\")}</span>\n                    <WrenchIcon />\n                </>\n            );\n\n            const addGroupContent = (\n                <>\n                    <span>{t(\"sidebar.createGroup\")}</span>\n                    <AddIcon />\n                </>\n            );\n\n            if (user.auth.isDeveloper) {\n                devLink = <PageLink to=\"/dev/\" name={t(\"sidebar.devOptions\")} content={devOptionsContent} />;\n            }\n\n            accountLink = [\n                ABSwitch(\"\", <PageLink key={0} to=\"/home/\" name=\"Home page\" />, \"homePage\"),\n                //<PageLink key={1} to=\"/account/\" name=\"Account\" />,\n                <PageLink key={2} to=\"/group/new/\" name=\"Create Group\" content={addGroupContent} />,\n                <PageLink key={3} to=\"/makeops/\" name=\"Make Operations\" />,\n            ];\n            groupLinks = [];\n            for (let i in user.permissions.isAdminOf) {\n                let group = user.permissions.isAdminOf[i];\n                groupLinks.push(<PageLink to={ \"/group/\" + group.id } name={group.groupName} key={i} />);\n            }\n                \n        } else {\n            return <Redirect to=\"/\" />;\n        }\n    }\n\n    \n\n    return (\n        <div className={props.visible ? styles.Sidebar : styles.HiddenSidebar }>\n            {/*<TopSidebar />*/}\n            <div style={{ display: \"flex\", flexGrow: 2, flexDirection: \"column\", overflowY: \"auto\" }}>\n                {accountLink}\n                {devLink}\n                <div className={styles.GroupLinks}>\n                    {groupLinks}\n                </div>\n            </div>\n            {/* <p style={{ paddingLeft: \"48px\", fontSize: \"12px\" }}>v{APP_VERSION} channel {(getChannel() === 0) ? \"A\" : \"B\"}</p> */}\n        </div>\n    );\n\n}","import React from \"react\";\nimport styles from \"./Status.module.css\";\n\n\nfunction LoadingIcon() {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.loadingIcon}>\n            <path fill=\"currentColor\" d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\" />\n        </svg>\n    );\n}\n\nfunction ErrorIcon(props) {\n    return (\n        <svg viewBox=\"0 0 24 24\" className={styles.errorIcon}>\n            <path fill=\"currentColor\" d=\"M11,15H13V17H11V15M11,7H13V13H11V7M12,2C6.47,2 2,6.5 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20Z\" />\n        </svg>\n    );\n}\n\nexport function Status(props) {\n    const notEnabled = (props.status === undefined || props.status === null) ;\n    return (\n        <div className={notEnabled ? \"\" : styles.status}>\n            {(notEnabled) ?  \"\" : (props.status) ? <LoadingIcon /> : <ErrorIcon />}\n        </div>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Buttons.module.css\";\nimport { Status } from \"./Status\";\nimport { useMeasure } from 'react-use';\n\n\nexport function Button(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}<Status status={props.status} /></button>\n    );\n}\n\nexport function ButtonUrl(props) {\n    var style = props.style || {};\n    if (props.background_color) {\n        style[\"background\"] = props.background_color\n    }\n    if (props.width) {\n        style[\"width\"] = props.width;\n    }\n    return (\n        <a href={props.href}><button value={props.value} className={styles.button} disabled={props.disabled} onClick={props.callback} title={props.name} style={style}>{props.name}<Status status={props.status} /></button></a>\n    );\n}\nexport function ButtonLink(props) {\n    if (props.disabled) {\n        return <Button name={props.name} disabled={true} />\n    }\n    return (\n        <NavLink style={props.style} className={styles.button} to={props.to} title={props.name}>{props.name}</NavLink>\n    );\n}\n\nexport function ButtonRow(props) {\n    return (\n        <div className={styles.buttonRow}>{props.children}</div>\n    );\n}\n\n\nexport function TextInput(props) {\n\n    var inputField = (props.value === undefined) ? \n    (<input defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />) : \n    (<input value={props.value} defaultValue={props.defaultValue} className={styles.TextInput} disabled={props.disabled} style={props.style} type={props.type || \"text\"} placeholder={props.name} onReset={props.callback} onChange={props.callback} />)\n    \n    return (\n        <div className={styles.TextInputWrapper}>\n            {inputField}\n        </div>\n    );\n}\n\nexport function SmallButton(props) {\n    if (props.disabled) {\n        return (\n            \"\"\n        );\n    }\n    return (\n        <div className={styles.SmallButton} onClick={_ => props.callback(props.vars)} title={props.name}>{props.content || props.name}</div>\n    );\n}\n\nexport function Switch(props) {\n\n    const [checkedSwitch, clickSwitch] = useState(false);\n\n    const switchTheSwitch = () => {\n        var newVal = !checkedSwitch;\n        clickSwitch(newVal);\n        if (props.callback) props.callback(newVal);\n    };\n\n    useEffect(() => {\n        if (props.checked !== null) {\n            clickSwitch(props.checked);\n        }\n    }, [props.checked])\n\n    /*  If user uses tabs, make it clickable on Enter key */\n    const SwitchOnenter = (e) => {\n        if (e.charCode === 13) switchTheSwitch();\n    };\n\n    const switchClassName = checkedSwitch ? styles.SwitchActive : styles.Switch;\n\n    return (\n        <div className={styles.SwitchRow}>\n            <div className={switchClassName} onClick={switchTheSwitch} isChecked={checkedSwitch} onKeyPress={SwitchOnenter} role=\"switch\" tabIndex=\"1\">\n                <span className={styles.SwitchInner}>\n                    <span className={styles.SwitchOn}></span>\n                    <span className={styles.SwitchOff}></span>\n                </span>\n                <span className={styles.SwitchHandle}></span>\n            </div>\n            <span style={{maxWidth: \"300px\"}}>{props.name}</span>\n        </div>\n    );\n}\n\nexport function PlayerDropdownButton(props) {\n    const [open, setOpen] = useState(false);\n\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.container} ref={container}>\n            <button type=\"button\" className={styles.PlayerButton} onClick={() => setOpen(!open)}>{props.name}</button>\n            {open && (<div className={styles.dropdown}>\n                <ul className={styles.ul}>\n                    {\n                        props.options.map(option => <li className={styles.li} onClick={() => {setOpen(!open); return option.callback()}}>{option.name}</li>)\n                    }\n                </ul>\n            </div>)}\n        </div>\n    );\n}\n\n\nexport function ChoosePageButtons(props) {\n\n    const [active, setActive] = useState(0);\n    const [pageCardRef, { width }] = useMeasure();\n    let maxWidth = props.maxWidth || 900\n\n    const [open, setOpen] = useState(false);\n    let container = React.useRef();\n\n    useEffect(() => {\n        let handleClickOutside = (event) => {\n            if (container.current && !container.current.contains(event.target)) {\n                setOpen(false)\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return function cleanup() {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        }\n    })\n\n    return (\n        <div className={styles.ChoosePageButtonHolder} ref={pageCardRef}>\n            {width < maxWidth ? \n                <>\n                    <div \n                        className={styles.ChoosePageButtonActive}\n                        title={props.buttons[active].name}\n                    >\n                        {props.buttons[active].content || props.buttons[active].name}\n                    </div>\n                    <div\n                        className={styles.ChoosePageButton}\n                        onClick={() => setOpen(!open)}\n                        ref={container}\n                    >☰\n                    {open && (<div className={styles.dropdown}>\n                        <ul className={styles.ul}>\n                            {\n                                \n                                props.buttons.map((button, i) => {\n                                    return (\n                                <li \n                                    key={i}\n                                    className={styles.li}\n                                    onClick={_ => { setActive(i); button.callback() }}\n                                    title={button.name}\n                                    tabIndex=\"1\" \n                                >\n                                    {button.name}\n                                </li>)\n                            })\n                            }\n                        </ul>\n                    </div>)}\n                    </div>\n                    \n                </>\n            :\n                props.buttons.map((button, i) => (\n                    <div\n                        key={i}\n                        isChecked={i === active}\n                        role=\"switch\"\n                        className={(i === active) ? styles.ChoosePageButtonActive : styles.ChoosePageButton}\n                        onClick={_ => { setActive(i); button.callback() }}\n                        title={button.name}\n                        tabIndex=\"1\" \n                    >\n                        {button.content || button.name}\n                    </div>\n                ))\n            }\n        </div>\n    );\n    \n}\n\nfunction IconSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z\" />\n        </svg>\n    );\n} \n\nfunction IconNotSelected(props) {\n    return (\n        <svg className={styles.iconSelect} viewBox=\"0 0 24 24\">\n            <path fill=\"currentColor\" d=\"M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z\" />\n        </svg>\n    );\n} \n\nexport function SelectableRow(props) {\n    const [selected, setSelcted] = React.useState(false);\n    const select = (p) => {\n        setSelcted(p);\n        props.callback(p);\n    }\n    return (\n        <div className={(selected) ? styles.selectableRowSelected : styles.selectableRow} onClick={() => select(!selected)}>\n            {\n                (selected) ? <IconSelected /> : <IconNotSelected />\n            }\n            {props.children}\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport styles from \"./Flex.module.css\";\n\n\nexport function Column(props) {\n    return (\n        <div className={styles.Column}>{props.children}</div>\n    );\n}\n\nexport function Row(props) {\n    return (\n        <div className={styles.Row}>{props.children}</div>\n    );\n}\n\nexport function TopRow(props) {\n    return (\n        <div className={styles.topRow}>{props.children}</div>\n    );\n}\n\nexport function Grow(props) {\n    return (\n        <div className={styles.Grow}>{props.children}</div>\n    );\n}","import React from \"react\";\nimport styles from \"./Card.module.css\";\n\nimport { ChoosePageButtons } from \"./Buttons.js\";\n\nexport function Card(props) {\n    return (\n        <div className={styles.card} style={props.style}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function CardRow(props) {\n    return <span className={styles.CardRow}>{props.children}</span>;\n}\n\nexport function PageCard(props) {\n    return (\n        <div>\n            <ChoosePageButtons buttons={props.buttons} maxWidth={props.maxWidth} />\n            <div className={styles.PageCard} style={props.style}>\n                {props.children}\n             </div>\n        </div>\n    );\n}\n\nexport function Tag(props) {\n    return (\n        <span className={styles.Tag}>\n            {props.children}\n        </span>\n    );\n}\n\n\n\nconst ModalControll = {\n    isShown: false,\n    children: \"\",\n    show: (e) => {},\n    close: (e) => {},\n}\n\nconst ModalContext = React.createContext(ModalControll);\n\nexport const useModal = () => React.useContext(ModalContext);\n\nfunction Modal(props) {\n\n    const controller = useModal();\n\n    return (\n        <div className={props.show ? styles.modal : styles.modalDisabled}>\n            <div className={styles.modalBackground} onClick={() => controller.close()}></div>\n            <div className={styles.modalContent}>{props.content}</div>\n        </div>\n    );\n}\n\nexport function ModalProvider(props) {\n\n    const [controllerState, setControllerState] = React.useState({\n        isShown: false,\n        children: \"\",\n    });\n\n    const showModal = (e) => {\n        setControllerState(s => ({\n            ...s,\n            isShown: true,\n            children: e,\n        }));\n    }\n\n    const closeModal = () => {\n        setControllerState(s => ({\n            ...s,\n            isShown: false,\n        }));\n    }\n\n    return (\n        <ModalContext.Provider value={{...controllerState, show: showModal, close: closeModal}}>\n            <Modal show={controllerState.isShown} content={controllerState.children} />\n            {props.children}\n        </ModalContext.Provider>\n    );\n}","import React from \"react\";\nimport styles from \"./Header.module.css\";\n\n\nexport function Header(props) {\n    return (\n        <div className={styles.Header}>\n            {props.children}\n        </div>\n    );\n}","import React from \"react\";\nimport styles from \"./User.module.css\";\nimport { SelectableRow } from \"./Buttons\";\n\nexport function UserRow(props) {\n    var user = props.discord;\n    return (\n        <div className={styles.UserRow}>\n            <img alt=\"\" src={user.avatar} className={styles.Avatar} />\n            <div className={styles.DiscordName}>\n                {user.name}\n                <span className={styles.DiscordNum}>\n                    {user.discriminator}\n                </span>\n            </div>\n            <div className={styles.secure}>\n                <svg viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M6 12C6.39782 12 6.77935 11.842 7.06066 11.5607C7.34196 11.2794 7.5 10.8978 7.5 10.5C7.5 9.6675 6.825 9 6 9C5.60217 9 5.22064 9.15804 4.93934 9.43934C4.65804 9.72065 4.5 10.1022 4.5 10.5C4.5 10.8978 4.65804 11.2794 4.93934 11.5607C5.22064 11.842 5.60217 12 6 12ZM10.5 5.25C10.8978 5.25 11.2794 5.40804 11.5607 5.68934C11.842 5.97065 12 6.35218 12 6.75V14.25C12 14.6478 11.842 15.0294 11.5607 15.3107C11.2794 15.592 10.8978 15.75 10.5 15.75H1.5C1.10218 15.75 0.720644 15.592 0.43934 15.3107C0.158035 15.0294 0 14.6478 0 14.25V6.75C0 5.9175 0.675 5.25 1.5 5.25H2.25V3.75C2.25 2.75544 2.64509 1.80161 3.34835 1.09835C4.05161 0.395088 5.00544 0 6 0C6.49246 0 6.98009 0.0969967 7.43506 0.285452C7.89003 0.473907 8.30343 0.75013 8.65165 1.09835C8.99987 1.44657 9.27609 1.85997 9.46455 2.31494C9.653 2.76991 9.75 3.25754 9.75 3.75V5.25H10.5ZM6 1.5C5.40326 1.5 4.83097 1.73705 4.40901 2.15901C3.98705 2.58097 3.75 3.15326 3.75 3.75V5.25H8.25V3.75C8.25 3.15326 8.01295 2.58097 7.59099 2.15901C7.16903 1.73705 6.59674 1.5 6 1.5Z\" fill=\"#55F165\" />\n                </svg>\n                Logged in\n            </div>\n        </div>\n    );\n}\n\nexport function UserStRow(props) {\n    var user = props.user;\n    var dateAdded = new Date(Date.parse(user.addedAt));\n\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    var dateString = `${dateAdded.getDate()} ${months[dateAdded.getMonth()]} ${String(dateAdded.getHours()).padStart(2, '0')}:${String(dateAdded.getMinutes()).padStart(2, '0')}`;\n    return (\n        <SelectableRow callback={props.callback}>\n            <div className={styles.DiscordName}>\n                {user.name}\n            </div>\n            <div className={styles.DiscordId}>\n                {user.id}\n            </div>\n            <div className={styles.DateAdded}>\n                {dateString}\n            </div>\n        </SelectableRow>\n    );\n}\n\nexport function FakeUserStRow(props) {\n    return (\n        <div className={styles.UserRowSt} />\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Group.module.css\";\nimport { useMeasure } from 'react-use';\nimport { Link } from \"react-router-dom\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { OperationsApi } from \"../api\";\nimport { TextInput } from \"./Buttons\";\nimport { Tag } from \"./Card\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function GroupRow(props) {\n    const { t } = useTranslation();\n    var group = props.group;\n\n    const [groupListRef, { width }] = useMeasure();\n    return (\n        <Link ref={groupListRef} className={styles.GroupRow} to={\"/group/\" + group.id}>\n            <span className={styles.GroupName}>{group.groupName}</span>\n            {width < 350? <span></span>:\n                <span className={styles.manageDev}>{t(\"dev.manage\")}</span>}\n        </Link>\n    );\n}\n\nexport function ServerRow(props) {\n    var server = props.server;\n    const { t } = useTranslation();\n\n    // If not yet setteled\n    if (server.id === null) {\n        return (\n            <div className={styles.GroupRow}>\n                <span className={styles.GroupName}>\n                    {server.name}\n                    <span className={styles.serverBadgePending}>\n                        {t(\"serverStatus.pending\")}\n                    </span>\n                </span>\n                {props.button}\n            </div>\n        );\n    }\n\n    const serverStatus = (() => {\n        switch (server.status) {\n            case \"noServer\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"serverStatus.noServer\")}\n                    </span>\n                )\n            case \"noAdmin\":\n                return (\n                    <span className={styles.serverBadgeErr}>\n                        {t(\"serverStatus.noAdmin\")}\n                    </span>\n                )\n            case \"pending\":\n                return (\n                    <span className={styles.serverBadgePending}>\n                        {t(\"serverStatus.pending\")}\n                    </span>\n                )\n            default:\n                return (\n                    <span className={styles.serverBadgeOk}>\n                        {t(\"serverStatus.running\")}\n                    </span>\n                )    \n        }\n    })();\n\n    return (\n        <div className={styles.GroupRow}>\n            <Link className={styles.GroupName} to={\"/server/\" + server.id}>\n                {server.name}\n                {serverStatus}\n            </Link>\n            {props.button}\n        </div>\n    );\n}\n\nexport function GroupAdminAccount(props) {\n\n    var { remid, sid } = props.cookie;\n\n    return (\n        <div className={styles.AdminAccount}>\n        </div>\n    );\n\n}\n\nexport function GameStatsAd(props) {\n    const { t } = useTranslation();\n    return (\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className={styles.gameStatsAd} href=\"https://discord.com/oauth2/authorize?client_id=714524944783900794&scope=bot&permissions=83968\">\n            <img src=\"./game-stats.png\" />\n            <span>{t(\"group.discord.gamestats\")}</span>\n        </a>\n    );\n}\n\n\nexport function VBanList(props) {\n    const gid = props.gid;\n    const { isError, data: banList, error } = useQuery('globalBanList' + gid, () => OperationsApi.getAutoBanList({ gid }));\n\n    const queryClient = useQueryClient();\n\n    const [searchWord, setSearchWord] = useState(\"\");\n    const { t } = useTranslation();\n\n    const unbanVGlobalBan = useMutation(\n        variables => OperationsApi.globalUnbanPlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('globalBanList' + gid)\n                // Snapshot the previous value\n                const previousBanList = queryClient.getQueryData('globalBanList' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('globalBanList' + gid, old => {\n                    old.data= old.data.filter(player => player.playerName !== name);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousBanList, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('globalBanList' + context.gid, context.previousBanList)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('globalBanList' + context.gid)\n            },\n        }\n    );\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return \"Loading..\";\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"group.vban.description0\")} <b>{t(\"group.vban.description1\", {number: banList.data.length})}</b>. <Tag>{t(\"eBeta\")}</Tag>\n            </h5>\n            <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n            <div className={styles.BanListing}>\n                {\n                    banList.data.filter(p => p.playerName.includes(searchWord)).map(\n                        (player, i) => (<GlobalBanRow player={player} key={i} callback={() => unbanVGlobalBan.mutate({gid, name: player.playerName})}/>)\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\n\nfunction GlobalBanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <div className={styles.BanRow}>\n            <span className={styles.BanDisplayName}>{player.playerName}</span>\n            <span className={styles.banReason}>{\n                ((player.reason === \"\") ? t(\"group.vban.noReason\") : t(\"group.vban.reason\"))\n            }</span>\n            <span className={styles.banReasonDetailed}>{player.reason}</span>\n            <span className={styles.globalUnban} onClick={props.callback}>{t(\"group.vban.unban\")}</span>\n        </div>\n    );\n}\n\nexport function GroupLogs(props) {\n    const gid = props.gid;\n    const { isError, data: logList, error } = useQuery('groupogList' + gid, () => OperationsApi.getGroupLogs({ gid }));\n    const { t } = useTranslation();\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>{t(\"group.logs.description\")}</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const log = props.log;\n\n    const actionIcon = (() => {\n        switch (log.action) {\n            case \"editGroup\":\n                return \"\";\n            case \"addUser\":\n                return \"\";\n            case \"addOwner\":\n                return \"\"\n            case \"addGroup\":\n                return \"\";\n            case \"removeOwner\":\n                return \"\";\n            case \"removeUser\":\n                return \"\"\n            default:\n                return \"\";\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${datetime.getHours()}:${datetime.getMinutes()}`;\n\n    return (\n        <div className={styles.logRow}>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logReason}>{\n                log.reason\n            }</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}","import React from \"react\";\nimport styles from \"./MainPage.module.css\";\nimport { OperationsApi } from \"../api\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nfunction ListItem(props) {\n    return (\n        <div className={styles.ListItem}>\n            <h2>{props.header}</h2>\n            <p>{props.children}</p>\n        </div>\n    );\n}\n\nfunction LoginButton() {\n    const { t } = useTranslation();\n    return (\n        <a className={styles.LoginButton} href={OperationsApi.constructApiUrl(\"login\")}>{t(\"mainPage.login\")}</a>\n    );\n}\n\nexport function MainPageComponent(props) {\n    const { t } = useTranslation();\n    return (\n        <div className={styles.MainPage}>\n            <div className={styles.MainPageCard}>\n                <div className={styles.titleBlock}>\n                    <div className={styles.titleContent}>\n                        <h1>{t(\"mainPage.main\")}</h1>\n                        <p>{t(\"mainPage.description\")}</p>\n                        <LoginButton />\n                    </div>\n                </div>\n                <div className={styles.listing}>\n                    <h2>{t(\"mainPage.featureList.main\")}</h2>\n                    <ListItem header={t(\"mainPage.featureList.0.heading\")}>{t(\"mainPage.featureList.0.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.1.heading\")}>{t(\"mainPage.featureList.1.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.2.heading\")}>{t(\"mainPage.featureList.2.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.3.heading\")}>{t(\"mainPage.featureList.3.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.4.heading\")}>{t(\"mainPage.featureList.4.body\")}</ListItem>\n                    <ListItem header={t(\"mainPage.featureList.5.heading\")}>{t(\"mainPage.featureList.5.body\")}</ListItem>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Server.module.css\";\nimport { useQuery } from 'react-query';\nimport { Button, ButtonRow, PlayerDropdownButton, ButtonLink, TextInput } from \"./Buttons\";\nimport { useModal } from \"./Card\";\nimport { OperationsApi } from \"../api\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\nimport { useMeasure } from 'react-use';\n\nexport function SmallText(props) {\n    return (<span className={styles.SmallText}>{props.children}</span>);\n}\n\nfunction PlayerStatsModal(props) {\n    const player = props.player;\n    const { isError, data: stats, isLoading } = useQuery('playerStatsByEAID' + player, () => fetch(\"https://api.gametools.network/bf1/stats/?name=\"+player+\"&lang=en-us&platform=pc&=\").then(r=>r.json()));\n    const { t } = useTranslation();\n    \n    const statsBlock = (!isLoading && !isError) ? (\n        <div className={styles.statsBlock}>\n            <h5>{t(\"server.playerStats.skill\")}{stats.skill}</h5>\n            <h5>{t(\"server.playerStats.rank\")}{stats.rank}</h5>\n            <h5>{t(\"server.playerStats.killsPerMinute\")}{stats.killsPerMinute}</h5>\n            <h5>{t(\"server.playerStats.winPercent\")}{stats.winPercent}</h5>\n            <h5>{t(\"server.playerStats.accuracy\")}{stats.Accuracy}</h5>\n            <h5>{t(\"server.playerStats.headshots\")}{stats.headshots}</h5>\n            <h5>{t(\"server.playerStats.killDeath\")}{stats.killDeath}</h5>\n            <h5>{t(\"server.playerStats.id\")}{stats.id}</h5>\n            <a href={\"https://gametools.network/stats/pc/playerid/\"+stats.id+\"?name=\"+player} target=\"_blank\">{t(\"server.playerStats.toStatsPage\")}</a>\n        </div>\n    ) : t(\"server.playerStats.loading\");\n\n    return (   \n        <>\n            <h2>{t(\"server.playerStats.main\", {player: player})}</h2>\n            {statsBlock}\n        </>\n    );\n}\n\nexport function EditableText(props) {\n    return (<p>{props.children}</p>);\n}\n\nexport function SettingsRow(props) {\n    return <div className={styles.SettingsRow}>{props.children}</div>;\n}\n\nexport function SmallIntInput(props) {\n    return <input type=\"text\" className={styles.SmallInput} defaultValue={props.value} />;\n}\n\nexport function ServerInfo(props) {\n    var server = props.server;\n    return (\n        <>\n        </>\n    );\n}\n\nexport function ServerRotation(props) {\n    const { t } = useTranslation();\n    var server = null, game = null;\n    if (props.game && props.game.data && props.game.data.length > 0) {\n        server = props.game.data[0];\n        game = server.info;\n    }\n\n    var server_status = (\n        <span className={styles.serverBadgePending}>\n            {t(\"serverStatus.pending\")}\n        </span>\n    );\n    \n    if (server) {\n        if (server.isAdmin) {\n            server_status = (\n                <span className={styles.serverBadgeOk}>\n                    <span className={styles.liveUpdate}></span>\n                    {t(\"serverStatus.running\")}\n                </span>\n            )  \n        } else {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    {t(\"serverStatus.noAdmin\")}\n                </span>\n            )\n        }\n        if (server.serverStatus === \"noServer\") {\n            server_status = (\n                <span className={styles.serverBadgeErr}>\n                    {t(\"serverStatus.noServer\")}\n                </span>\n            )\n        }\n    }\n    var update_timestamp = \"\";\n    if (server) {\n        const timestamp = new Date(server.update_timestamp);\n        update_timestamp =  `${timestamp.getHours()}:${timestamp.getMinutes()}:${timestamp.getSeconds()}`;\n    }\n    var [rotationId, setRotationId] = useState(\"\"); \n    return (\n        <div className={styles.ServerInfoColumn}>\n            <div className={styles.ServerDescriptionRow}>\n                <img className={styles.serverImage} src={(game) ? game.url : \"/no-server-image.png\"} />\n                <div className={styles.GameInfo}>\n                    <span className={styles.ServerName}>{(game) ? game.prefix : t(\"loading\") }</span>\n                    <SmallText>{(game) ? `${game.map} - ${game.mode} - ${game.serverInfo} ${t(\"server.game.info\", {inQue: game.inQue})}` : \"-\"}</SmallText>\n                </div>\n            </div>\n            <ButtonRow>\n                <Button name={t(\"server.game.restart\")} disabled={!game} callback={_ => props.rotate((game) ? game.rotationId : null)} />\n                <select className={styles.SwitchGame} value={rotationId} onChange={e => setRotationId(e.target.value)}>\n                    <option value=\"\">{t(\"server.game.mapSwitch\")}</option>\n                    {(game) ? game.rotation.map((value, i) =>\n                        <option value={value.index} key={i}>{value.mapname} - {value.mode}</option>\n                    ) : \"\"}\n                </select>\n                {(rotationId !== \"\") ? <Button name={t(\"apply\")} disabled={!game} callback={_ => { props.rotate((game) ? rotationId : null); setRotationId(\"\"); }} /> : \"\"}\n            </ButtonRow>\n            <div className={styles.serverStatusArray}>\n                <span>{server_status}</span>\n                <span className={styles.serverBadge}>{t(\"server.game.playerlistUpdate\")} - {update_timestamp}</span>\n            </div>\n            \n        </div>\n    );\n}\n\nexport function PlayerInfo(props) {\n    const { t } = useTranslation();\n    const modal = useModal();\n    const [playerListRef, { width }] = useMeasure();\n    var info = props.game.data[0].players[props.team].players;\n\n    var moveTeam = (props.team === \"0\") ? \"1\" : \"2\";\n\n    let getDropdownOptions = (player) => {\n        return [\n            { name: t(\"server.action.move\"), callback: () => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam, playerId: player.playerId}) },\n            { name: t(\"server.action.kick\"), callback: () => modal.show(<props.kickModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>) },\n            { name: t(\"server.action.ban\"), callback: () => modal.show(<props.banModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>) },\n        ]\n    };\n\n    if (info.length > 0 && info[0] === undefined) return \"\";\n\n    return (\n        <div ref={playerListRef}>\n        {info.map((player, i) => \n            <div className={styles.PlayerRow} key={i}>\n\n                <span className={styles.PlayerIndex}>\n                    {i + 1}\n                </span>\n                <span className={styles.PlayerLevel}>\n                    {\n                        (player.rank === null) ? \"??\" : player.rank\n                    }\n                </span>\n                <span className={styles.PlayerName} onClick={_=>modal.show(<PlayerStatsModal player={player.name} />)}>\n                    {\n                        (player.platoon === \"\") ? \"\" : `[${player.platoon}] ` \n                    }\n                    {\n                        player.name\n                    }\n                </span>\n                <span className={styles.PlayerNone} />\n\n\n                {width < 600 ? \n                    <div>\n                        <PlayerDropdownButton options={getDropdownOptions(player)} name=\"☰\"></PlayerDropdownButton>\n                    </div>:\n                <>\n                    <div className={styles.PlayerButtons}>\n                        <div className={styles.PlayerButton} onClick={_ => props.onMove.mutate({ sid: props.sid, name: player.name, team: moveTeam, playerId: player.playerId})}>\n                            {t(\"server.action.move\")}\n                        </div>\n                        <div className={styles.PlayerButton} onClick={_ => modal.show(<props.kickModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>)}>\n                            {t(\"server.action.kick\")}\n                        </div>\n                        <div className={styles.PlayerButton} onClick={_ => modal.show(<props.banModal sid={props.sid} eaid={player.name} playerId={player.playerId}/>)}>\n                            {t(\"server.action.ban\")}\n                        </div>\n                    </div>\n\n                    <span className={styles.PlayerPing}>\n                        {player.ping}\n                        <svg viewBox=\"0 0 24 24\">\n                            <path fill=\"currentColor\" d=\"M4,6V4H4.1C12.9,4 20,11.1 20,19.9V20H18V19.9C18,12.2 11.8,6 4,6M4,10V8A12,12 0 0,1 16,20H14A10,10 0 0,0 4,10M4,14V12A8,8 0 0,1 12,20H10A6,6 0 0,0 4,14M4,16A4,4 0 0,1 8,20H4V16Z\" />\n                        </svg>\n                    </span>\n                </>\n                }\n                \n            </div>\n        )}\n    </div>\n    )}\n\nexport function ServerInfoHolder(props) {\n    return (\n        <div className={styles.ServerInfoRow}>\n            {props.children}\n        </div>\n    );\n}\n\nexport function BanList(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: banList, error } = useQuery('serverBanList' + sid, () => OperationsApi.getBanList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!banList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    return (\n        <div>\n            <h5>\n                {t(\"server.banList.description0\")}<br />\n                {t(\"server.banList.description1\")} <b>{t(\"server.banList.description2\", {number: banList.data.length})}</b>.\n                {t(\"server.banList.description3\")}<br />{t(\"server.banList.description4\")}\n            </h5>\n            <TextInput name={t(\"search\")} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>{t(\"server.banList.table.playerName\")}</th>\n                        <th>{t(\"server.banList.table.playerId\")}</th>\n                        <th>{t(\"server.banList.table.reason\")}</th>\n                        <th>{t(\"server.banList.table.admin\")}</th>\n                        <th>{t(\"server.banList.table.until\")}</th>\n                        <th>{t(\"server.banList.table.timestamp\")}</th>\n                    </thead>\n                    <tbody>\n                        {\n                            banList.data.filter(p => p.displayName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<BanRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction BanRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.displayName}</td>\n            <td title={t(\"server.banList.table.playerId\")}>{player.id}</td>\n            <td>{player.reason}</td>\n            <td>{player.admin}</td>\n            <td>{player.banned_until}</td>\n            <td>{player.ban_timestamp}</td>\n        </tr>\n    );\n}\n\nexport function FireStarter(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: starterList, error } = useQuery('serverStarterList' + sid, () => OperationsApi.getStarterList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n    if (!starterList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    starterList.data.sort((a, b) => b.amount - a.amount);\n\n    return (\n        <div>\n            <h5>\n                {t(\"server.firestarterList.description0\")}<br />{t(\"server.firestarterList.description1\")}\n            </h5>\n            <TextInput name={t(\"search\")} callback={(v) => setSearchWord(v.target.value)} />\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <th>{t(\"server.firestarterList.table.playerName\")}</th>\n                        <th>{t(\"server.firestarterList.table.playerId\")}</th>\n                        <th>{t(\"server.firestarterList.table.amount\")}</th>\n                    </thead>\n                    <tbody>\n                        {\n                            starterList.data.filter(p => p.playerName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<StarterRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction StarterRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (    \n        <tr className={styles.BanRow}>\n            <td className={styles.BanDisplayName}>{player.platoon !== \"\"? `[${player.platoon}] `: null}{player.playerName}</td>\n            <td title={t(\"server.firestarterList.table.playerId\")}>{player.playerId}</td>\n            <td>{player.amount}</td>\n        </tr>\n    );\n}\n\nexport function LogList(props) {\n    \n    const sid = props.sid;\n    const { isError, data: logList, error } = useQuery('serverLogList' + sid, () => OperationsApi.getServerLogs({ sid }));\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n\n    if (logList) {\n        logList.logs.sort((a, b) => (\n            Date.parse(b.timeStamp) - Date.parse(a.timeStamp)\n        ));\n    }\n\n\n    return (\n        <div>\n            <h5>Log list</h5>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                {\n                    (logList) ? logList.logs.map(\n                        (log, i) => (<LogRow log={log} key={i} />)\n                    ) : Array.from({ length: 8 }, (_, id) => ({ id })).map(\n                        (_, i) => (<EmptyLogRow key={i} />)\n                    )\n            }\n            </div>\n        </div>\n    );\n}\n\nfunction LogRow(props) {\n    const { t } = useTranslation();\n    const modal = useModal();\n    const log = props.log;\n    const action = (() => {\n        switch (log.action) {\n            case \"addServerBan\":\n                return t(\"server.logs.reasons.addServerBan\");\n            case \"kickPlayer\":\n                return t(\"server.logs.reasons.kickPlayer\");\n            case \"removeServerBan\":\n                return t(\"server.logs.reasons.removeServerBan\");\n            case \"addServerVip\":\n                return t(\"server.logs.reasons.addServerVip\");\n            case \"movePlayer\":\n                return t(\"server.logs.reasons.movePlayer\");\n            case \"removeServerVip\":\n                return t(\"server.logs.reasons.removeServerVip\");\n            default:\n                return t(\"server.logs.reasons.magic\");\n        }\n    })();\n\n    var datetime = new Date(log.timeStamp);\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    // Local time\n    datetime = `${datetime.getUTCDate()} ${months[datetime.getMonth()]} ${datetime.getFullYear()} ${String(datetime.getHours()).padStart(2, '0')}:${String(datetime.getMinutes()).padStart(2, '0')}`;\n\n    if (log.action === \"autokick-ping\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M19.5,5.5V18.5H17.5V5.5H19.5M12.5,10.5V18.5H10.5V10.5H12.5M21,4H16V20H21V4M14,9H9V20H14V9M7,14H2V20H7V14Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.pingChecker\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-globalBans\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.vBan\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>with reason</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (log.action === \"autokick-bfban\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z\" />\n                </svg>\n                <span className={styles.logAdmin}>{t(\"server.logs.types.bfban\")}</span>\n                <span className={styles.logAction}>{t(\"server.logs.reasons.kickPlayer\")}</span>\n                <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n                <span className={styles.logReason}>{t(\"server.logs.reason\")}</span>\n                <span className={styles.logReasonDetailed}>{log.reason}</span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n\n    if (action === \"moved\" && log.toPlayer === \"server\") {\n        return (\n            <div className={styles.logRow}>\n                <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                    <path fill=\"currentColor\" d=\"M15,19L9,16.89V5L15,7.11M20.5,3C20.44,3 20.39,3 20.34,3L15,5.1L9,3L3.36,4.9C3.15,4.97 3,5.15 3,5.38V20.5A0.5,0.5 0 0,0 3.5,21C3.55,21 3.61,21 3.66,20.97L9,18.9L15,21L20.64,19.1C20.85,19 21,18.85 21,18.62V3.5A0.5,0.5 0 0,0 20.5,3Z\" />                </svg>\n                <span className={styles.logAdmin}>{log.adminName}</span>\n                <span className={styles.logAction}>{log.reason}</span>\n                <span className={styles.logReasonDetailed}></span>\n                <span className={styles.logTime}>{datetime}</span>\n            </div>\n        );\n    }\n    return (\n        <div className={styles.logRow}>\n            <svg className={styles.logIcon} viewBox=\"0 0 24 24\">\n                <path fill=\"currentColor\" d=\"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\" />\n            </svg>\n            <span className={styles.logAdmin}>{log.adminName}</span>\n            <span className={styles.logAction}>{action}</span>\n            <span className={styles.logPlayer} onClick={_=>modal.show(<PlayerStatsModal player={log.toPlayer} />)}>{log.toPlayer}</span>\n            <span className={styles.logReason}>{\n                ((log.reason === \"\") ? t(\"server.logs.noReason\") : t(\"server.logs.reason\"))\n            }</span>\n            <span className={styles.logReasonDetailed}>{log.reason}</span>\n            <span className={styles.logTime}>{datetime}</span>\n        </div>\n    );\n}\n\n\nfunction EmptyLogRow() {\n    return (\n        <div className={styles.logRow}></div>\n    );\n}\n\nexport function VipList(props) {\n    const sid = props.sid;\n    const { t } = useTranslation();\n    const { isError, data: vipList, error } = useQuery('serverVipList' + sid, () => OperationsApi.getVipList({ sid }));\n\n    const [searchWord, setSearchWord] = useState(\"\");\n\n\n    if (!vipList) {\n        // TODO: add fake item list on loading\n        return t(\"loading\");\n    }\n\n    if (isError) {\n        return `Error ${error.code}: {error.message}`\n    }\n    \n\n    return (\n        <div>\n            <div className={styles.VipHeader}>\n                <TextInput name={\"Search..\"} callback={(v) => setSearchWord(v.target.value)} />\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                    <h5 style={{ marginBottom: 0 }}>\n                        {t(\"server.vipList.description0\")}<br />\n                        {t(\"server.vipList.description1\")}<b>{t(\"server.vipList.description2\", {number: vipList.data.length})}</b>.\n                    </h5>\n                </div>\n            </div>\n            <div style={{ maxHeight: \"400px\", overflowY: \"auto\", marginTop: \"8px\" }}>\n                <table style={{ borderCollapse: \"collapse\", width: \"100%\" }}>\n                    <thead style={{ position: \"sticky\", top: \"0\" }}>\n                        <tr>\n                            <th>{t(\"server.vipList.table.playerName\")}</th>\n                            <th>{t(\"server.vipList.table.playerId\")}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            vipList.data.filter(p => p.displayName.toLowerCase().includes(searchWord.toLowerCase())).map(\n                                (player, i) => (<VipRow player={player} key={i} />)\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nfunction VipRow(props) {\n    const player = props.player;\n    const { t } = useTranslation();\n    return (\n        <tr className={styles.VipRow}>\n            <td title={player.displayName} className={styles.VipName}>\n                <div className={styles.VipRowImg}><img src={player.avatar} alt=\"\" /></div>\n                <span>{player.displayName}</span>\n            </td>\n            <td title={t(\"server.vipList.table.playerId\")}>{player.id}</td>\n        </tr>\n    );\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { NavLink, Link, useHistory } from 'react-router-dom';\nimport ABSwitch, { getChannel } from \"../testing/ABtesting\";\nimport styles from \"./TopBar.module.css\";\nimport { useTranslation } from 'react-i18next';\n\nimport { OperationsApi } from \"../api\";\n\nimport { APP_VERSION } from \"../App\";\n\nexport function TopBar(props) {\n    const { t } = useTranslation();\n\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var accountPage = \"\";\n    \n    if (!userError && !isLoading && user && user.auth.signedIn) {\n        accountPage = (\n            <Link to=\"/account/\" title={user.discord.name} className={styles.accountPage}>\n                {/*<span>{user.discord.name}</span>*/}\n                <img src={user.discord.avatar} className={styles.Avatar} />\n                <span className={styles.accountText}>{t(\"account.main\")}</span>\n            </Link>\n        );\n    }\n\n\n    return (\n        <>\n            <div className={styles.bar}>\n\n\n\n                <button className={styles.showBar} onClick={props.hideSidebar}>\n                    <svg viewBox=\"0 0 24 24\">\n                        <path fill=\"currentColor\" d=\"M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z\" />\n                    </svg>\n                </button>\n                <Link to=\"/\" title=\"Main page\" className={styles.mainPage}>\n                    <img src=\"/logo-release.png\" className={styles.logo} />\n                </Link>\n                <div className={styles.filler} ></div>\n\n                {accountPage}\n\n            </div>\n\n        </>\n    );\n}","import React from \"react\";\nimport { useQuery, useMutation, useQueryClient } from 'react-query'\nimport { Redirect, useHistory} from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, CardRow, UserRow, TopRow, Button, ButtonRow, ButtonUrl } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport default function Account() {\n    var history = useHistory();\n    const queryClient = useQueryClient();\n\n    const logoutExecutor = useMutation(\n        v => OperationsApi.logout(),\n        {\n            // When mutate is called:\n            onMutate: async (v) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('user');\n                // Snapshot the previous value\n                const prevUser = queryClient.getQueryData('user');\n                // Optimistically update to the new value\n                queryClient.setQueryData('user', old => {\n                    return {\n                        discord: {\n                            name: \"\",\n                            discriminator: 0,\n                            avatar: \"\"\n                        },\n                        auth: {\n                            inGuild: false,\n                            isAdmin: false,\n                            isDeveloper: false,\n                            isOwner: false,\n                            signedIn: false\n                        }\n                    };\n                });\n                history.push('/');\n                // Return a context object with the snapshotted value\n                return { prevUser }\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('user')\n            },\n        }\n    );\n    \n    const { t } = useTranslation();\n    const { error: userError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n    var userLine = \"\";\n\n    if (!userError && !isLoading && user) {\n        if (!user.auth.signedIn) {\n            return <Redirect to=\"/\" />;\n        } else {\n            userLine = <UserRow discord={user.discord} />;\n        }\n    } else if (userError && !isLoading) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <TopRow>\n            <Column>\n                <Header>\n                    <h2>{t(\"account.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"account.discordProfile\")}</h2>\n                    {userLine}\n                    <p></p>\n                    <ButtonRow>\n                        <Button name={t(\"dev.addGroup\")} onClick={() => { logoutExecutor.mutate({}); }} name={t(\"sidebar.logout\")} />\n                        <ButtonUrl href=\"https://discord.gametools.network/\" name={t(\"sidebar.help\")} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n                <Header />\n                <Card>\n                    <h2>{t(\"account.permissions.main\")}</h2>\n                    <CardRow>{t(\"account.permissions.admin\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.server\")}</CardRow>\n                    <CardRow>{t(\"account.permissions.system\")}</CardRow>\n                </Card>\n            </Column>\n        </TopRow>\n    );\n\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { Column, Card, Header, ButtonLink, ButtonRow, GroupRow, Row } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nexport function Developer() {\n    const { t } = useTranslation();\n    const { isLoading, isError, data } = useQuery('devGroups', () => OperationsApi.getDevGroups())\n    \n    var groups = [];\n\n    if (!isLoading && !isError && data) {\n        data.data.map((g, i) => {\n            groups.push(<GroupRow key={i} group={g} />);\n        });\n    } else if (isError) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"dev.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"dev.listGroups\")}</h2>\n                    {groups}\n                    <ButtonRow>\n                        <ButtonLink name={t(\"dev.addGroup\")} to=\"/group/new/\" />\n                    </ButtonRow>\n                </Card>\n            </Column>\n            <Column>\n\n            </Column>\n        </Row>\n    );\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, Switch, BanList, Column, Card, Header, ServerRotation, ServerInfoHolder, TopRow, ButtonRow, Button, PageCard, Row, VipList, LogList, TextInput, PlayerInfo, FireStarter } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\n\n/*\n    Checks string to not have special characters and be les or 30 symbols in length\n*/\nfunction checkGameString(v) {\n    // Not sure wich ones should work, this seems right, maybe some else\n    const allowed_keys = \"abcdefghijklmnopqrstuvwxyz0123456789_-.: &?!\";\n    for (let l of v) {\n        if (!allowed_keys.includes(l.toLowerCase())) return false;\n    }\n    return (v.length <= 30);\n}\n\nexport function Server(props) {\n    var sid = props.match.params.sid;\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n    const modal = useModal();\n\n    const { isError: serverError, data: server } = useQuery('server' + sid, () => OperationsApi.getServer(sid));\n    const { isError: gameError, data: runningGame } = useQuery('serverGame' + sid, () => OperationsApi.getServerGame(sid));\n\n    var serverCard = \"\";\n    var playerList = \"\";\n    var playerInGame = false;\n    var playerNicknameTeam;\n\n    var [playerName, setPlayerName] = useState(\"\");\n\n    var [addVipStatus, changeAddVipStatus] = useState({ name: \"Add Vip\", status: false });\n    var [removeVipStatus, changeRemoveVipStatus] = useState({ name: \"Remove Vip\", status: false });\n    var [unbanStatus, changeUnbanStatus] = useState({ name: \"Unban\", status: false });\n    \n    var [tabsListing, setTabsListing] = useState(\"info\");\n\n    const UnbanPlayer = useMutation(\n        v => OperationsApi.unbanPlayer(v), {\n        onMutate: async () => {\n            changeUnbanStatus({ name: \"Pending..\", status: true });\n            return { status: unbanStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeUnbanStatus(context.status);\n        },\n    }\n    );\n\n    const RemoveVip = useMutation(\n        v => OperationsApi.removeVip(v), {\n        onMutate: async () => {\n            changeRemoveVipStatus({ name: \"Pending..\", status: true });\n            return { status: removeVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeRemoveVipStatus(context.status);\n        },\n    }\n    );\n\n    const AddVip = useMutation(\n        v => OperationsApi.addVip(v), {\n        onMutate: async () => {\n            changeAddVipStatus({ name: \"Pending..\", status: true });\n            return { status: addVipStatus }\n        },\n        // If the mutation fails, use the context returned from onMutate to roll back\n        onError: (err, newTodo, context) => {\n\n        },\n        // Always refetch after error or success:\n        onSettled: (data, error, variables, context) => {\n            changeAddVipStatus(context.status);\n        },\n    }\n    );\n\n    const movePlayer = useMutation(\n        variables => OperationsApi.movePlayer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, team, name }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                //await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                // queryClient.setQueryData('serverGame' + sid, old => {\n                //     if (team === \"1\") {\n                //         old.data[0].players[1].players.push(old.data[0].players[0].players.find(e => (!e) ? false : e.name === name));\n                //         old.data[0].players[0].players = old.data[0].players[0].players.filter(p => (!p) ? false : p.name !== name);\n                //     } else {\n                //         old.data[0].players[0].players.push(old.data[0].players[1].players.find(e => (!e) ? false : e.name === name));\n                //         old.data[0].players[1].players = old.data[0].players[1].players.filter(p => (!p) ? false : p.name !== name);\n                //     }\n                //     return old;\n                // })\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                //queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const serverTabs = [\n        {\n            name: t(\"server.game.main\"),\n            callback: () => setTabsListing(\"info\"),\n        },\n        {\n            name: t(\"server.banList.main\"),\n            callback: () => setTabsListing(\"banlist\"),\n        },\n        {\n            name: t(\"server.vipList.main\"),\n            callback: () => setTabsListing(\"viplist\"),\n        },\n        {\n            name: t(\"server.firestarterList.main\"),\n            callback: () => setTabsListing(\"firestarter\"),\n        },\n        {\n            name: t(\"server.logs.main\"),\n            callback: () => setTabsListing(\"loglist\"),\n        },\n        {\n            name: t(\"server.protection.main\"),\n            callback: () => setTabsListing(\"protection\"),\n        },\n        {\n            name: t(\"server.settings.main\"),\n            callback: () => setTabsListing(\"settings\"),\n        }\n    ];\n\n    const [teamId, setTeamId] = useState(false);\n\n    const catTabs = {\n        info: (\n            <ServerInfoHolder>\n                <ServerRotation game={runningGame} rotate={id => OperationsApi.changeRotation({ sid, map: id })} />\n            </ServerInfoHolder>\n        ),\n        banlist: <BanList sid={sid} />,\n        viplist: <VipList sid={sid} />,\n        firestarter: <FireStarter sid={sid} />,\n        loglist: <LogList sid={sid} />,\n        protection: (\n            <>\n                <ServerAutomation server={server} sid={sid} />\n            </>\n        ),\n        settings: ( \n            <>\n                <ServerSettings server={server} sid={sid} />\n            </>\n        )\n    }\n\n    //if (!serverError && server && !gameError && runningGame) {\n    serverCard = (\n        <Row>\n            <Column>\n                <PageCard buttons={serverTabs} >\n                    {catTabs[tabsListing]}\n                </PageCard>\n            </Column>\n        </Row>\n    );\n    //}\n\n    var isOpsMode = false;\n    var isMovableModal = !gameError && runningGame && !(\"error\" in runningGame.data[0].players[0]) && (runningGame.data[0].players[0].players.length > 0 || runningGame.data[0].players[1].players.length > 0) && (runningGame.data[0].players[0].players !== undefined || runningGame.data[0].players[1].players.players !== undefined );\n    //console.log(runningGame.data[0].players[0].players.length)\n    if (!gameError && runningGame && isMovableModal) {\n\n        isOpsMode = runningGame.data[0].info.mode === \"Operations\";\n\n        var f1 = runningGame.data[0].players[0].players.find(e => (!e) ? false : e.name === playerName);\n        var f2 = runningGame.data[0].players[1].players.find(e => (!e) ? false : e.name === playerName);\n\n        if (f1 !== undefined) {\n            playerNicknameTeam = \"1\";\n        } else if(f2 !== undefined) {\n            playerNicknameTeam = \"2\";\n        } else {\n            isMovableModal = false;\n        }\n\n        var playerInGame = (playerName !== \"\") &&\n            (\n                (f1 !== undefined) || (f2 !== undefined)\n            );\n\n        playerList = (\n            <TopRow>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamOne\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"0\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer} giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.players.teamTwo\")}</h2>\n                        <PlayerInfo game={runningGame} team=\"1\" sid={sid} onMove={movePlayer} banModal={ServerBanPlayer} kickModal={ServerKickPlayer}  giveVip={AddVip} removeVip={RemoveVip} /> \n                    </Card>\n                </Column>\n            </TopRow>\n        )\n    }\n\n    const movePlayerPopup = (vars) => {\n        if (isMovableModal) {\n            movePlayer.mutate(vars);\n        } else {\n            modal.show(\n                <>\n                    <h2>Player is not found on the server!</h2>\n                    <p>Choose a side to move player to, if you think it is an error.</p>\n                    <ButtonRow>\n                        <h5 style={{margin: \"0 6px 0 12px\"}}>Team 1</h5>\n                        <Switch checked={teamId} callback={(v) => setTeamId(v)}/>\n                        <h5 style={{margin: \"0\"}}>Team 2</h5>\n                    </ButtonRow>\n                    <Button disabled={playerName === \"\"} name=\"Move\" callback={_ => {movePlayer.mutate({ sid, team: teamId ? \"1\" : \"2\", name: playerName }); modal.close()}} />\n                </>\n            );\n        }\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"server.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            {serverCard}\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"server.console.main\")}</h2>\n                        <Row>\n                            <TextInput name=\"Player name\" callback={e => setPlayerName(e.target.value)} style={{\n                                marginRight: 12,\n                            }}/>\n                            <ButtonRow>\n                                <Button disabled={playerName === \"\"} name=\"Kick\" callback={_ => modal.show(<ServerKickPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\"} name=\"Move\" callback={_ => movePlayerPopup({ sid, team: playerNicknameTeam, name: playerName })} />\n                                <Button disabled={playerName === \"\"} name=\"Ban\" callback={_ => modal.show(<ServerBanPlayer sid={sid} eaid={playerName} />)} />\n                                <Button disabled={playerName === \"\" || unbanStatus.status} name={unbanStatus.name} callback={_ => UnbanPlayer.mutate({ sid, name: playerName, reason: \"\" })} />\n                                <Button disabled={playerName === \"\" || addVipStatus.status || isOpsMode} name={addVipStatus.name} callback={_ => AddVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                                <Button disabled={playerName === \"\" || removeVipStatus.status || isOpsMode} name={removeVipStatus.name} callback={_ => RemoveVip.mutate({ sid, name: playerName, reason: \"\" })}  />\n                            </ButtonRow>\n                        </Row>\n                    </Card>\n                </Column>\n            </Row>\n            {playerList}\n        </>\n    );\n\n}\n\nfunction ServerAutomation(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n    const [kickOnPingDisabled, setKickOnPingDisabled] = useState(false);\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n\n    useEffect(() => {\n\n        if (props.server) {\n            const { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage, minAutoPingKick } = props.server;\n            const originalServerState = { autoBanKick, autoBfbanKick, autoGlobalBanMessage, autoPingKick, autoPingKickMessage, minAutoPingKick };\n            if (serverState === null) {\n                setServerState(originalServerState);\n                setKickOnPingDisabled(autoPingKick !== 0);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                if (serverState.autoPingKick === 0) setKickOnPingDisabled(false);\n                setCanApply(newCanApply);\n            }\n           \n        }\n        \n\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.protection.title\")}</h2>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"server.protection.vBanDescription0\")}<br />\n                {t(\"server.protection.vBanDescription1\")}\n                <b>{t(\"server.protection.vBanDescription2\")}</b>\n                {t(\"server.protection.vBanDescription3\")}<br />\n                {t(\"server.protection.vBanDescription4\")}\n            </h5>\n            <Switch checked={getServerValue(\"autoBanKick\")} name={t(\"server.protection.vBanEnable\")} callback={(v) => changeSrerverState({ autoBanKick: v })}/>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"server.protection.vbanReasonDesc0\")}<br />\n                {t(\"server.protection.vbanReasonDesc1\")}\n            </h5>\n            \n            <TextInput\n                disabled={!allowedTo || (serverState && !serverState.autoBanKick)}\n                callback={(e) => changeSrerverState({ autoGlobalBanMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoGlobalBanMessage\")}\n                name={t(\"server.protection.vBanMsg\")}\n            />\n            <h5 style={{ marginTop: \"30px\" }}>{t(\"server.protection.bfbanDescription\")}<i>bfban.com</i></h5>\n            <Switch checked={getServerValue(\"autoBfbanKick\")} name={t(\"server.protection.bfbanEnable\")} callback={(v) => changeSrerverState({ autoBfbanKick: v })} />\n            <h5 style={{ marginTop: \"30px\" }}>{t(\"server.protection.pingKickDescription\")}</h5>\n            <Switch checked={kickOnPingDisabled} name={t(\"server.protection.pingKickEnable\")} callback={(v) => { setKickOnPingDisabled(v); (!v) ?changeSrerverState({ autoPingKick: 0 }) : changeSrerverState({ autoPingKick: 200 })  }} />\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") changeSrerverState({ autoPingKick: parseInt(e.target.value) })\n                        }\n                    }\n                }\n                value={(serverState) ? serverState.autoPingKick : \"\" }\n                name={t(\"server.protection.pingKickAmount\")}\n            />\n            <TextInput\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={(e) => changeSrerverState({ autoPingKickMessage: e.target.value })}\n                defaultValue={getServerValue(\"autoPingKickMessage\")}\n                name={t(\"server.protection.pingKickMsg\")}\n            />\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.protection.pingKickMinDesc\")}</h5>\n            <TextInput\n                type=\"number\"\n                disabled={!allowedTo || !kickOnPingDisabled}\n                callback={\n                    (e) => {\n                        console.log(e.target.value < 0);\n                        if (e.target.value < 0) {} else {\n                            if (e.target.value !== \"\") {\n                                changeSrerverState({ minAutoPingKick: parseInt(e.target.value) })\n                            }\n                        }\n                    }\n                }\n                defaultValue={getServerValue(\"minAutoPingKick\")}\n                value={(serverState) ? serverState.minAutoPingKick : \"\" }\n                name={t(\"server.protection.minAutoPingKick\")}\n            />\n            {   \n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\nfunction ServerSettings(props) {\n\n    var allowedTo = false;\n    if (props.server) allowedTo = true;\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n    const [serverState, setServerState] = useState(null);\n    const [canApply, setCanApply] = useState(false);\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    useEffect(() => {\n        if (props.server) {\n            const { serverName, serverAlias } = props.server;\n            const originalServerState = { serverName, serverAlias };\n            if (serverState === null) {\n                setServerState(originalServerState);\n            } else {\n                let newCanApply = false;\n                for (var i in originalServerState) {\n                    newCanApply |= serverState[i] !== originalServerState[i];\n                }\n                setCanApply(newCanApply);\n            }\n\n        }\n    }, [props.server, serverState]);\n\n    const changeSrerverState = (v) => {\n        setServerState(s => ({ ...s, ...v }));\n    }\n\n    const editServerSettings = useMutation(\n        variables => OperationsApi.editServer({ value: variables, sid: props.sid }),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('server' + props.sid);\n            }\n        }\n    );\n\n    const getServerValue = (key) => {\n        if (props.server && key in props.server) {\n            return props.server[key]\n        }\n        return \"\";\n    };\n\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.settings.title\")}</h2>\n\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.settings.nameDescription\")}</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverName: e.target.value })}\n                defaultValue={getServerValue(\"serverName\")}\n                name={t(\"server.settings.name\")}\n            />\n\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"server.settings.aliasDescription\")}</h5>\n\n            <TextInput\n                disabled={!allowedTo}\n                callback={(e) => changeSrerverState({ serverAlias: e.target.value })}\n                defaultValue={getServerValue(\"serverAlias\")}\n                name={t(\"server.settings.alias\")}\n            />\n            {\n                (props.server && canApply) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editServerSettings.mutate(\n                                serverState\n                            )\n                        } status={applyStatus} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction ServerKickPlayer(props) {\n\n    var { sid, eaid } = props;\n    const modal = useModal();\n    const { t } = useTranslation();\n    var [reason, setReason] = useState(\"\");\n    var [kickApplyStatus, setKickApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n\n    const KickPlayer = useMutation(\n        v => OperationsApi.kickPlayer(v),\n        {\n            // When mutate is called:\n            onMutate: async ({ sid, eaid, reason }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('serverGame' + sid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('serverGame' + sid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('serverGame' + sid, old => {\n                    old.data[0].players[0].players = old.data[0].players[0].players.filter(e => e.name !== eaid);\n                    old.data[0].players[1].players = old.data[0].players[1].players.filter(e => e.name !== eaid);\n                    return old;\n                })\n                setKickApplyStatus(true);\n                // Return a context object with the snapshotted value\n                return { previousGroup, sid }\n            },\n            onSuccess: () => {\n                setKickApplyStatus(null);\n                modal.close();\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (error, newTodo, context) => {\n                setKickApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setKickApplyStatus(null), 3000);\n                queryClient.setQueryData('serverGame' + context.sid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                //queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    const checkReason = (v) => (checkGameString(v)) ? setReason(v) : false;\n\n    return (\n        <>\n            <h2>{t(\"server.kickMenu.main\", {name: props.eaid})}</h2>\n            <h5 style={{maxWidth: \"400px\", margin: \"6px 0\"}}>{t(\"server.kickMenu.reasonDescription\")}</h5>\n            <TextInput name={t(\"server.kickMenu.reason\")} value={reason} callback={(e) => checkReason(e.target.value)} />\n            <ButtonRow>\n                <Button status={kickApplyStatus} name={t(\"server.kickMenu.confirm\")} disabled={reason === \"\"} callback={() => { KickPlayer.mutate({ sid, eaid, reason, playername: props.eaid, playerId: props.playerId }); history.push(`/server/${props.sid}/`); }} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (kickApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}\n\n\nfunction ServerBanPlayer(props) {\n    const modal = useModal();\n    var { sid, eaid } = props;\n    const { t } = useTranslation();\n\n    const history = useHistory();\n    const [reason, setReason] = useState(\"\");\n    const [banTime, setBanTime] = useState(0);\n    const [globalVsClassicBan, setGlobalVsClassicBan] = useState(false);\n\n    var [banApplyStatus, setBanApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n\n    const { isError: userGettingError, data: user } = useQuery('user', () => OperationsApi.user);\n\n    const BanPlayer = useMutation(\n        v => OperationsApi.banPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n                modal.close();\n            },\n        }\n    );\n\n    const GlobalBanPlayer = useMutation(\n        v => OperationsApi.globalBanPlayer(v),\n        {\n            onMutate: async () => {\n                setBanApplyStatus(true)\n            },\n            onError: (error) => {\n                setBanApplyStatus(false);\n                setError(error);\n                setTimeout(_ => setBanApplyStatus(null), 3000);\n            },\n            onSuccess: () => {\n                setBanApplyStatus(null);\n\n            },\n        }\n    );\n\n    var gid = null;\n\n    if (user) {\n        user.permissions.isAdminOf.map(\n            group => {\n                for (let someSid of group.servers) {\n                    if (someSid === sid) {\n                        gid = group.id;\n                    }\n                }\n            }\n        )\n    }\n\n    const isDisabled =\n        reason === \"\" ||\n        banTime < 0 ||\n        banApplyStatus !== null ||\n        userGettingError || !user || gid == null;\n\n    const checkReason = (v) => (checkGameString(v)) ? setReason(v) : false;\n    return (\n        <>\n            <h2 style={{ marginLeft: \"20px\" }}>{t(\"server.banMenu.main\", {name: props.eaid})} </h2>\n            <h5 style={{maxWidth: \"300px\"}} >{t(\"server.banMenu.reasonDescription\")}</h5>\n            <TextInput value={reason} name={t(\"server.banMenu.reason\")} callback={(e) => checkReason(e.target.value)} />\n            <Switch value={globalVsClassicBan} name={t(\"server.banMenu.vBanOption\")} callback={ (v) => setGlobalVsClassicBan(v) } />\n            <h5 style={{maxWidth: \"300px\"}} >{t(\"server.banMenu.tempbanDesc0\")}<br />{t(\"server.banMenu.tempbanDesc1\")}<br />{t(\"server.banMenu.tempbanDesc2\")}</h5>\n            <TextInput type={t(\"server.banMenu.tempbanAmount\")} name=\"Ban time\" defaultValue={0} callback={(e) => setBanTime(e.target.value)} disabled={globalVsClassicBan} />\n            <ButtonRow>\n                <Button\n                    name={t(\"server.banMenu.confirm\")}\n                    style={{ maxWidth: \"144px\" }}\n                    disabled={isDisabled}\n                    callback={() => {\n                        if (globalVsClassicBan) {\n                            GlobalBanPlayer.mutate({ gid, reason, name: props.eaid, playerId: props.playerId });\n                        } else {\n                            BanPlayer.mutate({ sid, eaid, reason, name: props.eaid, time: banTime, playerId: props.playerId });\n                        }\n                    }}\n                    status={banApplyStatus} />\n                <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (banApplyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n            </ButtonRow>\n        </>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\nimport { useModal, GroupLogs, VBanList, GameStatsAd, Column, Card, Header, ButtonLink, ButtonRow, Button, UserStRow, Row, ServerRow, FakeUserStRow, TextInput, SmallButton, PageCard } from \"../components\";\nimport '../locales/config';\nimport { useTranslation } from 'react-i18next';\n\nconst deleteIcon = (\n    <svg viewBox=\"0 0 24 24\" style={{ width: '16px' }}>\n        <path fill=\"currentColor\" d=\"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z\" />\n    </svg>\n);\n\n\nexport function Group(props) {\n\n    var gid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n\n    const { error: groupError, data: groups } = useQuery('groupId' + gid, () => OperationsApi.getGroup(gid), { staleTime: 30000 });\n    const { error: userError, data: user } = useQuery('user', () => OperationsApi.user);\n\n\n    const removeAdmin = useMutation(\n        variables => OperationsApi.removeGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins = old.data[0].admins.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const removeServer = useMutation(\n        variables => OperationsApi.removeServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, sid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers = old.data[0].servers.filter(server => server.id !== sid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n\n    const removeOwner = useMutation(\n        variables => OperationsApi.removeGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners = old.data[0].owners.filter(admin => admin.id !== uid);\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n\n    var group = (groups && groups.data && groups.data.length > 0) ? groups.data[0] : null;\n    const [listing, setListing] = useState(\"servers\");\n    const [settingsListing, setSettingsListing] = useState(\"account\");\n    const { t } = useTranslation();\n\n    const catListing = {\n        owners: <GroupOwners group={group} user={user} gid={gid} onDelete={removeOwner} />,\n        admins: <GroupAdmins group={group} user={user} gid={gid} onDelete={removeAdmin} />,\n        servers: <GroupServers group={group} user={user} gid={gid} onDelete={removeServer} />,\n        vbanlist: <VBanList user={user} gid={gid} />,\n        grouplogs: <GroupLogs gid={gid} />,\n    }\n\n\n    const catSettings = {\n        account: <GroupServerAccount gid={gid} user={user} group={group} />,\n        discord: <GroupDiscordSettings gid={gid} user={user} group={group} />,\n        danger: <GroupDangerZone gid={gid} user={user} group={group} />,\n    }\n\n    const pageCycle = [\n        {\n            name: t(\"group.servers.main\"),\n            callback: () => setListing(\"servers\"),\n        },\n        {\n            name: t(\"group.admins.main\"),\n            callback: () => setListing(\"admins\"),\n        },\n        {\n            name: t(\"group.owners.main\"),\n            callback: () => setListing(\"owners\"),\n        },\n        {\n            name: t(\"group.vban.main\"),\n            callback: () => setListing(\"vbanlist\"),\n        },\n        {\n            name: t(\"group.logs.main\"),\n            callback: () => setListing(\"grouplogs\"),\n        }\n    ]\n\n    const settingsCycle = [\n        {\n            name: t(\"group.account.main\"),\n            callback: () => setSettingsListing(\"account\"),\n        },\n        {\n            name: t(\"group.discord.main\"),\n            callback: () => setSettingsListing(\"discord\"),\n        },\n        {\n            name: t(\"group.danger.main\"),\n            callback: () => setSettingsListing(\"danger\"),\n        },\n    ];\n\n    if (groupError || userError || (groups && groups.data && groups.data.length === 0)) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <>\n            <Row>\n                <Column>\n                    <Header>\n                        <h2>{t(\"group.main\")}</h2>\n                    </Header>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <Card>\n                        <h2>{t(\"group.name\")} - {(group) ? group.groupName : t(\"pending\")}</h2>\n                        <p style={{ marginBottom: 0 }}>{t(\"group.id\")} {gid}</p>\n                    </Card>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={settingsCycle} maxWidth=\"500\" >\n                        {catSettings[settingsListing]}\n                    </PageCard>\n                </Column>\n            </Row>\n            <Row>\n                <Column>\n                    <PageCard buttons={pageCycle} maxWidth=\"560\" >\n                        {catListing[listing]}\n                    </PageCard>\n                 </Column>\n            </Row>\n        </>\n    );\n\n\n}\n\nfunction GroupAdmins(props) {\n\n    const modal = useModal();\n\n    var hasRights = false;\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let adminList;\n    if (props.group) {\n        adminList = [...props.group.admins];\n        adminList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeAdmins = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.admins.description0\")}<br />{t(\"group.admins.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.admins.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.admins.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.admins.add\")} callback={() => modal.show(<AddGroupAdmin gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.admins.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.admins.removeSelected\")} callback={removeAdmins} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.admins.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (props.group) ? (\n                adminList.map((admin, i) => (\n                    <UserStRow user={admin} callback={(v) => changeSelected(v, admin.id)} key={admin.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n    </>;\n}\n\n\nfunction GroupServers(props) {\n\n    var hasRights = false;\n\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n    const { t } = useTranslation();\n\n    return <>\n        <h5>{t(\"group.servers.description0\")}<br />{t(\"group.servers.description1\")}</h5>\n        {\n            (props.group) ? (\n                props.group.servers.map((server, i) => (\n                    <ServerRow server={server} key={i} button={\n                        <SmallButton\n                            name=\"Delete\"\n                            content={deleteIcon}\n                            disabled={!hasRights}\n                            vars={{ gid: props.gid, sid: server.id }}\n                            callback={props.onDelete.mutate}\n                        />\n                    } />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <ButtonLink name={t(\"group.servers.add\")} to={\"/group/\" + props.gid + \"/add/server\"} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.servers.add\")} />\n                )\n            }\n        </ButtonRow>\n    </>;\n}\n\nfunction GroupOwners(props) {\n\n    const modal = useModal();\n    const [selected, setSelected] = useState([]);\n    const { t } = useTranslation();\n\n    var hasRights = false;\n    if (props.group && props.user) hasRights = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const fakeListing = [1, 1, 1];\n\n    let ownerList;\n    if (props.group) {\n        ownerList = [...props.group.owners];\n        ownerList.sort((a, b) => Date.parse(b.addedAt) - Date.parse(a.addedAt));\n    }\n\n    const isSelected = selected.length > 0;\n\n    const changeSelected = (v, id) => {\n        setSelected(b => (!v) ? b.filter(item => item !== id) : [...b, id])\n    }\n\n    const removeOwners = () => {\n        setSelected([]);\n        selected.map((o) => props.onDelete.mutate({ gid: props.gid, uid: o }))\n    }\n\n    return <>\n        <h5>{t(\"group.owners.description0\")}<br />{t(\"group.owners.description1\")}</h5>\n        {\n            (isSelected) ? (<h5><b>{t(\"group.owners.selected\", {number: selected.length})}</b></h5>) : (<h5>{t(\"group.owners.select\")}</h5>)\n        }\n        <ButtonRow>\n            {\n                (hasRights) ? (\n                    <Button name={t(\"group.owners.add\")} callback={() => modal.show(<AddGroupOwner gid={props.group.id} callback={modal.close} />)} />\n                ) : (\n                    <Button disabled={true} name={t(\"denied\")} content={t(\"group.owners.add\")} />\n                )\n            }\n            {\n                (hasRights && isSelected) ? (\n                    <Button name={t(\"group.owners.removeSelected\")} callback={removeOwners} />\n                ) : (\n                    <Button disabled={true} name={t(\"group.owners.remove\")} />\n                )\n            }\n        </ButtonRow>\n        {\n            (ownerList) ? (\n                ownerList.map((owner, i) => (\n                    <UserStRow user={owner} callback={(v) => changeSelected(v, owner.id)} key={owner.id || i} />\n                ))\n            ) : (\n                fakeListing.map((_, i) => <FakeUserStRow key={i} />)\n            )\n        }\n        \n    </>;\n}\n\n\nfunction GroupServerAccount(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [sid, setSid] = useState(\"\");\n    const [remid, setRemid] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n            if (remid !== props.group.cookie.remid)\n                setRemid(props.group.cookie.remid);\n            if (sid !== props.group.cookie.sid)\n                setSid(props.group.cookie.sid);\n        } \n    }, [props.group]);\n\n    const editCookies = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>\n                {t(\"group.account.description0\")}<br />{t(\"group.account.description1\")}<i>accounts.ea.com</i>\n            </h5>\n            {(props.group && !props.group.validCookie) ? (\n                <p style={{ marginTop: \"0px\", border: \"1px solid var(--color-second)\", padding: \"10px 22px\", borderRadius: \"8px\", color: \"#FF7575\", background: \"var(--color-container-v2)\" }}>\n                    {t(\"cookie.invalid\")}\n                </p>\n            ) : \"\"}\n            \n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setRemid(e.target.value)} defaultValue={remid} name={\"Remid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.remid\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput type=\"password\" disabled={!allowedTo} callback={(e) => setSid(e.target.value)} defaultValue={sid} name={\"Sid\"} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"cookie.sid\")}\n                </p>\n            </Row>\n            {\n                (props.group && (sid !== props.group.cookie.sid || remid !== props.group.cookie.remid)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editCookies.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        cookie: { sid, remid }\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ): \"\"\n            }\n        </>\n    );\n}\n\nfunction GroupDiscordSettings(props) {\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [adminId, setAdminId] = useState(\"\");\n    const [modId, setModId] = useState(\"\");\n    const [serverId, setServerId] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (props.group) {\n\n            if (serverId !== props.group.discordGroupId)\n                setServerId(props.group.discordGroupId);\n\n            if (modId !== props.group.discordModRoleId)\n                setModId(props.group.discordModRoleId);\n\n            if (adminId !== props.group.discordAdminRoleId)\n                setAdminId(props.group.discordAdminRoleId);\n\n        }\n    }, [props.group]);\n\n    const editDiscordDetails = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <> \n            <GameStatsAd />\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.description0\")}<br />{t(\"group.discord.description1\")}\n            </h5>\n            <h5>\n                {t(\"group.discord.commandList\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setServerId(e.target.value)} defaultValue={serverId} name={t(\"discord.id\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.idDescription\")}\n                </p>\n            </Row>\n            <h5 style={{ marginTop: \"8px\" }}>\n                {t(\"group.discord.permDescription0\")}<br />{t(\"group.discord.permDescription1\")}\n            </h5>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setAdminId(e.target.value)} defaultValue={adminId} name={t(\"discord.adminId\")}  />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.adminIdDescription\")}\n                </p>\n            </Row>\n            <Row>\n                <TextInput disabled={!allowedTo} callback={(e) => setModId(e.target.value)} defaultValue={modId} name={t(\"discord.modId\")} />\n                <p style={{ margin: \"0 0 0 20px\", alignSelf: \"center\" }}>\n                    {t(\"discord.modIdDescription\")}\n                </p>\n            </Row>\n            {\n                (props.group && (serverId !== props.group.discordGroupId || modId !== props.group.discordModRoleId || adminId !== props.group.discordAdminRoleId)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editDiscordDetails.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        discordGroupId: serverId,\n                                        discordModRoleId: modId,\n                                        discordAdminRoleId: adminId\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n        </>\n    );\n}\n\n\nfunction GroupDangerZone(props) {\n\n    var allowedTo = false;\n    if (props.group && props.user) allowedTo = props.group.isOwner || props.user.auth.isDeveloper;\n\n    const queryClient = useQueryClient();\n\n    const [groupName, setGroupName] = useState(\"\");\n    const [applyStatus, setApplyStatus] = useState(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n\n        if (props.group && groupName !== props.group.groupName) {\n            setGroupName(props.group.groupName);    \n        }\n\n    }, [props.group]);\n\n    const editGroupName = useMutation(\n        variables => OperationsApi.editGroup(variables),\n        {\n            onMutate: async () => {\n                setApplyStatus(true);\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async () => {\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.invalidateQueries('groupId' + props.gid);\n            }\n        }\n    );\n\n    return (\n        <>\n            <h5 style={{ marginTop: \"0px\" }}>{t(\"group.danger.nameChange\")}</h5>\n            <TextInput disabled={!allowedTo} callback={(e) => setGroupName(e.target.value)} defaultValue={groupName} name={t(\"group.name\")} />\n            {\n                (props.group && (groupName !== props.group.groupName)) ? (\n                    <ButtonRow>\n                        <Button name={t(\"apply\")} disabled={!allowedTo || applyStatus !== null} callback={\n                            _ => editGroupName.mutate(\n                                {\n                                    gid: props.gid,\n                                    value: {\n                                        groupName,\n                                    }\n                                }\n                            )\n                        } status={applyStatus} />\n                    </ButtonRow>\n                ) : \"\"\n            }\n            <h5 style={{ marginTop: \"8px\" }}>{t(\"group.danger.deleteInfo0\")}<br />{t(\"group.danger.deleteInfo1\")}</h5>\n            <ButtonRow>\n                <ButtonLink style={{ color: \"#FF7575\"}} name={t(\"group.danger.delete\")} to={`/group/${props.gid}/delete/`} disabled={!allowedTo} />\n            </ButtonRow>\n        </>\n    );\n}\n\nexport function AddGroupOwner(props) {\n    var gid = props.gid;\n\n    const [nickname, setNickname] = useState(\"\");\n    const [uid, setUid] = useState(\"\");\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupOwnerExecute = useMutation(\n        variables => OperationsApi.addGroupOwner(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n                \n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].owners.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <>\n\n            <h2>{t(\"group.owners.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e)=>setNickname(e.target.value)}/>\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => setUid(e.target.value) }/>\n            <ButtonRow>\n                <Button name={t(\"group.owners.add\")} callback={() => { AddGroupOwnerExecute.mutate({ gid, uid, nickname }); props.callback();  }} />\n            </ButtonRow>\n\n        </>\n    );\n\n}\n\nexport function AddGroupAdmin(props) {\n    var gid = props.gid;\n\n    const [addAdminState, changeState] = useState({ uid: \"\", nickname: \"\", canAdd: false });\n    const { t } = useTranslation();\n\n    const queryClient = useQueryClient();\n\n\n    const AddGroupAdminExecute = useMutation(\n        variables => OperationsApi.addGroupAdmin(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid, uid, nickname }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].admins.push({ id: uid, name: nickname, addedAt: UTCNow });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const updateState = (values) => {\n        var newState = {\n            ...addAdminState,\n            ...values\n        };\n        newState.canAdd = newState.uid !== \"\";\n        changeState(newState);\n    }\n\n    const history = useHistory();\n\n    return (\n        <>\n            <h2>{t(\"group.admins.addNew\")}</h2>\n            <TextInput name={t(\"group.addMenu.nickname\")} callback={(e) => updateState({nickname: e.target.value}) } />\n            <TextInput name={t(\"group.addMenu.id\")} callback={(e) => updateState({uid: e.target.value}) } />\n            <ButtonRow>\n                <Button name={t(\"group.admins.add\")} disabled={!addAdminState.canAdd} callback={() => { AddGroupAdminExecute.mutate({ gid, uid: addAdminState.uid, nickname: addAdminState.nickname }); props.callback(); }} />\n            </ButtonRow>\n        </>\n    );\n\n}\n\n\nexport function AddGroup(props) {\n\n    const [addGroupState, changeState] = useState({\n        variables: {\n            groupName: \"\",\n            discordId: \"\",\n            adminRole: \"\",\n            modRole: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        roleDisplay: false,\n        canAdd: false\n    });\n    const { t } = useTranslation();\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n\n    const AddNewGroupExecute = useMutation(\n        variables => OperationsApi.addGroup(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                await queryClient.cancelQueries('devGroups');\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n                history.push(\"/\");\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n                queryClient.refetchQueries('devGroups');\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.roleDisplay = (newVars.discordId !== \"\");\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.groupName.length > 2);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"createGroup.main\")}</h2>\n                    \n                </Header>\n                <Card>\n                    <h5>{t(\"createGroup.description\")}</h5>\n                    <TextInput name=\"Name\" callback={(e) => { checkInputVariables({ groupName: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.discordDescription\")}\n                    </h5>\n                    <TextInput name={t(\"discord.id\")} callback={(e) => { checkInputVariables({ discordId: e.target.value }) }} />\n                    <TextInput name={t(\"discord.modId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ modRole: e.target.value }) }} />\n                    <TextInput name={t(\"discord.adminId\")} disabled={!addGroupState.roleDisplay} callback={(e) => { checkInputVariables({ adminRole: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"createGroup.cookieDescription0\")}<br />\n                        {t(\"createGroup.cookieDescription1\")}<br />\n                        {t(\"createGroup.cookieDescription2\")}<br />\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                    {t(\"createGroup.acceptDescription0\")}<br />{t(\"createGroup.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"createGroup.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => AddNewGroupExecute.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function DeleteGroup(props) {\n\n    var thisGid = props.match.params.gid;\n\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const DeleteGroupExecute = useMutation(\n        variables => OperationsApi.removeGroup(variables),\n        {\n            // When mutate is called:\n            onMutate: async ({ gid }) => {\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('devGroups')\n                // Snapshot the previous value\n                const previousGroups = queryClient.getQueryData('devGroups')\n                // Optimistically update to the new value\n                queryClient.setQueryData('devGroups', old => {\n                    if (old) {\n                        old.data = old.data.filter(group => group.id !== gid);\n                    }\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroups, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('devGroups', context.previousGroups)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('devGroups')\n            },\n        }\n    );\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.danger.delete\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.danger.main\")}</h2>\n                    <p>{t(\"group.danger.check\")}</p>\n                    <ButtonRow>\n                        <ButtonLink name={t(\"group.danger.back\")} to={\"/group/\" + thisGid} />\n                        <Button name={t(\"group.danger.confirm\")} callback={() => { DeleteGroupExecute.mutate({ gid: thisGid }); history.push(\"/dev/\"); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}\n\nexport function AddGroupServer(props) {\n    var gid = props.match.params.gid;\n\n    var name = \"\", alias = \"\";\n\n    const queryClient = useQueryClient();\n    const { t } = useTranslation();\n\n\n    const AddGroupServerExecute = useMutation(\n        variables => OperationsApi.addGroupServer(variables),\n        {\n            // When mutate is called:\n            onMutate: async({ gid, name, alias }) => {\n\n                // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n                await queryClient.cancelQueries('groupId' + gid)\n                // Snapshot the previous value\n                const previousGroup = queryClient.getQueryData('groupId' + gid)\n                // Optimistically update to the new value\n                const UTCNow = new Date(Date.now()).toUTCString();\n\n                queryClient.setQueryData('groupId' + gid, old => {\n                    old.data[0].servers.push({\n                        \"addedAt\": UTCNow,\n                        \"id\": null,\n                        \"name\": name\n                    });\n                    return old;\n                })\n                // Return a context object with the snapshotted value\n                return { previousGroup, gid }\n            },\n            // If the mutation fails, use the context returned from onMutate to roll back\n            onError: (err, newTodo, context) => {\n                queryClient.setQueryData('groupId' + context.gid, context.previousGroup)\n            },\n            // Always refetch after error or success:\n            onSettled: (data, error, variables, context) => {\n                queryClient.invalidateQueries('groupId' + context.gid)\n            },\n        }\n    );\n\n    const history = useHistory();\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"group.serverAddMenu.main\")}</h2>\n                </Header>\n                <Card>\n                    <h2>{t(\"group.serverAddMenu.description\")}</h2>\n                    <TextInput name={t(\"group.serverAddMenu.name\")} callback={(e) => { name = e.target.value }} />\n                    <TextInput name={t(\"group.serverAddMenu.alias\")} callback={(e) => { alias = e.target.value; }} />\n                    <ButtonRow>\n                        <Button name={t(\"group.servers.add\")} callback={() => { AddGroupServerExecute.mutate({ gid, alias, name }); history.push(\"/group/\" + gid); }} />\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n\n}\n\n\nexport function EditGroup(props) {\n    return (<></>);\n}\n\nexport function MakeOps(props) {\n   \n    const [addGroupState, changeState] = useState({\n        variables: {\n            server: \"\",\n            remid: \"\",\n            sid: \"\",\n        },\n        canAdd: false\n    });\n\n    const [applyStatus, setApplyStatus] = useState(null);\n    const [errorUpdating, setError] = useState({ code: 0, message: \"Unknown\" });\n    const queryClient = useQueryClient();\n    const history = useHistory();\n    const { t } = useTranslation();\n\n    const SetupOperations = useMutation(\n        variables => OperationsApi.setupOps(variables),\n        {\n            onMutate: async (variables) => {\n                setApplyStatus(true);\n                return {}\n            },\n            onSuccess: async () => {\n                setApplyStatus(null);\n            },\n            onError: async (error) => {\n                setError(error);\n                setApplyStatus(false);\n                setTimeout(_ => setApplyStatus(null), 2000);\n            },\n            onSettled: async () => {\n            }\n        }\n    );\n\n    const checkInputVariables = (newVariables) => {\n        var newGroupState = {\n            ...addGroupState,\n            variables: {\n                ...addGroupState.variables,\n                ...newVariables\n            }\n        };\n        let newVars = newGroupState.variables;\n        newGroupState.canAdd =\n            (newVars.remid.length > 1) && (newVars.sid.length > 1) && (newVars.server.length > 1);\n        changeState(newGroupState);\n    };\n\n    return (\n        <Row>\n            <Column>\n                <Header>\n                    <h2>{t(\"operations.main\")}</h2>\n                </Header>\n                <Card>\n                    <h5>\n                        {t(\"operations.description0\")}<br />\n                        {t(\"operations.description1\")}<br /> \n                        {t(\"operations.description2\")}\n                    </h5>\n                    <TextInput name=\"Server name\" callback={(e) => { checkInputVariables({ server: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.server\")}<b>{t(\"operations.owner\")}</b>{t(\"operations.cookies\")}\n                    </h5>\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.sidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.sid\")} type=\"password\" callback={(e) => { checkInputVariables({ sid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"cookie.remidDescription\")}<i>accounts.ea.com</i>\n                    </h5>\n                    <TextInput name={t(\"cookie.remid\")} type=\"password\" callback={(e) => { checkInputVariables({ remid: e.target.value }) }} />\n                    <h5 style={{ marginTop: \"8px\" }}>\n                        {t(\"operations.acceptDescription0\")}<br />{t(\"operations.acceptDescription1\")}\n                    </h5>\n                    <ButtonRow>\n                        <Button name={t(\"operations.accept\")} disabled={!addGroupState.canAdd || applyStatus !== null} status={applyStatus} callback={() => SetupOperations.mutate(addGroupState.variables)} />\n                        <h5 style={{ marginBottom: 0, alignSelf: \"center\", opacity: (applyStatus === false) ? 1 : 0 }}>Error {errorUpdating.code}: {errorUpdating.message}</h5>\n                    </ButtonRow>\n                </Card>\n            </Column>\n        </Row>\n    );\n}","import React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport Account from \"./Account\";\nimport { Developer } from \"./Developer\";\nimport { Server } from \"./Server\";\nimport { Group, AddGroupOwner, EditGroup, AddGroupAdmin, AddGroup, DeleteGroup, AddGroupServer, MakeOps } from \"./Group\";\n\n//import ABSwitch from \"../testing/ABtesting\";\n\nexport default function Views(props) {\n    return (\n        <Switch>\n\n            <Route exact path=\"/account/\" component={Account} />\n\n            <Route exact path=\"/server/:sid/\" component={Server} />\n\n            <Route exact path=\"/group/new/\" component={AddGroup} />\n            <Route exact path=\"/group/:gid/\" component={Group} />\n\n            <Route exact path=\"/group/:gid/add/server\" component={AddGroupServer} />\n            <Route exact path=\"/group/:gid/add/admin/\" component={AddGroupAdmin} />\n            <Route exact path=\"/group/:gid/add/owner/\" component={AddGroupOwner} />\n\n            <Route exact path=\"/group/:gid/edit/\" component={EditGroup} />\n            <Route exact path=\"/group/:gid/delete\" component={DeleteGroup} />\n\n            <Route exact path=\"/dev/\" component={Developer} />\n\n            <Route exact path=\"/makeops/\" component={MakeOps} />\n\n        </Switch>\n    );\n}","import React from \"react\";\nimport { useQuery } from 'react-query';\nimport { Redirect } from 'react-router-dom';\nimport { OperationsApi } from \"../api\";\n\nimport { MainPageComponent } from \"../components\";\n\nexport default function Main() {\n\n    const { isError, data: user, isLoading } = useQuery('user', () => OperationsApi.user);\n\n    if (!isLoading && !isError && user && user.auth.signedIn) {\n        return <Redirect to=\"/account/\" />\n    }\n\n    return (\n        <MainPageComponent />\n    );\n}","\nimport React, { useState } from \"react\";\nimport { HashRouter, useLocation, Route, Switch } from 'react-router-dom';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport './App.css';\nimport './fade.css';\n\nimport Views from \"./views\";\nimport Main from \"./views/Main\";\nimport { createHashHistory } from 'history';\nimport { Sidebar, PageContainer, PageColumn, ModalProvider, TopBar } from \"./components\";\n\n\nexport const history = createHashHistory();\n\nexport const APP_VERSION = \"1.0.3\";\n\nfunction App() {\n\n    let location = useLocation();\n\n    const [sidebarVisisble, hideSidebar] = useState(true);\n\n    return (\n        <div className=\"App\"style={{display: \"flex\", flexDirection: \"column\"}}>\n            <HashRouter>\n                <ModalProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Main} />\n                        <Route>\n                            <TopBar hideSidebar={_ => hideSidebar(!sidebarVisisble) }/>\n                            <div style={{display: \"flex\", flexDirection: \"row\"}}>\n                                <Sidebar visible={sidebarVisisble} />\n                                <TransitionGroup component={PageContainer}>\n                                    <CSSTransition key={location.hash} classNames=\"fade\" timeout={200}>\n                                        <PageColumn>\n                                            <Views />\n                                        </PageColumn>\n                                    </CSSTransition>\n                                </TransitionGroup>\n                            </div>\n                        </Route>\n                    </Switch>\n                </ModalProvider>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { QueryClient, QueryClientProvider } from 'react-query'\n\nimport App from './App';\n\n\nconst queryClient = new QueryClient();\n\n// Browser rendering\n\nReactDOM.render(\n\n    <React.StrictMode> \n        <QueryClientProvider client={queryClient}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </QueryClientProvider>\n    </React.StrictMode>,\n\n    document.getElementById('root')\n\n);\n\n"],"sourceRoot":""}